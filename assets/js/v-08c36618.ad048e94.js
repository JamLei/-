"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[3907],{32465:(n,t,s)=>{s.r(t),s.d(t,{data:()=>a});const a={key:"v-08c36618",path:"/html/04-%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0.html",title:"4. 表单元素",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"4.1. 文本输入",slug:"_4-1-文本输入",children:[]},{level:2,title:"4.2. 选择",slug:"_4-2-选择",children:[]},{level:2,title:"4.3. 按钮",slug:"_4-3-按钮",children:[]},{level:2,title:"4.4. 其他控件",slug:"_4-4-其他控件",children:[]}],filePathRelative:"html/04-表单元素.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},55579:(n,t,s)=>{s.r(t),s.d(t,{default:()=>o});const a=(0,s(66252).uE)('<h1 id="_4-表单元素" tabindex="-1"><a class="header-anchor" href="#_4-表单元素" aria-hidden="true">#</a> 4. 表单元素</h1><blockquote><p>对于后端程序员而言，表单元素是最重要的元素。</p></blockquote><p>在现实生活中，表单是一个含有空白区域供你填写的文档。HTML 借助这个概念定义了一类元素，这些元素可以让网站收集访问者的信息。这些元素有个『额外』的名称：<strong>表单控件</strong> 。</p><blockquote><p>表单控件是一套元素的总称，而非单指某一个元素。</p></blockquote><p>从逻辑作用上分类，表单元素分为：</p><ul><li><p>要用到键盘的：供用户输入、填写文本信息。这类表单元素有：单行文本框、密码框、文本域。</p></li><li><p>要用到鼠标的：供用户进行选择。这类表单元素有单选按钮、复选按钮、下拉列表。</p></li><li><p>按钮。这类表单元素有提交按钮、重置按钮、图片按钮。</p></li></ul><p>所有的表单控件都 <strong>必须</strong> 位于 <code>&lt;form&gt;</code> 元素中，每个 <code>&lt;form&gt;</code> 元素都应该设置其 <strong>action</strong> 属性，通常还要设置 <strong>method</strong> 属性。</p><ul><li><p><strong>action</strong> 属性的值是服务器上一个 URL，表示本页面所收集的用户信息提交到何处。</p></li><li><p><strong>method</strong> 属性的值有两种：<strong>get</strong> 和 <strong>post</strong>， 表示提交数据的方式。默认提交方式是 <code>get</code> 。</p></li></ul><blockquote><p><code>&lt;form&gt;</code> 元素的 <strong>action</strong> 属性和 <strong>method</strong> 属性不会影响到其显示效果。它们两个是用于与向后台服务器提交数据的元素。</p></blockquote><p>使用 <strong>get</strong> 方法提交表单数据时，表单中的值被附加在由 <strong>action</strong> 属性所指定的 URL 的末尾。使用 <strong>post</strong> 时，表单中的值会放在 HTTP 头信息中进行发送。</p><p>简短的、不敏感的数据可以使用 <code>get</code> 方式提交（例如用于查询和删除的数据）否则就使用 <code>post</code> 方式提交（例如用于新增和修改的数据）。</p><h2 id="_4-1-文本输入" tabindex="-1"><a class="header-anchor" href="#_4-1-文本输入" aria-hidden="true">#</a> 4.1. 文本输入</h2><p><code>&lt;input&gt;</code> 是元素用来创建多种不同的表单控件，其 <strong>type</strong> 属性值决定了它要创建哪种控件。</p><p>当用户向表单中输入信息时，服务器需要知道每条数据来源于哪个表单控件。每个表单控件都需要一个 <strong>name</strong> 属性，它的 <strong>值</strong> 将作为发送到后台数据中的『键值对』中的 <strong>键</strong> 。</p><p><code>&lt;input type=&quot;text&quot;&gt;</code> 当 <strong>type</strong> 属性值为 <strong>text</strong> 时，<code>&lt;input&gt;</code> 元素会创建一个单行文本框。</p><p>可以使用 <strong>maxlength</strong> 属性来限制用户在文本区域中输入的字符的数量。它的值是用户可以输入字符的最大数量。</p><hr><p><code>&lt;input type=&quot;password&quot;&gt;</code> 当 <strong>type</strong> 属性值为 <strong>password</strong> 时，<code>&lt;input&gt;</code> 元素会创建一个和单行文本框类似的输入框，唯一不同的是输入的文字会被掩盖起来。</p><p>密码框也有 <strong>name</strong> 和 <strong>maxlength</strong> 属性可用。</p><p><strong>name</strong> 属性的 <strong>值</strong> 将作为发送到后台数据中的『键值对』中的<strong>键</strong>。</p><hr><p><code>&lt;textarea&gt;</code> 元素用来创建多行文本框，与 <code>&lt;input&gt;</code>元素不同，它并非空元素，其起始标签和结束标签之间可以有文本内容，这些内容在页面上会显示在文本框中。</p><h2 id="_4-2-选择" tabindex="-1"><a class="header-anchor" href="#_4-2-选择" aria-hidden="true">#</a> 4.2. 选择</h2><p><code>&lt;input type=&quot;radio&quot;&gt;</code>，单选按钮只让用户从一系列选项中选择其中一个，即多选一。多选一的关键在于，让多个单选按钮的 <strong>name</strong> 属性值一样。</p><p><strong>name</strong> 属性的 <strong>值</strong> 将作为发送到后台数据中的『键值对』中的 <strong>键</strong> 。</p><p><strong>checked</strong> 属性值是一个 boolean 属性值<small>（本质上是一个字符串类型，只不过该字符串只能是 <code>&quot;true&quot;</code> 或者 <code>&quot;false&quot;</code> 两者之一）</small>，它用来表示本单选按钮初始状态是否被选中，一组单选按钮最多仅有一个使用本属性。</p><p><code>&lt;input type=&quot;checkbox&quot;&gt;</code>，复选框和单选框类似，不同的是它允许多个同时被选中。它的 <strong>name</strong> 属性、<strong>value</strong> 属性 和 <strong>checked</strong> 属性，与单选框基本相同。</p><p><code>&lt;select&gt;</code> 被称作下拉列表框（也被称为选择框），它让用户在一个下拉列表中选择其中的一个选项。<code>&lt;select&gt;</code> 元素用来创建下拉列表框，其中必须包含至少两个 <code>&lt;option&gt;</code> 元素。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><p><code>&lt;select&gt;</code> 元素的 <strong>name</strong> 属性的 <strong>值</strong> 将作为发送到后台数据中的『键值对』中的<strong>键</strong>。</p></li><li><p><code>&lt;option&gt;</code> 元素的 <strong>value</strong> 属性的 <strong>值</strong> 将作为发送到后台数据中的『键值对』中的<strong>值</strong>。</p></li></ul><p>一组 <code>&lt;option&gt;</code> 选项中，仅有一个可用 <strong>selected</strong> 属性，表示该选项默认被选中。</p><h2 id="_4-3-按钮" tabindex="-1"><a class="header-anchor" href="#_4-3-按钮" aria-hidden="true">#</a> 4.3. 按钮</h2><p>从功能上分，按钮分为三种：</p><ul><li>提交<small>（Submit）</small>按钮</li><li>重置<small>（Reset）</small>按钮</li><li>普通按钮</li></ul><p>使用 <code>&lt;input&gt;</code> 元素来创建按钮时，它们分别对应 <strong>type</strong> 属性值为：<strong>submit</strong>、<strong>reset</strong> 和 <strong>button</strong> 。</p><p>提交按钮会导致表单数据的提交；重置按钮会让表单中的数据回复为初始值（如果有的话）；普通按钮需要结合 JavaScript 使用，否则点击时无任何效果。</p><p>这三种按钮都可用 <strong>value</strong> 属性，其值为按钮上所显示的文字信息。</p><p>HTML 新引入了 <code>&lt;button&gt;</code> 元素用以专门表示按钮。<code>&lt;button&gt;</code> 按钮是双标签元素，其中文字内容为按钮上所显示的文字信息。</p><p>建议使用 <code>&lt;button&gt;</code> 元素，而非 <code>&lt;input&gt;</code> 元素来表示按钮。</p><h2 id="_4-4-其他控件" tabindex="-1"><a class="header-anchor" href="#_4-4-其他控件" aria-hidden="true">#</a> 4.4. 其他控件</h2><p><code>&lt;input type=&quot;hidden&quot;&gt;</code> 隐藏表单控件不会在页面上显示，但是提交表单时它的数据也会提交至服务器。</p><p>在使用表单控件时，常常会需要在表单控件旁边放置文本信息来描述它的作用。此时可以使用 <code>&lt;label&gt;</code> 元素。</p><p>可以通过两种方式来使用 <code>&lt;label&gt;</code> 元素：</p><ul><li><p>将文本内容和表单元素都『包』在 <code>&lt;label&gt;</code> 元素中。</p></li><li><p>与表单控件分开，使用 <code>&lt;label&gt;</code> 的 <strong>for</strong> 属性来指明与表单控件的关联关系。<strong>for</strong> 属性的值是与 <code>&lt;label&gt;</code> 有关联关系的表单控件的 <strong>id</strong> 属性值。</p></li></ul><p>可将多个表单控件至于一个 <code>&lt;fieldset&gt;</code> 元素中，逻辑上意味着这些表单控件是一个有关联的整体。外观上，它们会被一个边框包围着。</p><p><code>&lt;fieldset&gt;</code> 元素的第一个子元素必为 <code>&lt;legend&gt;</code> 元素，<code>&lt;legend&gt;</code> 所包含的文字内容将成为这个整体的标题，并显示在页面上。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">&gt;</span></span>健康信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>legend</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>\n            身高：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>\n            体重：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',47),o={render:function(n,t){return a}}}}]);
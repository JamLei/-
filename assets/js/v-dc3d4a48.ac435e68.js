"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[8533],{66128:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-dc3d4a48",path:"/docker-install/07-springboot.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"docker-install/07-springboot.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},41045:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(66252).uE)('<ul><li><p>Dockerfile</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>FROM openjdk:8-jre-alpine\nEXPOSE 8080\nARG JAR_FILE\nADD target/${JAR_FILE} app.jar\nENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;/app.jar&quot;]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>docker-compose.xml</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">test</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n    <span class="token key atrule">context</span><span class="token punctuation">:</span> $PWD/finance<span class="token punctuation">-</span>order\n    <span class="token key atrule">dockerfile</span><span class="token punctuation">:</span> Dockerfile\n    <span class="token key atrule">args</span><span class="token punctuation">:</span>\n      <span class="token key atrule">JAR_FILE</span><span class="token punctuation">:</span> finance<span class="token punctuation">-</span>order.jar\n  <span class="token key atrule">image</span><span class="token punctuation">:</span> user<span class="token punctuation">-</span>service\n  <span class="token key atrule">container_name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span><span class="token number">4321</span>\n  <span class="token key atrule">mem_limit</span><span class="token punctuation">:</span> 512m <span class="token comment"># 限定 docker 容器内存</span>\n  <span class="token key atrule">environment</span><span class="token punctuation">:</span>    <span class="token comment"># 限定 rocker 容器内的 jvm 内存分配</span>\n    <span class="token punctuation">-</span> <span class="token string">&quot;JAVA_OPTS=-Xms512m -Xmx512m -Xmn256m&quot;</span>\n  <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">&quot;host&quot;</span> <span class="token comment"># 1</span>\n  <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token string">&quot;--server.port=4321 --spring.profiles.active=pro&quot;</span> <span class="token comment"># 2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li></ul><p>这里的 1 和 2 处是为了解决这样的一个问题：spring-boot 项目在注册中心（Eureka、Nacos）注册的自己 IP 是 docker 容器的虚拟 IP <code>17.xxx.xxx.xxx</code> ，很显然，是无法调用的。</p><p>因此这里使用 <code>network_mode: &quot;host&quot;</code> ，这种情况下 docker 容器直接使用宿主机的 IP 和端口，不过此时，ports 属性就无法使用了。</p><p>如果，我们又不想在 spring-boot 项目写死项目的端口，而又想避免 8080 端口冲突，那么就要使用 command 属性去指定启动 spring-boot 项目是的端口。</p>',4),p={render:function(n,s){return e}}}}]);
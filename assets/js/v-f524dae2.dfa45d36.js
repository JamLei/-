"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[2026],{74270:(t,e,d)=>{d.r(e),d.d(e,{data:()=>l});const l={key:"v-f524dae2",path:"/css/07-%E7%9B%92%E6%A8%A1%E5%9E%8B.html",title:"盒模型",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"css/07-盒模型.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},89320:(t,e,d)=>{d.r(e),d.d(e,{default:()=>r});const l=(0,d(66252).uE)('<h1 id="盒模型" tabindex="-1"><a class="header-anchor" href="#盒模型" aria-hidden="true">#</a> 盒模型</h1><p>如前所述，盒模型是 CSS 的最核心概念。CSS 认为每个元素都位于各自的盒子中。</p><p>CSS中的盒子有多种，不同种类的盒子对于属性的呈现会有区别。常用的盒子种类有三种：</p><ul><li><p>block（块），例如 <code>&lt;p&gt;</code> 和 <code>&lt;div&gt;</code></p></li><li><p>inline（内联），例如 <code>&lt;a&gt;</code> 和 <code>&lt;span&gt;</code></p></li><li><p>inline-block（内联块），例如 <code>&lt;img&gt;</code></p></li></ul><p>这三种盒子的区别主要体现在两个要素上：<strong>是否可指定大小</strong> 和 <strong>是否独占一行</strong> 。</p><table><thead><tr><th style="text-align:center;">盒子类型</th><th style="text-align:center;">指定大小</th><th style="text-align:center;">独占一行</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">block</td><td style="text-align:center;">是</td><td style="text-align:center;">是</td><td style="text-align:center;"><code>&lt;p&gt;</code>、&lt;<code>div&gt;</code></td></tr><tr><td style="text-align:center;">inline</td><td style="text-align:center;">否</td><td style="text-align:center;">否</td><td style="text-align:center;"><code>&lt;a&gt;</code>、<code>&lt;span&gt;</code></td></tr><tr><td style="text-align:center;">inline-block</td><td style="text-align:center;">是</td><td style="text-align:center;">否</td><td style="text-align:center;"><code>&lt;img&gt;</code></td></tr></tbody></table><hr><p>通过 <strong>width</strong> 和 <strong>height</strong> 属性可以设置盒子的大小（前提是可设置的）。指定盒子大小类似字体大小，可以像素值、百分比 和 em 值。</p><hr><p><strong>overflow</strong> 属性告诉浏览器告诉浏览器，本元素的内容超出本元素盒子范围时该如何显示。其属性值有两个：<code>hidden | scroll</code> 。</p><p><strong>overflow</strong> 属性取值 <code>hidden</code> 时，超出盒子范围的内容将被浏览器抹去（隐藏掉）；取值为 <code>scroll</code> 时，浏览器会给盒子加上滚动条，以便于通过滚动来查看全部内容。</p><hr><p>所有的盒子都有：边框（border）、外边距（margin） 和 内边距（padding） 。</p><p>每个盒子都是有边框的，边框默认宽度为0px。</p><p>外边距是指本元素与另外元素之间的距离。</p><p>内边距是指元素的内容区与边框之间的距离。</p><p><strong>border-width</strong> 属性用来控制边框的宽度。该属性的值可以是像素值，也可以是固定的单词：<code>thin | medium | thick</code> 。</p><p><strong>border-width</strong> 作用于本元素的四个边框，可以通过四个独立的属性设置指定边框：border-top-width、border-right-width、border-bottom-width、border-left-width 。</p><hr><p>可以用 <strong>border-style</strong> 属性来控制边框的样式。该属性常用以下值：</p><table><thead><tr><th style="text-align:left;">值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">solid</td><td style="text-align:left;">一条实线</td></tr><tr><td style="text-align:left;">dotted</td><td style="text-align:left;">一串方形点</td></tr><tr><td style="text-align:left;">dashed</td><td style="text-align:left;">一条虚线</td></tr><tr><td style="text-align:left;">hidden | none</td><td style="text-align:left;">不显示任何边框</td></tr></tbody></table><p><strong>border-style</strong> 作用于本元素的四个边框，可以通过四个独立的属性设置指定边框：</p><ul><li><p>border-top-style</p></li><li><p>border-right-style</p></li><li><p>border-bottom-style</p></li><li><p>border-left-style</p></li></ul><p><strong>border-color</strong> 属性可以用来设置边框颜色，其属性值可以是 RGB 值、十六进制码 或者 CSS 颜色名称。border-color 也是有四个独立属性。</p><p><strong>border</strong> 属性允许你在一个属性中同时指定边框的宽度、样式和颜色。</p><hr><p>概念上，盒子的内部还有一个矩形区域，这个区域被称为<em>内容区</em>，默认情况下，内容区的大小和盒子的大小是一样的。</p><p><strong>padding</strong> 属性用来指定元素的内容区与元素边框之间保持多大的空隙。该属性最常用像素作单位。</p><p><strong>margin</strong> 属性用来控制盒子之间的空隙。该属性的值一般以像素给出。</p><p>如果一个盒子位于另一个盒子的上方，就会出现外边距折叠现象，即，上下两个盒子的外边距中，较大的那个会生效。</p><hr><p>每个元素的盒子有固定类型，然而，这个盒子类型是可以改变的。 <strong>display</strong> 属性允许你手动元素的盒子的类型。</p><p>该属性的值有：<code>inline</code> | <code>block</code> | <code>inline-block</code> | <code>none</code></p><p><code>none</code> 值会使元素在页面上隐藏，该元素所占据空间会被后续元素占用。</p><p>另外，<strong>visibility</strong> 属性也可以实现隐藏的效果。但是通过它实现的隐藏效果，会保留元素在页面上所占空间。</p>',35),r={render:function(t,e){return l}}}}]);
"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[2091],{82019:(t,e,l)=>{l.r(e),l.d(e,{data:()=>n});const n={key:"v-8ceb494a",path:"/utility/apache-commons/01-commons-lang3.html",title:"Commons lang3 常用方法",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"写在前面的话",slug:"写在前面的话",children:[]},{level:2,title:"ObjectUtils 工具类",slug:"objectutils-工具类",children:[]},{level:2,title:"StringUtils 工具类",slug:"stringutils-工具类",children:[]},{level:2,title:"ArrayUtils 工具类",slug:"arrayutils-工具类",children:[]}],filePathRelative:"utility/apache-commons/01-commons-lang3.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},58456:(t,e,l)=>{l.r(e),l.d(e,{default:()=>a});const n=(0,l(66252).uE)('<h1 id="commons-lang3-常用方法" tabindex="-1"><a class="header-anchor" href="#commons-lang3-常用方法" aria-hidden="true">#</a> Commons lang3 常用方法</h1><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.commons<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-lang3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="写在前面的话" tabindex="-1"><a class="header-anchor" href="#写在前面的话" aria-hidden="true">#</a> 写在前面的话</h2><p>初学者建议使用 commons-lang3，原因在于 commons-lang3 中的工具方法都写成的是静态类中的静态方法。这是典型的面向过程编程思想，非常利于初学者理解和使用。</p><p>guava 是 <em>《effective java》</em> 作者的作品，其代码风格面向对象编程风格。另外从功能上讲，gauva = commons-lang + commons-collection ，<small>其它小功能忽略不计。</small></p><p>如果确定一定不会用到除 commons-lang3 之外的其它工具类库，那么否则优先考虑使用 guava 库。</p><h2 id="objectutils-工具类" tabindex="-1"><a class="header-anchor" href="#objectutils-工具类" aria-hidden="true">#</a> ObjectUtils 工具类</h2><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">说明</th><th style="text-align:left;">详细说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>defaultIfNull</strong></td><td style="text-align:left;">用于提供默认值</td><td style="text-align:left;">检查第一个参数是否为 null。<br>不为 null，则返回第一个参数；<br>为 null，则返回第二个参数。</td></tr><tr><td style="text-align:left;"><strong>allNotNull</strong></td><td style="text-align:left;">用于参数的批量非空检查</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><strong>equals</strong></td><td style="text-align:left;">空安全的比较</td><td style="text-align:left;">被标记为过期。被 java 7 中的 <em><code>Objects.equals(Object, Object)</code></em> 所替代</td></tr></tbody></table><h2 id="stringutils-工具类" tabindex="-1"><a class="header-anchor" href="#stringutils-工具类" aria-hidden="true">#</a> StringUtils 工具类</h2><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">说明</th><th style="text-align:left;">详细说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>isEmpty</strong></td><td style="text-align:left;">检查参数字符串是否为空<small>（empty）</small></td><td style="text-align:left;"><code>null</code> 和 <code>&quot;&quot;</code> 都算作 <strong>empty</strong></td></tr><tr><td style="text-align:left;"><strong>isBlank</strong></td><td style="text-align:left;">检查字符串是否为空<small>（blank）</small></td><td style="text-align:left;"><code>null</code>、<code>&quot;&quot;</code> 和仅含空白符的字符算都算作 <strong>blank</strong></td></tr><tr><td style="text-align:left;"><strong>equals</strong></td><td style="text-align:left;">比较两个参数字符串是否相等</td><td style="text-align:left;">大小写敏感</td></tr><tr><td style="text-align:left;"><strong>join</strong></td><td style="text-align:left;">拼接字符串</td><td style="text-align:left;">将数组转换成 string，以指定字符分隔</td></tr><tr><td style="text-align:left;"><strong>split</strong></td><td style="text-align:left;">切分字符串</td><td style="text-align:left;">将字符串以指定字符分隔，返回数组</td></tr><tr><td style="text-align:left;"><strong>replace</strong></td><td style="text-align:left;">替换字符串中的指定内容</td><td style="text-align:left;">在参数 <em>text</em> 中查找 <em>searchString</em>，找到后，将 <em>searchString</em> 替换成参数 <em>replacement</em></td></tr></tbody></table><h2 id="arrayutils-工具类" tabindex="-1"><a class="header-anchor" href="#arrayutils-工具类" aria-hidden="true">#</a> ArrayUtils 工具类</h2><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">说明</th><th style="text-align:left;">详细说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>contains</strong></td><td style="text-align:left;">检查字符串中是否包含指定字符</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><strong>addAll</strong></td><td style="text-align:left;">将给定的多个数据添加到指定的数组中</td><td style="text-align:left;">返回一个新的数组</td></tr><tr><td style="text-align:left;"><strong>clone</strong></td><td style="text-align:left;">复制数组并返回</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><strong>isEmpty</strong></td><td style="text-align:left;">判断该数组是否为空</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><strong>add</strong></td><td style="text-align:left;">将给定的数据添加到指定的数组中</td><td style="text-align:left;">返回一个新的数组</td></tr><tr><td style="text-align:left;"><strong>subarray</strong></td><td style="text-align:left;">截取数组</td><td style="text-align:left;">按指定位置区间截取并返回一个新的数组。<br>区间坐标左闭右开。</td></tr><tr><td style="text-align:left;"><strong>indexOf</strong></td><td style="text-align:left;">查看数组中是否有指定的数值</td><td style="text-align:left;">存在返回 index 的数值，<br>否则返回 -1 。</td></tr><tr><td style="text-align:left;"><strong>toObject</strong></td><td style="text-align:left;">将基本类型数组转换成对象类型数组</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><strong>toPrimitive</strong></td><td style="text-align:left;">将对象类型数组转换成基本类型数组</td><td style="text-align:left;"></td></tr></tbody></table>',12),a={render:function(t,e){return n}}}}]);
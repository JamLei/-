"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[9814],{73045:(e,s,t)=>{t.r(s),t.d(s,{data:()=>o});const o={key:"v-546dbde0",path:"/vue/vue-00-devtool.html",title:"安装 vue-devtools",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Step 0：安装 Yarn",slug:"step-0-安装-yarn",children:[]},{level:2,title:"Step 1：下载 vue-devtools",slug:"step-1-下载-vue-devtools",children:[]},{level:2,title:"Step 2：编译 vue-devtools",slug:"step-2-编译-vue-devtools",children:[]},{level:2,title:"Step 3：Chrome 安装 vue-devtools",slug:"step-3-chrome-安装-vue-devtools",children:[]}],filePathRelative:"vue/vue-00-devtool.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},24307:(e,s,t)=>{t.r(s),t.d(s,{default:()=>a});const o=(0,t(66252).uE)('<h1 id="安装-vue-devtools" tabindex="-1"><a class="header-anchor" href="#安装-vue-devtools" aria-hidden="true">#</a> 安装 vue-devtools</h1><p><strong>vue-devtools</strong> 是一款基于 chrome 游览器的插件，用于调试 vue 应用，这可以极大地提高我们的调试效率。</p><p><strong>vue-devtools</strong> 可以从 chrome 商店直接下载安装，非常简单，不过对于国内程序员而言，通过这种方式安装并不太现实。因此，大多都是通过源码编译，手动安装。</p><p><strong>vue-devtools</strong> 的安装需要 <strong>Yarn</strong><small>（进行编译）</small>，因此，在安装 <strong>vue-devtools</strong> 前需要先安装 <strong>Yarn</strong> 。</p><h2 id="step-0-安装-yarn" tabindex="-1"><a class="header-anchor" href="#step-0-安装-yarn" aria-hidden="true">#</a> Step 0：安装 Yarn</h2><p>作为包管理器，<strong>NPM</strong> 不是没有竞争对手。<strong>Yarn</strong> 就是后起之秀。<small>有意思的是，可以通过 NPM 来安装 Yarn 。</small></p><blockquote><p>为了减少初学时混用两个包管理工具所带来的混乱，我们仅在编译 vue-devtools 时使用 yarn，其他场景<small>（虽然可以，但是）</small>我们仍使用 NPM 。</p></blockquote><p>通过 npm 安装 yarn：</p><pre><code>npm install -g yarn\n</code></pre><p>安装完毕后，可直接执行 <code>yarn -v</code> 命令查看 yarn 的版本，以验证是否安装成功。</p><hr><ul><li><p>查看 yarn 的中央仓库网址：</p><pre><code>yarn config get registry\n</code></pre></li><li><p>修改 yarn 的中央仓库网址：</p><pre><code>yarn config set registry http://registry.npm.taobao.org/\n</code></pre></li><li><p>查看 yarn 全局安装的命令的源码路径和二进制执行文件路径：</p><pre><code>yarn global dir\nyarn global bin\n</code></pre></li></ul><p>注意，和 npm 一样，这两个路径和局部安装无关。</p><h2 id="step-1-下载-vue-devtools" tabindex="-1"><a class="header-anchor" href="#step-1-下载-vue-devtools" aria-hidden="true">#</a> Step 1：下载 vue-devtools</h2><p>从 github 上下载 vue-devtools 。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/vuejs/vue-devtools.git\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>记住你所下载的 <strong>vue-devtools</strong> 的本地路径，接下来你要进入到这个目录中，执行后续操作。</p><h2 id="step-2-编译-vue-devtools" tabindex="-1"><a class="header-anchor" href="#step-2-编译-vue-devtools" aria-hidden="true">#</a> Step 2：编译 vue-devtools</h2><p>进入到 <strong>vue-devtools</strong> 目录，执行安装命令：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">install</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>安装过程会执行一段时间<small>（1+ 分钟）</small>，请耐心等待。</p><p><strong>install</strong> 命令执行结束后，执行编译命令：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>编译结束后，你的 vue-devtools 目录下会出现一个名为 <strong>packages</strong> 的文件夹，在这个文件夹中，又有一个名为 <strong>shell-chrome</strong> 的文件夹。记住这个 shell-chrome 文件夹，未来我们要是用到它。</p><h2 id="step-3-chrome-安装-vue-devtools" tabindex="-1"><a class="header-anchor" href="#step-3-chrome-安装-vue-devtools" aria-hidden="true">#</a> Step 3：Chrome 安装 vue-devtools</h2><ol start="0"><li><p>找到 packages 文件夹，这个文件夹下会有一个 <strong>shell-chrome</strong> 文件夹。</p></li><li><p>打开 Chrome 的『<strong>更多工具</strong>』下的『<strong>扩展程序</strong>』。</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-1.png" alt="vue-devtools-1"></p></li><li><p>查看，并确保右上角的『<strong>开发者模式</strong>』 是打开的。</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-2.png" alt="vue-devtools-2"></p></li><li><p>点击左侧的『<strong>加载已解压的扩展程序</strong>』，在弹出的窗口中，选中上述的『<strong>shell-chrome</strong>』目录，点击确定。安装结束。</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-3.png" alt="vue-devtools-3"></p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-4.png" alt="vue-devtools-4"></p></li><li><p>安装成功后是这样的：</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-5.png" alt="vue-devtools-5"></p></li><li><p>点击上图的 <code>详细信息</code> 进入瞅一眼，确保 <code>允许访问文件网址</code> 开关是打开的。</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-6.png" alt="vue-devtools-6"></p></li><li><p>在地址栏右侧固定 vue-devtools，以方便使用。</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-7.png" alt="vue-devtools-7"></p><p><code>固定</code> 后，是这样的：</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-8.png" alt="vue-devtools-8"></p></li><li><p>当你打开任意一个使用了 vue 的页面时，会看到上图的 vue-devtools 图标亮起来：</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-9.png" alt="vue-devtools-9"></p><p>如果 vue-devtools 图标没有亮起来，原因见最后。</p></li><li><p>在你的 <code>更多工具</code> &gt; <code>开发者工具</code> 中，你会发现多出来一个 vue 选项：</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-10.png" alt="vue-devtools-10"></p><p>如果你的 <code>开发者工具</code> 中没有多出来一个 vue 选项，原因见最后。</p></li><li><p>你将看到 vue-devtools 工具展现的该页面的 vue 相关信息：</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-11.png" alt="vue-devtools-11"></p></li></ol><hr><p>当你打开 vue 页面时</p><ul><li>vue-devtools 图标没有亮起来，或者</li><li>在 <code>开发者工具</code> 下死活找不到多出来的 vue 选项</li></ul><p>你点击 vue-devtools 图标，会出现如下图提示信息：</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/vue/img/vue-devtools-12.png" alt="vue-devtools-12"></p><p>这是因为，要使用 vue-devtools 的前提是，你的页面所使用的『<strong>vue.js 必须是开发版</strong>』，而不是生产版。因为 vue-devtools 所展示的信息的来源，来源于 vue.js 开发版『额外』的功能和信息。</p><p>检查你的页面上所引入的 vue.js：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token comment">&lt;!-- 这引入的是 vue.js 的开发版本。用它，用它，用它。--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- 这引入的是 vue.js 的生产版本。\n&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2.6.14&quot;&gt;&lt;/script&gt;\n--&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>『完』</p>',35),a={render:function(e,s){return o}}}}]);
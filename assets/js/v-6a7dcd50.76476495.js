"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[2995],{95693:(a,s,n)=>{n.r(s),n.d(s,{data:()=>e});const e={key:"v-6a7dcd50",path:"/java8/12-Nashorn.html",title:"Java 8 Nashorn JavaScript",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"jjs 交互式编程",slug:"jjs-交互式编程",children:[]},{level:2,title:"传递参数",slug:"传递参数",children:[]},{level:2,title:"jjs 执行 .js 文件",slug:"jjs-执行-js-文件",children:[]}],filePathRelative:"java8/12-Nashorn.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},36884:(a,s,n)=>{n.r(s),n.d(s,{default:()=>t});const e=(0,n(66252).uE)('<h1 id="java-8-nashorn-javascript" tabindex="-1"><a class="header-anchor" href="#java-8-nashorn-javascript" aria-hidden="true">#</a> Java 8 Nashorn JavaScript</h1><p>从 JDK 1.8 开始，<strong>Nashorn</strong> 取代 Rhino（JDK 1.6, JDK1.7）成为 Java 的嵌入式 JavaScript 引擎。Nashorn 完全支持 ECMAScript 5.1 规范以及一些扩展。它使用基于 JSR 292 的新语言特性，其中包含在 JDK 7 中引入的 invokedynamic ，将 JavaScript 编译成 Java 字节码。</p><blockquote><p>Nashorn JavaScript Engine 在 Java 15 已经不可用了。</p></blockquote><h2 id="jjs-交互式编程" tabindex="-1"><a class="header-anchor" href="#jjs-交互式编程" aria-hidden="true">#</a> jjs 交互式编程</h2><p><strong>jjs</strong> 是个基于 Nashorn 引擎的命令行工具。它接受一些 JavaScript 源代码为参数，并且执行这些源代码。</p><p>打开控制台，输入以下命令：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$ jjs\njjs<span class="token operator">&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span>\nHello<span class="token punctuation">,</span> World<span class="token operator">!</span>\njjs<span class="token operator">&gt;</span> <span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="传递参数" tabindex="-1"><a class="header-anchor" href="#传递参数" aria-hidden="true">#</a> 传递参数</h2><p>打开控制台，输入以下命令：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$ jjs <span class="token operator">--</span> a b c\njjs<span class="token operator">&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;字母: &#39;</span> <span class="token operator">+</span>arguments<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n字母<span class="token operator">:</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="jjs-执行-js-文件" tabindex="-1"><a class="header-anchor" href="#jjs-执行-js-文件" aria-hidden="true">#</a> jjs 执行 .js 文件</h2><p>例如，我们创建一个具有如下内容的 sample.js 文件：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>打开控制台，输入以下命令：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>$ jjs sample<span class="token punctuation">.</span>js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>以上程序输出结果为：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Hello World!\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',17),t={render:function(a,s){return e}}}}]);
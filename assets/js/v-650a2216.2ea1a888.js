"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[9021],{47026:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-650a2216",path:"/junit/JUnit-06-spring-boot.html",title:"SpringBoot 中使用 JUnit",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"SpringBoot 所使用的 JUnit 版本",slug:"springboot-所使用的-junit-版本",children:[]},{level:2,title:"加载配置文件",slug:"加载配置文件",children:[]},{level:2,title:"使用事务锁定测试数据库中的数据",slug:"使用事务锁定测试数据库中的数据",children:[]},{level:2,title:"单独的测试配置",slug:"单独的测试配置",children:[]},{level:2,title:"@WebMvcTest 注解",slug:"webmvctest-注解",children:[]},{level:2,title:"测试 Controller",slug:"测试-controller",children:[{level:3,title:"@MockBean",slug:"mockbean",children:[]},{level:3,title:"@SpyBean",slug:"spybean",children:[]},{level:3,title:"MockRestServiceServer（了解、自学）",slug:"mockrestserviceserver-了解、自学",children:[]}]}],filePathRelative:"junit/JUnit-06-spring-boot.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},63414:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var t=a(66252);const p=(0,t.uE)('<h1 id="springboot-中使用-junit" tabindex="-1"><a class="header-anchor" href="#springboot-中使用-junit" aria-hidden="true">#</a> SpringBoot 中使用 JUnit</h1><h2 id="springboot-所使用的-junit-版本" tabindex="-1"><a class="header-anchor" href="#springboot-所使用的-junit-版本" aria-hidden="true">#</a> SpringBoot 所使用的 JUnit 版本</h2><p>不同版本的 Spring Boot 依赖/使用了不同版本的 Junit。</p><ul><li><p>Spring Boot <code>2.1.x.RELEASE</code> 使用的是 JUnit 4 ；</p></li><li><p>Spring Boot <code>2.2.x.RELEASE</code> 使用的是 JUnit 5 。</p></li></ul><p>Junit 4 和 Junit 5 的不同导致了 Spring Boot 的 <code>2.1.x.RELEASE</code> 和 <code>2.2.1.RELEASE</code> 版本中的相关配置又有所不同。</p><p>JUnit4 与 JUnit 5 常用部分注解对比：</p><table><thead><tr><th style="text-align:left;">JUnit4</th><th style="text-align:left;">JUnit5</th></tr></thead><tbody><tr><td style="text-align:left;">@Test</td><td style="text-align:left;">@Test</td></tr><tr><td style="text-align:left;">@BeforeClass</td><td style="text-align:left;">@BeforeAll</td></tr><tr><td style="text-align:left;">@AfterClass</td><td style="text-align:left;">@AfterAll</td></tr><tr><td style="text-align:left;">@Before</td><td style="text-align:left;">@BeforeEach</td></tr><tr><td style="text-align:left;">@After</td><td style="text-align:left;">@AfterEach</td></tr><tr><td style="text-align:left;">@Ignore</td><td style="text-align:left;">@Disabled</td></tr><tr><td style="text-align:left;">@RunWith</td><td style="text-align:left;">@ExtendWith</td></tr></tbody></table><ul><li><p>Junit 5 的测试类头部</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span>extension<span class="token punctuation">.</span></span><span class="token class-name">ExtendWith</span><span class="token punctuation">;</span>\n\n<span class="token comment">// @ExtendWith(SpringExtension.class)</span>\n<span class="token annotation punctuation">@SpringBootTest</span>\n<span class="token keyword">class</span> <span class="token class-name">DemoApplicationTests</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>实际上，如果你使用的是 JUnit5，那么在 SpringBootTest 上没有必要添加 <strong>@ExtendWith</strong>，因为 @SpringBootTest 已经添加了 @ExtendWith 。</p></li><li><p>Junit 4 的测试类头部</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span></span><span class="token class-name">RunWith</span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringJUnit4ClassRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@SpringBootTest</span>\n<span class="token keyword">class</span> <span class="token class-name">DemoApplicationTests</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul><h2 id="加载配置文件" tabindex="-1"><a class="header-anchor" href="#加载配置文件" aria-hidden="true">#</a> 加载配置文件</h2><p>为了隔离开发和测试环境，我们通常会提供不同的配置文件，在其中配置不同的配置项。例如，开发和测试使用不同的数据库环境。</p><p>为此，我们通常会提供一个 <code>application-test.properties</code> 或 <code>application-test.yml</code> 配置文件用于测试。</p><p>在测试时，我们会要求 SpringBoot 去加载测试环境的相关配置。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@SpringBootTest</span>\n<span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 看这里，看这里，看这里</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringBootTestExampleApplicationTests</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;${spring.datasource.url}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span> <span class="token comment">// 可通过这种方式来验证</span>\n\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>如上例所示，在测试类的同上加上注解 <code>@ActiveProfiles(&quot;test&quot;)</code> 表示本测试类运行时启用 <code>application-test.properties</code> 或 <code>application-test.yml</code> 配置文件。</p><h2 id="使用事务锁定测试数据库中的数据" tabindex="-1"><a class="header-anchor" href="#使用事务锁定测试数据库中的数据" aria-hidden="true">#</a> 使用事务锁定测试数据库中的数据</h2><p>如果涉及测试增删改的 DAO 方法，或者是测试涉及这些 DAO 的 Service 方法，每一个 Test 方法执行结束后都会对数据库造成影响，从而极大可能影响后续 Test 方法的执行。</p><blockquote><p>因为对于第二个 Test 方法而言，数据库环境发生了变化，初始条件可能就已经不满足了。</p></blockquote><p>spring-test 可以利用事务的回滚在测试方法结束后，撤销测试方法对数据库的影响。即，测试方法对数据库的写操作最终并未提交。</p><p>在测试方法，或测试类的头上加注 <code>@Transactional</code> 和 <code>@Rollback</code> 注解即可：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@SpringBootTest</span>\n<span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Transactional</span>\n<span class="token annotation punctuation">@Rollback</span>   <span class="token comment">// 默认，可省略，与之对应的是 @Commit 注解</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringBootTestExampleApplicationTests</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>再执行测试方法时，你在输出日志中会看到类似如下的 INFO 信息：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Began transaction (1) for test context \n...\nRolled back transaction for test: \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>@Transactional</code> 和 <code>@Rollback</code> 不仅对 Dao 测试的回滚有效，对 Service 方法的测试，甚至是 Web 方法的测试也都有效。</p><h2 id="单独的测试配置" tabindex="-1"><a class="header-anchor" href="#单独的测试配置" aria-hidden="true">#</a> 单独的测试配置</h2><p>单独的测试配置的核心和目的就是：测试时，仅加载和本次测试相关的必要的配置，如果被测代码与其它代码有依赖关系，甚至可以通过 Mock 去伪造被倚赖代码。</p><blockquote><p>在这里，我们要重新捡起 SSM Java 代码配置那套东西。</p></blockquote><p>所以，先编写一个 mybatis 的测试配置类：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span> \n<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">&quot;com.woniu.example.department.outlet.dao.mysql&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token string">&quot;PROFILE_UNIT_TEST&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisTestConfig</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>destroyMethod <span class="token operator">=</span> <span class="token string">&quot;close&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">HikariDataSource</span> <span class="token function">dataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">HikariDataSource</span> ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HikariDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        ds<span class="token punctuation">.</span><span class="token function">setDriverClassName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        ds<span class="token punctuation">.</span><span class="token function">setJdbcUrl</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/scott?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=UTC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        ds<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        ds<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> ds<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">SqlSessionFactoryBean</span> <span class="token function">sqlSessionFactoryBean</span><span class="token punctuation">(</span><span class="token class-name">DataSource</span> ds<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SqlSessionFactoryBean</span> factoryBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        factoryBean<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// factoryBean.setConfigLocation(new ClassPathResource(&quot;mybatis/mybatis-config.xml&quot;));</span>\n        <span class="token comment">// factoryBean.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(&quot;mybatis/mapper/*.xml&quot;));</span>\n        <span class="token keyword">return</span> factoryBean<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token comment">/*\n    @Bean\n    public MapperScannerConfigurer mapperScannerConfigurer() {\n        MapperScannerConfigurer configurer = new MapperScannerConfigurer();\n        configurer.setBasePackage(&quot;com.woniu.example.departmentservice.outlet.dao.mysql&quot;);\n        return configurer;\n    }\n*/</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">DataSourceTransactionManager</span> <span class="token function">transactionManager</span><span class="token punctuation">(</span><span class="token class-name">DataSource</span> ds<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">DataSourceTransactionManager</span> manager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        manager<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> manager<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>接着还有其他的相关 bean 依赖以此类推来编写。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringJUnitConfig</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">MyBatisConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Transactional</span>\n<span class="token keyword">class</span> <span class="token class-name">DepartmentDaoTest</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">DepartmentDao</span> departmentDao<span class="token punctuation">;</span>\n\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li><p><strong>@SpringJUnitConfig</strong> = <code>@ExtendWith(SpringExtension.class)</code> + <code>@ContextConfiguration</code></p><p>@ExtendWith 用于指明使用哪个测试框架。</p><p>@ContextConfiguration 用于指明加载哪些 @Bean 。</p></li><li><p><strong>SpringJUnitWebConfig</strong> = <code>@ExtendWith(SpringExtension.class)</code> + <code>@ContextConfiguration</code> + <code>@WebAppConfiguration</code></p><p>@ExtendWith 用于指明使用哪个测试框架。</p><p>@ContextConfiguration 用于指明加载哪些 @Bean 。</p><p>@WebAppConfiguration 用于加载 Web 环境所依赖的 Bean 。</p></li></ul><h2 id="webmvctest-注解" tabindex="-1"><a class="header-anchor" href="#webmvctest-注解" aria-hidden="true">#</a> @WebMvcTest 注解</h2><p><strong>@WebMvcTest</strong> 是 Spring Boot 1.4 引入的 4 个新的测试注释之一：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>       @JsonTest - for testing the JSON marshalling and unmarshalling\n     @WebMvcTest - for testing the controller layer\n    @DataJpaTest - for testing the repository layer\n@RestClientTests - for testing REST clients\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>@WebMvcTest</strong> 声明来加载只包括了需要测试 web controller 的 bean 的应用上下文。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>i.e. @Controller, @ControllerAdvice, @JsonComponent, Converter/GenericConverter, Filter, WebMvcConfigurer and HandlerMethodArgumentResolver beans but not @Component, @Service or @Repository beans\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>另外，<strong>@WebMvcTest</strong> 还自动激活、配置了 Spring Security和 MockMvc 。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>By default, tests annotated with @WebMvcTest will also auto-configure Spring Security and MockMvc. \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="测试-controller" tabindex="-1"><a class="header-anchor" href="#测试-controller" aria-hidden="true">#</a> 测试 Controller</h2><p>最后这里是针对 Service 层<small>（接口）</small>的测试，对于 Controller 层的测试是缺失的。所以为了能快速测试 Controller，Spring 提供了 MockMvc 来『在不启动项目、tomcat 容器的情况下』向 Controller 发起请求。</p><p>由于使用不同的注解可以构造不同『大小』的环境<small>（Spring IoC 容器）</small>，所以常见有下面几种组合：</p><table><thead><tr><th style="text-align:left;">注解组合</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">@SpringBootTest <br> @AutoConfigureMockMvc</td><td style="text-align:left;">完整的环境，再加上 MockMvc</td></tr><tr><td style="text-align:left;">@AutoConfigureWebMvc <br> @AutoConfigureMockMvc</td><td style="text-align:left;">web 相关的环境，再加上 MockMvc</td></tr><tr><td style="text-align:left;">@WebMvcTest</td><td style="text-align:left;">上种情况的简写</td></tr><tr><td style="text-align:left;">@WebMvcTest <br> @WebAppConfiguration <br> @ContextConfiguration</td><td style="text-align:left;">web 相关的环境，再加上 MockMvc，再加上自己指定的 @Bean</td></tr></tbody></table><p>如果你的测试环境<small>（Spring IoC 容器）</small>中有 MockMvc，那么在你的 JUnit 中，你就可以通过 @Autowired 得到它，继而使用它。</p><p>下面的 JUnit 测试代码会用到 MockMvc 的一些静态的工具类，它们大多来自：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>request<span class="token punctuation">.</span></span><span class="token class-name">MockMvcRequestBuilders</span><span class="token punctuation">.</span>*<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>result<span class="token punctuation">.</span></span><span class="token class-name">MockMvcResultHandlers</span><span class="token punctuation">.</span>*<span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>result<span class="token punctuation">.</span></span><span class="token class-name">MockMvcResultMatchers</span><span class="token punctuation">.</span>*<span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@SpringBootTest</span> \n<span class="token annotation punctuation">@AutoConfigureMockMvc</span> \n<span class="token annotation punctuation">@Transactional</span>\n<span class="token annotation punctuation">@Rollback</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersControllerBestTests</span> <span class="token keyword">extends</span> <span class="token class-name">CommonTestCode</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">MockMvc</span> mockMvc<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Autowired</span> <span class="token comment">// json 转换</span>\n    <span class="token keyword">private</span> <span class="token class-name">ObjectMapper</span> objectMapper<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token annotation punctuation">@SneakyThrows</span>\n    <span class="token annotation punctuation">@WithMockUser</span><span class="token punctuation">(</span>\n            username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            password <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            authorities <span class="token operator">=</span> <span class="token string">&quot;ROLE_ADMIN&quot;</span>\n    <span class="token punctuation">)</span>\n    <span class="token comment">// @Commit</span>\n    <span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:sql-script/users.sql&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createUsersTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">ObjectNode</span> reqVo <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">createObjectNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ObjectNode</span> createOrEditUsersForm <span class="token operator">=</span> reqVo<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span><span class="token string">&quot;createOrEditUsersForm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;M&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mockMvc<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/users/createUsers&quot;</span><span class="token punctuation">)</span>\n                            <span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                            <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>reqVo<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                            <span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andDo</span><span class="token punctuation">(</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">jsonPath</span><span class="token punctuation">(</span><span class="token string">&quot;$.data.username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>所以，掌握此类写法就能让单元测试高效运行，于此同时，我们也可利用单元测试来快速调试代码，这也大大提高了我们的开发效率，可谓一举两得。</p><p>另外，Spring 也提供了两个非常有用的测试注解：<strong>@MockBean</strong> 和 <strong>@SpyBean</strong>，还有一个辅助类：<strong>MockRestServiceServer</strong> 。</p><h3 id="mockbean" tabindex="-1"><a class="header-anchor" href="#mockbean" aria-hidden="true">#</a> @MockBean</h3><p>@MockBean 注解会代理 bean 的所有方法，对于未 mock 的方法调用均是返回 null：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@WebAppConfiguration</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token class-name">WebTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">DatasourceTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">SecurityTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">UsersController</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@AutoConfigureMockMvc</span>\n<span class="token annotation punctuation">@AutoConfigureWebMvc</span>\n<span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;PROFILE_UNIT_TEST&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MockBeanTests</span> <span class="token keyword">extends</span> <span class="token class-name">CommonTestCode</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">MockMvc</span> mockMvc<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">ObjectMapper</span> objectMapper<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@MockBean</span>\n    <span class="token keyword">private</span> <span class="token class-name">UsersService</span> usersService<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token annotation punctuation">@SneakyThrows</span>\n    <span class="token annotation punctuation">@WithMockUser</span><span class="token punctuation">(</span>\n            username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            password <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            authorities <span class="token operator">=</span> <span class="token string">&quot;ROLE_ADMIN&quot;</span>\n    <span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createUsersTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Users</span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// @MockBean 注解会代理 bean 的所有方法,对于未 mock 的方法调用均是返回 null，这里的意思是针对调用 createUsers 方法的任意入参，均返回指定的结果</span>\n        <span class="token function">given</span><span class="token punctuation">(</span>usersService<span class="token punctuation">.</span><span class="token function">createUsers</span><span class="token punctuation">(</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">willReturn</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">ObjectNode</span> reqVo <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">createObjectNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ObjectNode</span> createOrEditUsersForm <span class="token operator">=</span> reqVo<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span><span class="token string">&quot;createOrEditUsersForm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;M&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mockMvc<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>\n            <span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/users/createUsers&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>reqVo<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n        <span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">andDo</span><span class="token punctuation">(</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">jsonPath</span><span class="token punctuation">(</span><span class="token string">&quot;$.data.username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><h3 id="spybean" tabindex="-1"><a class="header-anchor" href="#spybean" aria-hidden="true">#</a> @SpyBean</h3><p>@SpyBean 可达到部分 mock 的效果，未被 mock 的方法会被真实调用</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@WebAppConfiguration</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span> \n        <span class="token class-name">MybatisTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">WebTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">DatasourceTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">SecurityTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">UsersController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">UsersServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@AutoConfigureMockMvc</span>\n<span class="token annotation punctuation">@AutoConfigureWebMvc</span>\n<span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;PROFILE_UNIT_TEST&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpyBeanTests</span> <span class="token keyword">extends</span> <span class="token class-name">CommonTestCode</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">MockMvc</span> mockMvc<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">ObjectMapper</span> objectMapper<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@SpyBean</span>\n    <span class="token keyword">private</span> <span class="token class-name">UsersService</span> usersService<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token annotation punctuation">@SneakyThrows</span>\n    <span class="token annotation punctuation">@WithMockUser</span><span class="token punctuation">(</span>\n            username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            password <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            authorities <span class="token operator">=</span> <span class="token string">&quot;ROLE_ADMIN&quot;</span>\n    <span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createUsersTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Users</span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// @SpyBean可达到部分mock的效果,仅当 doReturn(&quot;&quot;).when(service).doSomething() 时，doSomething方法才被mock，</span>\n        <span class="token comment">// 其他的方法仍被真实调用。</span>\n        <span class="token comment">// 未发生实际调用</span>\n        <span class="token function">doReturn</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>usersService<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createUsers</span><span class="token punctuation">(</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">ObjectNode</span> reqVo <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">createObjectNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ObjectNode</span> createOrEditUsersForm <span class="token operator">=</span> reqVo<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span><span class="token string">&quot;createOrEditUsersForm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;M&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mockMvc<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>\n                <span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/users/createUsers&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>reqVo<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n            <span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">andDo</span><span class="token punctuation">(</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">jsonPath</span><span class="token punctuation">(</span><span class="token string">&quot;$.data.username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><h3 id="mockrestserviceserver-了解、自学" tabindex="-1"><a class="header-anchor" href="#mockrestserviceserver-了解、自学" aria-hidden="true">#</a> MockRestServiceServer（了解、自学）</h3><p><strong>MockRestServiceServer</strong> 类用于 mock 使用 RestTemplate 调用 http 接口的返回，假设我们有个接口是这样的，使用了 RestTemplate 调用 http 接口获取信息：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Validated</span>\n<span class="token annotation punctuation">@RestController</span>\n<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/test&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">TestService</span> testService<span class="token punctuation">;</span>\n    \n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/getOrderPayType&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getOrderPayType</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">JsonNode</span> jsonNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>testService<span class="token punctuation">.</span><span class="token function">getOrderPayType</span><span class="token punctuation">(</span>jsonNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;orderCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token annotation punctuation">@Service</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">TestService</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getOrderPayType</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">JsonNode</span> jsonNode <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">&quot;http://b2c-cloud-order-service/getOrderPayType?orderCode={1}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JsonNode</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> orderCode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>jsonNode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;payType&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>那么单元测试就可以这样写：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token class-name">DatasourceTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">SecurityTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">WebTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">TestController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">TestServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@AutoConfigureMockMvc</span>\n<span class="token annotation punctuation">@AutoConfigureWebMvc</span>\n<span class="token annotation punctuation">@WebAppConfiguration</span>\n<span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;PROFILE_UNIT_TEST&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MockRestServiceServerTests</span> <span class="token keyword">extends</span> <span class="token class-name">CommonTestCode</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">protected</span> <span class="token class-name">MockMvc</span> mockMvc<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token annotation punctuation">@WithMockUser</span><span class="token punctuation">(</span>\n            username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            password <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            authorities <span class="token operator">=</span> <span class="token string">&quot;ROLE_ADMIN&quot;</span>\n    <span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@SneakyThrows</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MockRestServiceServer</span> server <span class="token operator">=</span> <span class="token class-name">MockRestServiceServer</span><span class="token punctuation">.</span><span class="token function">bindTo</span><span class="token punctuation">(</span>restTemplate<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// mock http接口的返回</span>\n        server\n                <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">requestTo</span><span class="token punctuation">(</span><span class="token string">&quot;http://b2c-cloud-order-service/getOrderPayType?orderCode=C93847639357&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andRespond</span><span class="token punctuation">(</span><span class="token function">withSuccess</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;orderCode\\&quot;:\\&quot;C93847639357\\&quot;,\\&quot;payType\\&quot;:\\&quot;alipay\\&quot;}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mockMvc\n                <span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>\n                        <span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/test/getOrderPayType&quot;</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;orderCode\\&quot;:\\&quot;C93847639357\\&quot;}&quot;</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                <span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andDo</span><span class="token punctuation">(</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">jsonPath</span><span class="token punctuation">(</span><span class="token string">&quot;$.data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string">&quot;alipay&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>最后 SpringBoot 还提供了大量的各类辅助测试的注解例如 @JdbcTest、@DataRedisTest、@DataJpaTest 等等，大家有兴趣可以去研究。</p><p>附上 Spring Testing 和 SpringBoot Testing 的官方文档：</p>',61),e={href:"https://docs.spring.io/spring-framework/docs/current/reference/html/testing.html#testing",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("spring Testing"),c={href:"https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-testing.html",target:"_blank",rel:"noopener noreferrer"},l=(0,t.Uk)("spring-boot Testing"),u={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("a",e,[o,(0,t.Wm)(a)])])]),(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("a",c,[l,(0,t.Wm)(a)])])])])],64)}}}}]);
"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[8380],{10976:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-07e87bb2",path:"/interview-questions/06-spring-boot.html",title:"Spring Boot 面试题",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"1.Spring Boot 2.0 支持最低的 JDK 版本是？",slug:"_1-spring-boot-2-0-支持最低的-jdk-版本是",children:[]},{level:3,title:"2.Spring、Spring Boot、Spring Cloud 是什么关系？",slug:"_2-spring、spring-boot、spring-cloud-是什么关系",children:[]},{level:3,title:"3.Spring Boot 项目有哪些优势？",slug:"_3-spring-boot-项目有哪些优势",children:[]},{level:3,title:"4.如何将 Spring Boot 项目打包成 war 包？",slug:"_4-如何将-spring-boot-项目打包成-war-包",children:[]},{level:3,title:"5.在 Maven 项目中如何修改打包名称？",slug:"_5-在-maven-项目中如何修改打包名称",children:[]},{level:3,title:"6.Ant、Maven、Gradle 有什么区别？",slug:"_6-ant、maven、gradle-有什么区别",children:[]},{level:3,title:"7.Maven 如何设置发布的包名？",slug:"_7-maven-如何设置发布的包名",children:[]},{level:3,title:"8.Spring Boot 热部署有几种方式？",slug:"_8-spring-boot-热部署有几种方式",children:[]},{level:3,title:"9.Spring Boot 2.0 可以在 Tomcat 7 运行吗？为什么？",slug:"_9-spring-boot-2-0-可以在-tomcat-7-运行吗-为什么",children:[]},{level:3,title:"10.如何使用 Jetty 代替 Tomcat？",slug:"_10-如何使用-jetty-代替-tomcat",children:[]},{level:3,title:"11.Spring Boot 不支持以下哪个内嵌容器？",slug:"_11-spring-boot-不支持以下哪个内嵌容器",children:[]},{level:3,title:"12.Spring Boot 中配置文件有几种格式？",slug:"_12-spring-boot-中配置文件有几种格式",children:[]},{level:3,title:"13.项目中有两个配置 application.properties 和 application.yml，以下说法正确的是？",slug:"_13-项目中有两个配置-application-properties-和-application-yml-以下说法正确的是",children:[]},{level:3,title:"14.RequestMapping 和 GetMapping 有什么不同？",slug:"_14-requestmapping-和-getmapping-有什么不同",children:[]},{level:3,title:"15.以下关于 @RestController 和 @Controller 说法正确的？",slug:"_15-以下关于-restcontroller-和-controller-说法正确的",children:[]},{level:3,title:"16.如何理解 Spring Boot 中的 Stater？",slug:"_16-如何理解-spring-boot-中的-stater",children:[]},{level:3,title:"17.常见的 starter 有哪些?",slug:"_17-常见的-starter-有哪些",children:[]},{level:3,title:"18.Spring Boot Starter JDBC 和 Spring JDBC 有什么关系？",slug:"_18-spring-boot-starter-jdbc-和-spring-jdbc-有什么关系",children:[]},{level:3,title:"19.Spring Boot 有哪几种读取配置的方式？",slug:"_19-spring-boot-有哪几种读取配置的方式",children:[]},{level:3,title:"22.使用 @Value 读取中文乱码是什么原因？如何处理？",slug:"_22-使用-value-读取中文乱码是什么原因-如何处理",children:[]}],filePathRelative:"interview-questions/06-spring-boot.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},34269:(n,a,s)=>{s.r(a),s.d(a,{default:()=>p});const t=(0,s(66252).uE)('<h1 id="spring-boot-面试题" tabindex="-1"><a class="header-anchor" href="#spring-boot-面试题" aria-hidden="true">#</a> Spring Boot 面试题</h1><h3 id="_1-spring-boot-2-0-支持最低的-jdk-版本是" tabindex="-1"><a class="header-anchor" href="#_1-spring-boot-2-0-支持最低的-jdk-版本是" aria-hidden="true">#</a> 1.Spring Boot 2.0 支持最低的 JDK 版本是？</h3><p>A：JDK 6<br> B：JDK 7<br> C：JDK 8<br> D：JDK 9</p><p>答：C</p><h3 id="_2-spring、spring-boot、spring-cloud-是什么关系" tabindex="-1"><a class="header-anchor" href="#_2-spring、spring-boot、spring-cloud-是什么关系" aria-hidden="true">#</a> 2.Spring、Spring Boot、Spring Cloud 是什么关系？</h3><p>答：它们都是来自于 Spring 大家庭，Spring Boot 是在 Spring 框架的基础上开发而来，让更加方便使用 Spring；Spring Cloud 是依赖于 Spring Boot 而构建的一套微服务治理框架。</p><h3 id="_3-spring-boot-项目有哪些优势" tabindex="-1"><a class="header-anchor" href="#_3-spring-boot-项目有哪些优势" aria-hidden="true">#</a> 3.Spring Boot 项目有哪些优势？</h3><p>答：Spring Boot 项目优势如下：</p><ul><li>开发变得简单，提供了丰富的解决方案，快速集成各种解决方案提升开发效率；</li><li>配置变得简单，提供了丰富的 Starters，集成主流开源产品往往只需要简单的配置即可；</li><li>部署变得简单，其本身内嵌启动容器，仅仅需要一个命令即可启动项目，结合 Jenkins、Docker 自动化运维非常容易实现；</li><li>监控变得简单，自带监控组件，使用 Actuator 轻松监控服务各项状态。</li></ul><h3 id="_4-如何将-spring-boot-项目打包成-war-包" tabindex="-1"><a class="header-anchor" href="#_4-如何将-spring-boot-项目打包成-war-包" aria-hidden="true">#</a> 4.如何将 Spring Boot 项目打包成 war 包？</h3><p>答：在 pom.xml 里设置 <code>&lt;packaging&gt;war&lt;/packaging&gt;</code> 。</p><h3 id="_5-在-maven-项目中如何修改打包名称" tabindex="-1"><a class="header-anchor" href="#_5-在-maven-项目中如何修改打包名称" aria-hidden="true">#</a> 5.在 Maven 项目中如何修改打包名称？</h3><p>答：在 pom.xml 文件的 build 节点中，添加 finalName 节点并设置为要的名称即可，配置如下：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>warName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_6-ant、maven、gradle-有什么区别" tabindex="-1"><a class="header-anchor" href="#_6-ant、maven、gradle-有什么区别" aria-hidden="true">#</a> 6.Ant、Maven、Gradle 有什么区别？</h3><p>答：Ant、Maven、Gradle 是 Java 领域中主要有三大构建工具，它们的区别如下：</p><ul><li><p>Ant<small>（Another Neat Tool）</small>诞生于 2000 年，是由 Java 编写，采用 XML 作为构建脚本，这样就允许你在任何环境下运行构建。Ant 是 Java 领域最早的构建工具，不过因为操作复杂，慢慢的已经被淘汰了；</p></li><li><p>Maven 诞生于 2004 年，目的是解决程序员使用 Ant 所带来的一些问题，它的好处在于可以将项目过程规范化、自动化、高效化以及强大的可扩展性；</p></li><li><p>Gradle 诞生于 2009 年，是一个基于 Apache Ant 和 Apache Maven 概念的项目自动化建构工具。它使用一种基于 Groovy 的特定领域语言来声明项目设置，而不是传统的 XML。结合了前两者的优点，在此基础之上做了很多改进，它具有 Ant 的强大和灵活，又有 Maven 的生命周期管理且易于使用。</p></li></ul><p>Spring Boot 官方支持 Maven 和 Gradle 作为项目构建工具。Gradle 虽然有更好的理念，但是相比 Maven 来讲其行业使用率偏低，并且 Spring Boot 官方默认使用 Maven 。</p><h3 id="_7-maven-如何设置发布的包名" tabindex="-1"><a class="header-anchor" href="#_7-maven-如何设置发布的包名" aria-hidden="true">#</a> 7.Maven 如何设置发布的包名？</h3><p>答：在 build 节点下设置 finalName 就是发布的包名，如下代码所示：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>biapi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_8-spring-boot-热部署有几种方式" tabindex="-1"><a class="header-anchor" href="#_8-spring-boot-热部署有几种方式" aria-hidden="true">#</a> 8.Spring Boot 热部署有几种方式？</h3><p>答：Spring Boot 热部署主要有两种方式：Spring Loaded、Spring-boot-devtools。</p><ul><li><p>方式 1：Spring Loaded</p><p>在 pom.xml 文件中添加如下依赖：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springloaded<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">&gt;</span></span>此处为入口类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></li><li><p>方式 2：Spring-boot-devtools</p><p>在 pom.xml 文件中添加如下依赖：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><h3 id="_9-spring-boot-2-0-可以在-tomcat-7-运行吗-为什么" tabindex="-1"><a class="header-anchor" href="#_9-spring-boot-2-0-可以在-tomcat-7-运行吗-为什么" aria-hidden="true">#</a> 9.Spring Boot 2.0 可以在 Tomcat 7 运行吗？为什么？</h3><p>答：Spring Boot 2.0 无法在 Tomcat 7 上运行。因为 Spring Boot 2.0 使用的是 Spring Framework 5，Spring Framework 5 使用的是 Servlet 3.1，而 Tomcat 7 最高支持到 Servlet 3.0，所以 Spring Boot 2.0 无法在 Tomcat 7 上运行。</p><h3 id="_10-如何使用-jetty-代替-tomcat" tabindex="-1"><a class="header-anchor" href="#_10-如何使用-jetty-代替-tomcat" aria-hidden="true">#</a> 10.如何使用 Jetty 代替 Tomcat？</h3><p>答：在 spring-boot-starter-web 移除现有的依赖项，添加 Jetty 依赖，配置如下：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-jetty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_11-spring-boot-不支持以下哪个内嵌容器" tabindex="-1"><a class="header-anchor" href="#_11-spring-boot-不支持以下哪个内嵌容器" aria-hidden="true">#</a> 11.Spring Boot 不支持以下哪个内嵌容器？</h3><p>A：Tomcat<br> B：Jetty<br> C：Undertow<br> D：Nginx</p><p>答：D</p><p>题目解析：Jetty 容器支持如下：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-jetty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>Undertow 容器支持如下：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-undertow<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_12-spring-boot-中配置文件有几种格式" tabindex="-1"><a class="header-anchor" href="#_12-spring-boot-中配置文件有几种格式" aria-hidden="true">#</a> 12.Spring Boot 中配置文件有几种格式？</h3><p>答：Spring Boot 中有 .properties 和 .yml 两种配置文件格式，它们主要的区别是书写格式不同。</p><p>.properties 配置文件格式如下：</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">app.user.name</span> <span class="token punctuation">=</span> <span class="token attr-value">hellojava</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>.yml 配置文件格式如下：</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">app</span><span class="token punctuation">:</span>\n    <span class="token key atrule">user</span><span class="token punctuation">:</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> hellojava \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_13-项目中有两个配置-application-properties-和-application-yml-以下说法正确的是" tabindex="-1"><a class="header-anchor" href="#_13-项目中有两个配置-application-properties-和-application-yml-以下说法正确的是" aria-hidden="true">#</a> 13.项目中有两个配置 application.properties 和 application.yml，以下说法正确的是？</h3><p>A：application.properties 的内容会被忽略，只会识别 application.yml 的内容。<br> B：两个配置文件同时有效，有相同配置时，以 application.properties 文件为主。<br> C：application.yml 的内容会被忽略，只会识别 application.properties 的内容。<br> D：两个配置文件同时有效，有相同配置时，以 application.yml 文件为主。</p><p>答：B</p><h3 id="_14-requestmapping-和-getmapping-有什么不同" tabindex="-1"><a class="header-anchor" href="#_14-requestmapping-和-getmapping-有什么不同" aria-hidden="true">#</a> 14.RequestMapping 和 GetMapping 有什么不同？</h3><p>答：RequestMapping 和 GetMapping 区别如下：</p><ul><li>RequestMapping 可以支持 GET、POST、PUT 请求；</li><li>GetMapping 是一个组合注解，相当于 @RequestMapping(method = RequestMethod.GET) 。</li></ul><h3 id="_15-以下关于-restcontroller-和-controller-说法正确的" tabindex="-1"><a class="header-anchor" href="#_15-以下关于-restcontroller-和-controller-说法正确的" aria-hidden="true">#</a> 15.以下关于 @RestController 和 @Controller 说法正确的？</h3><p>A：@Controller 返回 JSON 数据<br> B：@RestController 返回 JSON 数据<br> C：@APIController 返回 JSON 数据<br> D：以上都对</p><p>答：B</p><h3 id="_16-如何理解-spring-boot-中的-stater" tabindex="-1"><a class="header-anchor" href="#_16-如何理解-spring-boot-中的-stater" aria-hidden="true">#</a> 16.如何理解 Spring Boot 中的 Stater？</h3><p>答：Stater 可以理解为启动器，它是方便开发者快速集成其他框架到 Spring 中的一种技术。比如，spring-boot-starter-data- jpa 就是把 JPA 快速集成到 Spring 中。</p><h3 id="_17-常见的-starter-有哪些" tabindex="-1"><a class="header-anchor" href="#_17-常见的-starter-有哪些" aria-hidden="true">#</a> 17.常见的 starter 有哪些?</h3><p>答：常见的 starter 如下：</p><ul><li>spring-boot-starter-web：Web 开发支持</li><li>spring-boot-starter-data-jpa：JPA 操作数据库支持</li><li>spring-boot-starter-data-redis：Redis 操作支持</li><li>spring-boot-starter-data-solr：Solr 权限支持</li><li>mybatis-spring-boot-starter：MyBatis 框架支持</li></ul><h3 id="_18-spring-boot-starter-jdbc-和-spring-jdbc-有什么关系" tabindex="-1"><a class="header-anchor" href="#_18-spring-boot-starter-jdbc-和-spring-jdbc-有什么关系" aria-hidden="true">#</a> 18.Spring Boot Starter JDBC 和 Spring JDBC 有什么关系？</h3><p>答：spring-boot-starter-jdbc 是 Spring Boot 针对 JDBC 的使用提供了对应的 Starter 包，在 Spring JDBC 上做了进一步的封装，方便在 Spring Boot 生态中更好的使用 JDBC。</p><h3 id="_19-spring-boot-有哪几种读取配置的方式" tabindex="-1"><a class="header-anchor" href="#_19-spring-boot-有哪几种读取配置的方式" aria-hidden="true">#</a> 19.Spring Boot 有哪几种读取配置的方式？</h3><p>答：Spring Boot 可以通过 @Value、@Environment、@ConfigurationProperties 这三种方式来读取。</p><p>例如，配置文件内容如下：</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">app.name</span><span class="token punctuation">=</span><span class="token attr-value">中文</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol><li><p><strong>Value 方式</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;${app.name}&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">private</span> <span class="token class-name">String</span> appName<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p><strong>Environment 方式</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">Environment</span> environment<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/index&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token class-name">String</span> hiName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 读取配置文件</span>\n        <span class="token class-name">String</span> appName <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;app.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;Hello, &quot;</span> <span class="token operator">+</span> hiName <span class="token operator">+</span> <span class="token string">&quot; |@&quot;</span> <span class="token operator">+</span> appName<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li><li><p><strong>ConfigurationProperties 方式</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// 读取配置文件，必须有 setter 方法</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/index&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token class-name">String</span> hiName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;appname:&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;Hello, &quot;</span> <span class="token operator">+</span> hiName <span class="token operator">+</span> <span class="token string">&quot; |@&quot;</span> <span class="token operator">+</span> appName<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li></ol><h3 id="_22-使用-value-读取中文乱码是什么原因-如何处理" tabindex="-1"><a class="header-anchor" href="#_22-使用-value-读取中文乱码是什么原因-如何处理" aria-hidden="true">#</a> 22.使用 @Value 读取中文乱码是什么原因？如何处理？</h3><p>答：这是因为配置文件的编码格式导致的，需要把开发工具的编码<small>（File Encoding）</small>格式设置为 UTF-8 。</p>',65),p={render:function(n,a){return t}}}}]);
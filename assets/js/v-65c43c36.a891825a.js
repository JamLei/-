"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[6165],{53506:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-65c43c36",path:"/junit/JUnit-09-spring-@sql.html",title:"Spring 中的 @Sql 注解",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"@Sql 注解",slug:"sql-注解",children:[]},{level:2,title:"@SqlConfig（了解）",slug:"sqlconfig-了解",children:[]},{level:2,title:"@SqlMergeMode（了解）",slug:"sqlmergemode-了解",children:[]}],filePathRelative:"junit/JUnit-09-spring-@sql.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},23639:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(66252).uE)('<h1 id="spring-中的-sql-注解" tabindex="-1"><a class="header-anchor" href="#spring-中的-sql-注解" aria-hidden="true">#</a> Spring 中的 @Sql 注解</h1><blockquote><p>大概我们在别处也用不上 Spring 的 @Sql 注解，主要也就是在单元测试中它才有用武之地。</p></blockquote><h2 id="sql-注解" tabindex="-1"><a class="header-anchor" href="#sql-注解" aria-hidden="true">#</a> @Sql 注解</h2><p><strong>@Sql</strong> 注解可以执行 SQL 脚本，也可以执行 SQL 语句。它既可以加上类上面，也可以加在方法上面。</p><p>默认情况下，方法上的 @Sql 注解会覆盖类上的 @Sql 注解。<small>但可以通过 @SqlMergeMode 注解来修改此默认行为。</small></p><p><strong>@Sql</strong> 有下面的属性：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">config</td><td style="text-align:left;">与注解 @SqlConfig 作用一样，用来配置 <code>注释前缀</code>、<code>分隔符</code> 等。</td></tr><tr><td style="text-align:left;">executionPhase</td><td style="text-align:left;">决定 SQL 脚本或语句什么时候会执行，默认是 BEFORE_TEST_METHOD 。</td></tr><tr><td style="text-align:left;"><strong>statements</strong></td><td style="text-align:left;">配置要一起执行的 SQL 语句。</td></tr><tr><td style="text-align:left;"><strong>scripts</strong></td><td style="text-align:left;">配置 SQL 脚本路径。</td></tr><tr><td style="text-align:left;">value</td><td style="text-align:left;">scripts 的别名，它不能和 scripts 同时配置，但 statements 可以。</td></tr></tbody></table><p>例如：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;/drop_schema.sql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/create_schema.sql&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span>scripts <span class="token operator">=</span> <span class="token string">&quot;/insert_data1.sql&quot;</span><span class="token punctuation">,</span> statements <span class="token operator">=</span> <span class="token string">&quot;insert into student(id, name) values (100, &#39;Shiva&#39;)&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ExtendWith</span><span class="token punctuation">(</span><span class="token class-name">SpringExtension</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SqlTest</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fetchRows1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> students <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForList</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> students<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span><span class="token string">&quot;/insert_more_data1.sql&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fetchRows2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> students <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForList</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> students<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ul><li><p>drop_schema.sql ：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> student<span class="token punctuation">;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>create_schema.sql ：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>\n    id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>insert_data1.sql ：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">&#39;Mohan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">&#39;Krishna&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>insert_more_data1.sql ：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">103</span><span class="token punctuation">,</span> <span class="token string">&#39;Indra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">&#39;Chandra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h2 id="sqlconfig-了解" tabindex="-1"><a class="header-anchor" href="#sqlconfig-了解" aria-hidden="true">#</a> @SqlConfig（了解）</h2><p>@SqlConfig 用于配置如何去解释 @Sql 注解中指定的 Sql 脚本。</p><blockquote><p>@SqlConfig 用于配置 @Sql 的一些个性化的行为，通常，我们不会那么有个性。</p></blockquote><p>@SqlConfig 可以用于类上，也可以用于方法上。</p><blockquote><p>@Sql 注解也有一个 config 属性，作用与 @SqlConfig 相同，不同的是作用域只在对应的 @Sql 注解范围。它的优先级也大于类注解的 @SqlConfig 。</p></blockquote><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">blockCommentStartDelimiter</td><td style="text-align:left;">多行注释开始字符，默认是 <code>/*</code> 。</td></tr><tr><td style="text-align:left;">blockCommentEndDelimiter</td><td style="text-align:left;">多行注释结束字符，默认是 <code>*/</code> 。</td></tr><tr><td style="text-align:left;">commentPrefix</td><td style="text-align:left;">单行注释前缀，默认是 <code>–</code> 。</td></tr><tr><td style="text-align:left;">commentPrefixes</td><td style="text-align:left;">指定多个单行注释前缀，默认是 <code>[&quot;–&quot;]</code></td></tr><tr><td style="text-align:left;">dataSource</td><td style="text-align:left;">指定脚本执行的数据库的名字，只有在多个数据源时需要指定</td></tr><tr><td style="text-align:left;">encoding</td><td style="text-align:left;">指定 sql 脚本文件的字符编码。</td></tr><tr><td style="text-align:left;">errorMode</td><td style="text-align:left;">配置错误模式，默认是 SqlConfig.ErrorMode 的 DEFAULT</td></tr><tr><td style="text-align:left;">separator</td><td style="text-align:left;">配置脚本语句分隔符，默认是 <code>\\n</code></td></tr><tr><td style="text-align:left;">transactionManager</td><td style="text-align:left;">指定 transactionManager bean，只有有多个 transactionManager 时需要指定</td></tr><tr><td style="text-align:left;">transactionMode</td><td style="text-align:left;">指定脚本执行的事务模式，默认是 SqlConfig.TransactionMode 的 DEFAULT</td></tr></tbody></table><p>例子：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SqlConfig</span><span class="token punctuation">(</span>commentPrefix <span class="token operator">=</span> <span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;/drop_schema.sql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/create_schema.sql&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span>scripts <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;/insert_data2.sql&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ExtendWith</span><span class="token punctuation">(</span><span class="token class-name">SpringExtension</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SqlConfigTest</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fetchRows1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> students <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForList</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> students<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span>scripts <span class="token operator">=</span> <span class="token string">&quot;/insert_more_data2.sql&quot;</span><span class="token punctuation">,</span> config<span class="token operator">=</span> <span class="token annotation punctuation">@SqlConfig</span><span class="token punctuation">(</span>commentPrefix <span class="token operator">=</span> <span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fetchRows2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> students <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForList</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> students<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>insert_data2.sql ：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment">-- Insert initial data</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">&#39;Mohan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">&#39;Krishna&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="sqlmergemode-了解" tabindex="-1"><a class="header-anchor" href="#sqlmergemode-了解" aria-hidden="true">#</a> @SqlMergeMode（了解）</h2><p>@SqlMergeMode 可以加在类上，也可以加在方法上。用于指示方法上的 @Sql 和类上 @Sql 注解配置是否合并。方法上的 @SqlMergeMode 注解优先级更高。默认值是 SqlMergeMode.MergeMode 的 OVERRIDE 。</p><blockquote><p>和 @SqlConfig 注解一样，@SqlMergeMode 注解也是用于配置 @Sql 的一些个性化的行为，通常，我们不会那么有个性。</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SqlMergeMode</span><span class="token punctuation">(</span><span class="token class-name">MergeMode</span><span class="token punctuation">.</span>MERGE<span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span><span class="token punctuation">{</span> \n    <span class="token string">&quot;/drop_schema.sql&quot;</span><span class="token punctuation">,</span> \n    <span class="token string">&quot;/create_schema.sql&quot;</span><span class="token punctuation">,</span> \n    <span class="token string">&quot;/insert_data1.sql&quot;</span> \n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ExtendWith</span><span class="token punctuation">(</span><span class="token class-name">SpringExtension</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SqlMergeModeTest</span> <span class="token punctuation">{</span>\n    \n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span>statements <span class="token operator">=</span> <span class="token string">&quot;insert into student(id, name) values (100, &#39;Shiva&#39;)&quot;</span><span class="token punctuation">)</span>    \n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fetchRows1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> students <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForList</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> students<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@SqlMergeMode</span><span class="token punctuation">(</span><span class="token class-name">MergeMode</span><span class="token punctuation">.</span>OVERRIDE<span class="token punctuation">)</span>    \n    <span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span><span class="token string">&quot;/insert_more_data1.sql&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fetchRows2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> students <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForList</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT * FROM student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> students<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>',24),p={render:function(n,s){return t}}}}]);
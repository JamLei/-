"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[6486],{42928:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-00ba3854",path:"/utility/spring-utils/SerializationUtils.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"utility/spring-utils/SerializationUtils.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},58612:(s,n,a)=>{a.r(n),a.d(n,{default:()=>t});const e=(0,a(66252).uE)('<p><span class="title">SerializationUtils</span></p><p><strong>SerializationUtils</strong> 类来自 <em>org.springframework.util</em> 包，它用于 java 的序列化与反序列化。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 序列化方法</span>\n<span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">Object</span> object<span class="token punctuation">)</span>  \n\n<span class="token comment">// 反序列化方法</span>\n<span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token punctuation">)</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',3),t={render:function(s,n){return e}}}}]);
"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[2738],{16494:(o,t,r)=>{r.r(t),r.d(t,{data:()=>n});const n={key:"v-43b2d6ea",path:"/spring-boot/03-%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE.html",title:"自动配置",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"spring-boot/03-自动配置.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},34020:(o,t,r)=>{r.r(t),r.d(t,{default:()=>p});const n=(0,r(66252).uE)('<h1 id="自动配置" tabindex="-1"><a class="header-anchor" href="#自动配置" aria-hidden="true">#</a> 自动配置</h1><p>SpringBoot 通过 <strong>自动配置</strong> 简化了大量的繁复的配置信息。</p><p>启动类 Application 中有两处特别之处：</p><ul><li><p>注解：<strong>@SpringBootApplication</strong></p></li><li><p>run 方法：<em><strong>SpringApplication.run(...)</strong></em></p></li></ul><p><strong>@SpringBootApplication</strong> 注解至少等价于以下三个注解：</p><ul><li><p><strong>@SpringBootConfiguration</strong></p><ul><li><p>该是来声明当前类是 SpringBoot 应用的配置类，<strong>一个项目中只能有一个</strong>。</p></li><li><p>因为该注解的存在，Spring 会再去【找】所有添加了 <strong>@Configuration</strong> 的类，做相应的操作。</p></li></ul></li><li><p><strong>@EnableAutoConfiguration</strong></p><ul><li><p>该注解的作用是告诉 Spring Boot 基于 <strong>.pom</strong> 文件中添加的的 starter 依赖，进行自动配置。</p></li><li><p>例如，我们引入了 <strong>spring-boot-starter-web</strong>，而这个启动器中帮我们添加了 tomcat、Spring MVC 的依赖。</p></li><li><p>SpringBoot 内部对大量的第三方库或 Spring 内部库进行了默认配置，<strong>这些配置是否生效，取决于我们是否引入了对应 starter</strong> 。</p></li></ul></li><li><p><strong>@ComponentScan</strong></p><ul><li><p>该注解提供了类似与 <code>&lt;context:component-scan&gt;</code> 标签的作用。</p></li><li><p>通过 <em>basePackageClasses</em> 或者 <em>basePackages</em> 属性来指定要扫描的包。如果没有指定这些属性，那么将从声明这个注解的类所在的包开始，扫描包及子包。</p></li><li><p>因此，<strong>启动类需要放在一个比较前/浅的包目录中</strong> 。</p></li></ul></li></ul><p><strong>spring-boot-autoconfigure.jar</strong> 中的 <strong>org.springframework.boot.autoconfigure</strong> 包下包含了各种框架/库的默认配置。</p><hr><p>由 Spring 负责提供的 用于快速整合 XXX 框架/组件的自动配置快速整合包，通常的命名规则是：<em>spring-boot-starter-xxx</em> 。例如：</p><ul><li><p><code>spring-boot-starter-tomcat</code></p></li><li><p><code>spring-boot-starter-thymleaf</code></p></li></ul><p>这种由 Spring 提供的自动配置快速整合的包，其版本信息在 spring-boot-parent 中已定义，<small>（除非是真有需要，否则）</small>不需要指定版本信息。</p><p>由 XXX 框架/组件方负责提供的用于与 Spring 快速整合的包， 通常的命名规则是： <em><strong><code>xxx-spring-boot-starter</code></strong></em> 。例如：</p><ul><li><p><code>mybatis-spring-boot-starter</code></p></li><li><p><code>druid-spring-boot-starter</code></p></li></ul><p><strong>这种由 XXX 方提供的自动配置快速整合包，需要指定版本信息。</strong></p>',14),p={render:function(o,t){return n}}}}]);
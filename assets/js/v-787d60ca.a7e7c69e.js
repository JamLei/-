"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[1908],{48090:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-787d60ca",path:"/jdbc/05-Service%E4%B8%AD%E7%9A%84%E4%BA%8B%E5%8A%A1.html",title:"Servie 层中使用事务",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"前言",slug:"前言",children:[]},{level:2,title:"通过参数传递",slug:"通过参数传递",children:[]},{level:2,title:"利用 ThreadLocal",slug:"利用-threadlocal",children:[]}],filePathRelative:"jdbc/05-Service中的事务.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},21983:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(66252).uE)('<h1 id="servie-层中使用事务" tabindex="-1"><a class="header-anchor" href="#servie-层中使用事务" aria-hidden="true">#</a> Servie 层中使用事务</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><ul><li>DAO 层是『站在数据库的角度』考虑问题，其中的每一个方法对应的是一条 SQL 语句；</li><li>Service 层是『站在人的角度』考虑问题，其中的每一个方法对应的是人的概念中的干一件事情；</li><li>人的概念中的干一件事情背后可能不止一条 SQL 语句。例如：转账。</li></ul><p>因此，一个 Service 方法可能会调用 DAO 的多个方法，而我们<small>（程序员）</small>必须保证一个 Service 方法中的多个 DAO 方法<small>（背后是执行多条 SQL 语句）</small>要在同一个事务中。这样，才能保证这是『<strong>干的一件事情</strong>』。</p><p>例如转账业务的代码逻辑如下：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 转账。从 [from] 这里转 [meney] 这么多钱给 [to]</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token keyword">int</span> fromId<span class="token punctuation">,</span> <span class="token keyword">int</span> toId<span class="token punctuation">,</span> <span class="token keyword">double</span> money<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Account</span> from <span class="token operator">=</span> accountDAO<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>fromId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Account</span> <span class="token keyword">to</span> <span class="token operator">=</span> accountDAO<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>toId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        from<span class="token punctuation">.</span><span class="token function">setMoney</span><span class="token punctuation">(</span>from<span class="token punctuation">.</span><span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">setMoney</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        accountDAO<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n        accountDAO<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 2</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>上述代码如果在 ① 处执行成功，但是在 ② 处执行错误，那么会造成 from 的钱扣了，但是 to 的钱没有增加的情况。</p><blockquote><p>关于 ② 的错误的原因不一定就是 DAO 方法写的有问题，例如，数据库 MySQL 所在的服务器断电、网络抖动导致客户端服务端连接断开等，因此，即便是你<small>（程序员）</small>的代码写的 100% 没问题，也不能保证 DAO/SQL 的执行就一定会成功。</p></blockquote><p><strong>保证多个 DAO 方法是位于同一个事务中，关键在于：它们要使用同一个 Connection 对象 。</strong></p><p>实现让多个 DAO 方法使用同一个 Connection 对象的方式有两种途径。</p><h2 id="通过参数传递" tabindex="-1"><a class="header-anchor" href="#通过参数传递" aria-hidden="true">#</a> 通过参数传递</h2><p>通过参数传递是最简单最直观的方式：Connection 对象的获得是由 Service 负责，Service 把 Connection 对象传给 DAO 方法。</p><p>只要 Service 保证传给多个 DAO 的是同一个 Connection 对象，那么这几个 DAO 方法自然使用的就是同一个 Connection 对象，自然也就在同一个事务之中。</p><p><small>为了关注核心重点问题，以下代码简化了部分与当前问题无关的部分异常处理逻辑</small></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token keyword">int</span> fromId<span class="token punctuation">,</span> <span class="token keyword">int</span> toId<span class="token punctuation">,</span> <span class="token keyword">double</span> money<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 获得 Connection 对象，并关闭『事务的自动提交』功能。</span>\n        connection <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        connection<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 执行转账业务逻辑</span>\n        <span class="token class-name">Account</span> from <span class="token operator">=</span> accountDAO<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> fromId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Account</span> <span class="token keyword">to</span> <span class="token operator">=</span> accountDAO<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> toId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        from<span class="token punctuation">.</span><span class="token function">setMoney</span><span class="token punctuation">(</span>from<span class="token punctuation">.</span><span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">setMoney</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        accountDAO<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> from<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        accountDAO<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> <span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 提交事务</span>\n        connection<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 事务回滚，撤消已成功的操作</span>\n        connection<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 关闭连接</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>connection<span class="token punctuation">.</span><span class="token function">isClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="利用-threadlocal" tabindex="-1"><a class="header-anchor" href="#利用-threadlocal" aria-hidden="true">#</a> 利用 ThreadLocal</h2><p>Service 层的代码和 DAO 层的代码的执行是在同一个线程中的，既然是在同一个线程中，那么它们必定能『看到』同一个 ThreadLocal 变量。</p><p>自定义工具类，提供 ThreadLocal 变量提供给 Service 和 DAO 使用：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCUtils</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Connection</span><span class="token punctuation">&gt;</span></span> threadLocal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Service 层在获得 Connection 对象之后，要将它放入到 ThreadLocal 中：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token keyword">int</span> fromId<span class="token punctuation">,</span> <span class="token keyword">int</span> toId<span class="token punctuation">,</span> <span class="token keyword">double</span> money<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 获得 Connection 对象，并关闭『事务的自动提交』功能。</span>\n        connection <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        connection<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 将 Connection 对象存入 ThreadLocal 中。 </span>\n        <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span>threadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 执行转账业务逻辑</span>\n        <span class="token class-name">Account</span> from <span class="token operator">=</span> accountDAO<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>fromId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Account</span> <span class="token keyword">to</span> <span class="token operator">=</span> accountDAO<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>toId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        from<span class="token punctuation">.</span><span class="token function">setMoney</span><span class="token punctuation">(</span>from<span class="token punctuation">.</span><span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">setMoney</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        accountDAO<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        accountDAO<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 提交事务</span>\n        connection<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 事务回滚，撤消已成功的操作</span>\n        connection<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 关闭连接</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>connection<span class="token punctuation">.</span><span class="token function">isClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>那么各个 DAO 的方法就自己从 ThreadLocal 中去取：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span>threadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token class-name">Account</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span>threadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',23),t={render:function(n,s){return p}}}}]);
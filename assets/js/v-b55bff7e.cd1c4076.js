"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[6211],{76835:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-b55bff7e",path:"/junit/JUnit-99-%E7%BC%96%E5%86%99%E9%AB%98%E6%95%88%E8%BF%90%E8%A1%8C%E7%9A%84%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.html",title:"编写高效运行的单元测试",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"第一版针对 Service 的单元测试",slug:"第一版针对-service-的单元测试",children:[]},{level:2,title:"单独的测试配置",slug:"单独的测试配置",children:[]},{level:2,title:"测试 Controller",slug:"测试-controller",children:[]}],filePathRelative:"junit/JUnit-99-编写高效运行的单元测试.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},32076:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var p=a(66252);const t=(0,p.uE)('<h1 id="编写高效运行的单元测试" tabindex="-1"><a class="header-anchor" href="#编写高效运行的单元测试" aria-hidden="true">#</a> 编写高效运行的单元测试</h1><p>在很多的项目中单元测试都极度匮乏，或许大家都未意识到单元测试的作用，亦或是懒得编写或是不会写。但是单元测试是必要的，可以这么说，程序员有责任编写功能代码，同时也就有责任为自己的代码编写单元测试，最终受益的也是程序员自己。</p><p>我们将深入研究 Spring 的测试框架，来探讨如何编写高效运行的单元测试。</p><blockquote><p>其实单元测试『高效不高效』的问题在 Spring Boot 项目中体现的并不是很明显，快慢差别并不是特别大。但是到了 Spring Cloud 阶段这里的快慢差异就大的令人想放弃单元测试了。因此，我们要尽早养成『高效』的编写习惯。</p></blockquote><p>先来看功能代码，这是一个创建用户的接口<small>（省略无关代码）</small>：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UsersService</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// ......</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token annotation punctuation">@Transactional</span>\n    <span class="token keyword">public</span> <span class="token class-name">Users</span> <span class="token function">createUsers</span><span class="token punctuation">(</span><span class="token class-name">CreateUsersReqVo</span> reqVo<span class="token punctuation">,</span> <span class="token class-name">UserDetails</span> userDetails<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="第一版针对-service-的单元测试" tabindex="-1"><a class="header-anchor" href="#第一版针对-service-的单元测试" aria-hidden="true">#</a> 第一版针对 Service 的单元测试</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 添加事务注解，则默认情况下测试方法执行完后事务会被回滚，结合 @commit 注解使用可让事务被提交</span>\n<span class="token annotation punctuation">@Transactional</span>\n<span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>          <span class="token comment">// for JUnit 4 </span>\n<span class="token comment">// @ExtendWith(SpringExtension.class) // for Junit 5 用这个</span>\n<span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token class-name">CoreApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersServiceNormalTests</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">UsersService</span> usersService<span class="token punctuation">;</span>\n\n<span class="token comment">//  添加此注解则事务不会回滚</span>\n<span class="token comment">//  @Commit</span>\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:sql-script/users.sql&quot;</span><span class="token punctuation">)</span>\n<span class="token comment">//  @Sql(scripts = &quot;classpath:sql-script/xxx.sql&quot;, statements = &quot;insert into users values (...)&quot;)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createUsersTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">CreateUsersReqVo</span> reqVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateUsersReqVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">CreateUsersForm</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateUsersForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        form<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        form<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        form<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        form<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span><span class="token string">&quot;M&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        reqVo<span class="token punctuation">.</span><span class="token function">setCreateOrEditUsersForm</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Users</span> users <span class="token operator">=</span> usersService<span class="token punctuation">.</span><span class="token function">createUsers</span><span class="token punctuation">(</span>reqVo<span class="token punctuation">,</span> <span class="token function">mockUserDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>注意 <strong>@Transactional</strong> 和 <strong>@Sql</strong> 注解的使用，这样就能让测试方法可以重复执行而不污染数据库。</p><h2 id="单独的测试配置" tabindex="-1"><a class="header-anchor" href="#单独的测试配置" aria-hidden="true">#</a> 单独的测试配置</h2><p>单独的测试配置的核心和目的就是：测试时，仅加载和本次测试相关的必要的配置，如果背测代码与其它代码有依赖关系，可以通过 Mock 去伪造被倚赖代码。</p><p>理论上，如果我们仅仅只是需要测试 UsersService 类，那么我们可以不让 Spring 组装其他无关的 bean<small>（Web层的相关 Bean，甚至包括 Dao 层的相关 Bean）</small>，这种情况下，我们只需要将 UsersService 类所依赖的 bean 组装起来就行了。</p><blockquote><p>在这里，我们要重新捡起 SSM Java 代码配置那套东西。</p></blockquote><p>所以，先编写一个 mybatis 的测试配置类：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span> \n<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">&quot;com.woniu.example.department.outlet.dao.mysql&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token string">&quot;PROFILE_UNIT_TEST&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisTestConfig</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>destroyMethod <span class="token operator">=</span> <span class="token string">&quot;close&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">HikariDataSource</span> <span class="token function">dataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">HikariDataSource</span> ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HikariDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        ds<span class="token punctuation">.</span><span class="token function">setDriverClassName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        ds<span class="token punctuation">.</span><span class="token function">setJdbcUrl</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/scott?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=UTC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        ds<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        ds<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> ds<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">SqlSessionFactoryBean</span> <span class="token function">sqlSessionFactoryBean</span><span class="token punctuation">(</span><span class="token class-name">DataSource</span> ds<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SqlSessionFactoryBean</span> factoryBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        factoryBean<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// factoryBean.setConfigLocation(new ClassPathResource(&quot;mybatis/mybatis-config.xml&quot;));</span>\n        <span class="token comment">// factoryBean.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(&quot;mybatis/mapper/*.xml&quot;));</span>\n        <span class="token keyword">return</span> factoryBean<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token comment">/*\n    @Bean\n    public MapperScannerConfigurer mapperScannerConfigurer() {\n        MapperScannerConfigurer configurer = new MapperScannerConfigurer();\n        configurer.setBasePackage(&quot;com.woniu.example.departmentservice.outlet.dao.mysql&quot;);\n        return configurer;\n    }\n*/</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">DataSourceTransactionManager</span> <span class="token function">transactionManager</span><span class="token punctuation">(</span><span class="token class-name">DataSource</span> ds<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">DataSourceTransactionManager</span> manager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        manager<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> manager<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>接着还有其他的相关 bean 依赖以此类推来编写，最终得到的写法：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Transactional</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token class-name">DatasourceTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n        <span class="token punctuation">,</span> <span class="token class-name">MybatisTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n        <span class="token punctuation">,</span> <span class="token class-name">WebTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n        <span class="token punctuation">,</span> <span class="token class-name">UsersServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n<span class="token comment">//      , RedissonTestConfig.class</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;PROFILE_UNIT_TEST&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersServiceBestTests</span> <span class="token keyword">extends</span> <span class="token class-name">CommonTestCode</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">UsersService</span> usersService<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token comment">// @Commit</span>\n    <span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:sql-script/users.sql&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createUsersTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">CreateUsersReqVo</span> reqVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateUsersReqVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">CreateUsersForm</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateUsersForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        form<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        form<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        form<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        form<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span><span class="token string">&quot;M&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        reqVo<span class="token punctuation">.</span><span class="token function">setCreateOrEditUsersForm</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Users</span> users <span class="token operator">=</span> usersService<span class="token punctuation">.</span><span class="token function">createUsers</span><span class="token punctuation">(</span>reqVo<span class="token punctuation">,</span> <span class="token function">mockUserDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>此时执行测试类就非常快了，因为我们只组装了必要的 bean，只要 Service 依赖的东西不变，那么执行时间就基本不会有太多变化，避免了第一种写法的问题。</p><p>这种方式唯一的缺点就是需要清楚知道依赖了哪些 bean，并将他们组装起来，虽然麻烦了点，但这是值得的，避免了组装无关的bean，让测试类能快速启动执行。</p><h2 id="测试-controller" tabindex="-1"><a class="header-anchor" href="#测试-controller" aria-hidden="true">#</a> 测试 Controller</h2><p>最后这里是针对 Service 层<small>（接口）</small>的测试，对于 Controller 层的测试是缺失的，所以为了能快速测试 Controller，我又研究了针对 Controller 的测试类，先来看看Controller的功能代码：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/users&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersController</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">UsersService</span> usersService<span class="token punctuation">;</span>  \n\n    <span class="token doc-comment comment">/**\n     * 创建用户\n     */</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/createUsers&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Users</span><span class="token punctuation">&gt;</span></span> <span class="token function">createUsers</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">CreateUsersReqVo</span> reqVo<span class="token punctuation">,</span>\n                                     <span class="token annotation punctuation">@AuthenticationPrincipal</span> <span class="token class-name">UserDetails</span> userDetails<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>usersService<span class="token punctuation">.</span><span class="token function">createUsers</span><span class="token punctuation">(</span>reqVo<span class="token punctuation">,</span> userDetails<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>针对 Controller 的测试类写法，如果使用 @SpringBootTest 注解，也有执行耗时随着应用的变大而不断变长的问题。我们可以通过自己组装 Spring 应用的上下文，而避免 @SpringBootTest 注解的 All In：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@WebAppConfiguration</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token class-name">DatasourceTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">MybatisTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">RedissonTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">WebTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">UsersServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">SecurityTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">UsersController</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 下面这三个注解用于配置 SpringMVC 的测试上下文</span>\n<span class="token comment">// @AutoConfigureMockMvc</span>\n<span class="token comment">// @AutoConfigureWebMvc</span>\n<span class="token annotation punctuation">@WebMvcTest</span> <span class="token comment">// 等于上面两个</span>\n<span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;PROFILE_UNIT_TEST&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Transactional</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersControllerBestTests</span> <span class="token keyword">extends</span> <span class="token class-name">CommonTestCode</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">MockMvc</span> mockMvc<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">ObjectMapper</span> objectMapper<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token annotation punctuation">@SneakyThrows</span>\n    <span class="token annotation punctuation">@WithMockUser</span><span class="token punctuation">(</span>\n            username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            password <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            authorities <span class="token operator">=</span> <span class="token string">&quot;ROLE_ADMIN&quot;</span>\n    <span class="token punctuation">)</span>\n    <span class="token comment">// @Commit</span>\n    <span class="token annotation punctuation">@Sql</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:sql-script/users.sql&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createUsersTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">ObjectNode</span> reqVo <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">createObjectNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ObjectNode</span> createOrEditUsersForm <span class="token operator">=</span> reqVo<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span><span class="token string">&quot;createOrEditUsersForm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;M&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mockMvc<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/users/createUsers&quot;</span><span class="token punctuation">)</span>\n                            <span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                            <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>reqVo<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                            <span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andDo</span><span class="token punctuation">(</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">jsonPath</span><span class="token punctuation">(</span><span class="token string">&quot;$.data.username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><p>所以，掌握此类写法就能让单元测试高效运行，于此同时，我们也可利用单元测试来快速调试代码，这也大大提高了我们的开发效率，可谓一举两得。</p><p>另外，Spring 也提供了两个非常有用的测试注解：<strong>@MockBean</strong> 和 <strong>@SpyBean</strong>，还有一个辅助类：<strong>MockRestServiceServer</strong> 。</p><p>下面依次介绍其用法，首先是 @MockBean，此注解会代理 bean 的所有方法，对于未 mock 的方法调用均是返回 null：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@WebAppConfiguration</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token class-name">WebTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">DatasourceTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">SecurityTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">UsersController</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@AutoConfigureMockMvc</span>\n<span class="token annotation punctuation">@AutoConfigureWebMvc</span>\n<span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;PROFILE_UNIT_TEST&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MockBeanTests</span> <span class="token keyword">extends</span> <span class="token class-name">CommonTestCode</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">MockMvc</span> mockMvc<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">ObjectMapper</span> objectMapper<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@MockBean</span>\n    <span class="token keyword">private</span> <span class="token class-name">UsersService</span> usersService<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token annotation punctuation">@SneakyThrows</span>\n    <span class="token annotation punctuation">@WithMockUser</span><span class="token punctuation">(</span>\n            username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            password <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            authorities <span class="token operator">=</span> <span class="token string">&quot;ROLE_ADMIN&quot;</span>\n    <span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createUsersTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Users</span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// @MockBean 注解会代理 bean 的所有方法,对于未 mock 的方法调用均是返回null,这里的意思是针对调用createUsers方法</span>\n        <span class="token comment">// 的任意入参，均返回指定的结果</span>\n        <span class="token function">given</span><span class="token punctuation">(</span>usersService<span class="token punctuation">.</span><span class="token function">createUsers</span><span class="token punctuation">(</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">willReturn</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">ObjectNode</span> reqVo <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">createObjectNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ObjectNode</span> createOrEditUsersForm <span class="token operator">=</span> reqVo<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span><span class="token string">&quot;createOrEditUsersForm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;M&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mockMvc<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>\n            <span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/users/createUsers&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>reqVo<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n        <span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">andDo</span><span class="token punctuation">(</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">jsonPath</span><span class="token punctuation">(</span><span class="token string">&quot;$.data.username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p>@SpyBean 可达到部分 mock 的效果，未被 mock 的方法会被真实调用：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@WebAppConfiguration</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span> \n        <span class="token class-name">MybatisTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">WebTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">DatasourceTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">SecurityTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">UsersController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">UsersServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@AutoConfigureMockMvc</span>\n<span class="token annotation punctuation">@AutoConfigureWebMvc</span>\n<span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;PROFILE_UNIT_TEST&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpyBeanTests</span> <span class="token keyword">extends</span> <span class="token class-name">CommonTestCode</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">MockMvc</span> mockMvc<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">ObjectMapper</span> objectMapper<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@SpyBean</span>\n    <span class="token keyword">private</span> <span class="token class-name">UsersService</span> usersService<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token annotation punctuation">@SneakyThrows</span>\n    <span class="token annotation punctuation">@WithMockUser</span><span class="token punctuation">(</span>\n            username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            password <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            authorities <span class="token operator">=</span> <span class="token string">&quot;ROLE_ADMIN&quot;</span>\n    <span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createUsersTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Users</span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// @SpyBean可达到部分mock的效果,仅当 doReturn(&quot;&quot;).when(service).doSomething() 时，doSomething方法才被mock，</span>\n        <span class="token comment">// 其他的方法仍被真实调用。</span>\n        <span class="token comment">// 未发生实际调用</span>\n        <span class="token function">doReturn</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>usersService<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createUsers</span><span class="token punctuation">(</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">ObjectNode</span> reqVo <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">createObjectNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">ObjectNode</span> createOrEditUsersForm <span class="token operator">=</span> reqVo<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span><span class="token string">&quot;createOrEditUsersForm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jufeng98@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        createOrEditUsersForm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;M&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mockMvc\n                <span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>\n                        <span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/users/createUsers&quot;</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>reqVo<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                <span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andDo</span><span class="token punctuation">(</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">jsonPath</span><span class="token punctuation">(</span><span class="token string">&quot;$.data.username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string">&quot;jufeng98&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p>最后是 <strong>MockRestServiceServer</strong> 类，用于 mock 使用 RestTemplate 调用 http 接口的返回，假设我们有个接口是这样的，使用了 RestTemplate 调用 http 接口获取信息：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Validated</span>\n<span class="token annotation punctuation">@RestController</span>\n<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/test&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">TestService</span> testService<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/getOrderPayType&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getOrderPayType</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">JsonNode</span> jsonNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>testService<span class="token punctuation">.</span><span class="token function">getOrderPayType</span><span class="token punctuation">(</span>jsonNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;orderCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token annotation punctuation">@Service</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">TestService</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getOrderPayType</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">JsonNode</span> jsonNode <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">&quot;http://b2c-cloud-order-service/getOrderPayType?orderCode={1}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JsonNode</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> orderCode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>jsonNode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;payType&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>那么单元测试就可以这样写：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token class-name">DatasourceTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">SecurityTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">WebTestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">TestController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n        <span class="token class-name">TestServiceImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@AutoConfigureMockMvc</span>\n<span class="token annotation punctuation">@AutoConfigureWebMvc</span>\n<span class="token annotation punctuation">@WebAppConfiguration</span>\n<span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">&quot;PROFILE_UNIT_TEST&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MockRestServiceServerTests</span> <span class="token keyword">extends</span> <span class="token class-name">CommonTestCode</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">protected</span> <span class="token class-name">MockMvc</span> mockMvc<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token annotation punctuation">@WithMockUser</span><span class="token punctuation">(</span>\n            username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            password <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n            authorities <span class="token operator">=</span> <span class="token string">&quot;ROLE_ADMIN&quot;</span>\n    <span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@SneakyThrows</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MockRestServiceServer</span> server <span class="token operator">=</span> <span class="token class-name">MockRestServiceServer</span><span class="token punctuation">.</span><span class="token function">bindTo</span><span class="token punctuation">(</span>restTemplate<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// mock http接口的返回</span>\n        server\n                <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">requestTo</span><span class="token punctuation">(</span><span class="token string">&quot;http://b2c-cloud-order-service/getOrderPayType?orderCode=C93847639357&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andRespond</span><span class="token punctuation">(</span><span class="token function">withSuccess</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;orderCode\\&quot;:\\&quot;C93847639357\\&quot;,\\&quot;payType\\&quot;:\\&quot;alipay\\&quot;}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        mockMvc\n                <span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span>\n                        <span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/test/getOrderPayType&quot;</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;orderCode\\&quot;:\\&quot;C93847639357\\&quot;}&quot;</span><span class="token punctuation">)</span>\n                                <span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span>\n                <span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andDo</span><span class="token punctuation">(</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">andExpect</span><span class="token punctuation">(</span><span class="token function">jsonPath</span><span class="token punctuation">(</span><span class="token string">&quot;$.data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string">&quot;alipay&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>最后 SpringBoot 还提供了大量的各类辅助测试的注解例如 @JdbcTest、@DataRedisTest、@DataJpaTest 等等，大家有兴趣可以去研究。</p><p>附上 Spring Testing 和 SpringBoot Testing 的官方文档：</p>',36),e={href:"https://docs.spring.io/spring-framework/docs/current/reference/html/testing.html#testing",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("spring Testing"),c={href:"https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-testing.html",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("spring-boot Testing"),l={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,[(0,p._)("a",e,[o,(0,p.Wm)(a)])])]),(0,p._)("li",null,[(0,p._)("p",null,[(0,p._)("a",c,[u,(0,p.Wm)(a)])])])])],64)}}}}]);
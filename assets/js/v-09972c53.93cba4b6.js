"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[5115],{57539:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-09972c53",path:"/utility/guava/02-%E6%95%B0%E7%BB%84%E5%B7%A5%E5%85%B7%E7%B1%BB.html",title:"数组工具类",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"判断数组中是否包含指定元素",slug:"判断数组中是否包含指定元素",children:[]},{level:2,title:"向数组中添加元素",slug:"向数组中添加元素",children:[]},{level:2,title:"截取数组中的一部分",slug:"截取数组中的一部分",children:[]},{level:2,title:"查找元素并返回其索引",slug:"查找元素并返回其索引",children:[]},{level:2,title:"复制数组",slug:"复制数组",children:[]},{level:2,title:"空安全的查询长度和查询长度",slug:"空安全的查询长度和查询长度",children:[]}],filePathRelative:"utility/guava/02-数组工具类.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},49933:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(66252).uE)('<h1 id="数组工具类" tabindex="-1"><a class="header-anchor" href="#数组工具类" aria-hidden="true">#</a> 数组工具类</h1><p>日常编程中，对于数组的常见操作有：</p><table><thead><tr><th style="text-align:center;">#</th><th style="text-align:left;">操作</th><th style="text-align:left;">方法</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:left;">判断是否包含</td><td style="text-align:left;">Ints.contains</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:left;">向数组中添加元素</td><td style="text-align:left;">Ints.concat</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:left;">截取数组中的一部分</td><td style="text-align:left;">Arrays.copyOfRange</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:left;">查找元素并返回其索引</td><td style="text-align:left;">Ints.indexOf</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:left;">复制数组</td><td style="text-align:left;">Arrays.copyOf</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:left;">空安全的查询长度和查询长度</td><td style="text-align:left;">无，自实现</td></tr></tbody></table><p>guava 并不像其他的第三方工具包，它『<strong>没有提供</strong>』一个统一的类似于 <em>ArrayUtils</em> 这样的工具类，而是将各种工具方法拆散放在了不同的地方。</p><p>例如：</p><ul><li><p>为 int 型数组提供的工具方法，在 <strong>Ints</strong> 中</p></li><li><p>为 long 型数组提供的工具方法，在 <strong>Longs</strong> 中</p></li><li><p>...</p></li></ul><blockquote><p>guava 的设计理念中似乎并『不太待见』对象型数组<small>（例如，<strong>Integer[]</strong> 、<strong>Double[]</strong> 、<strong>String[]</strong> 等）</small>，其作者们认为将对象存入数组中，还不如存入『集合』中方便、灵活、并具有扩展性。</p><p>因此，guava 为对象型数组提供的工具类 <strong>ObjectArrays</strong> 中只有很少的几个方法。</p></blockquote><h2 id="判断数组中是否包含指定元素" tabindex="-1"><a class="header-anchor" href="#判断数组中是否包含指定元素" aria-hidden="true">#</a> 判断数组中是否包含指定元素</h2><p>guava 在 <em>com.google.common.primitives</em> 包下提供了 <strong>Ints</strong> 、<strong>Longs</strong> 等用于处理基本类型数组的工具类。</p><p>其中有 <strong>contains</strong> 方法可用于判断基本类型数组中是否包含指定数据。</p><p>以 <em>int</em> 类型数组的判断为例：</p><p>伪代码：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 结果：true</span>\n<span class="token class-name">Ints</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>guava 的对象数组的工具类 <strong>ObjectArrays</strong> 中没有 <em>contains</em> 方法。</p><h2 id="向数组中添加元素" tabindex="-1"><a class="header-anchor" href="#向数组中添加元素" aria-hidden="true">#</a> 向数组中添加元素</h2><p>在 guava 的作者看来数组是大小不可变的容量，理论上数组本身是无法扩容的，自然也就无法向其中再多添加新的元素，因此他们并未提供相关工具方法。</p><p>不过，它们提供了一个将多个数组拼接成新数组的方法，伪代码如下：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 结果：[1, 2, 3, 4, 5, 6]</span>\n<span class="token class-name">Ints</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>该方法返回一个新数组。</p><h2 id="截取数组中的一部分" tabindex="-1"><a class="header-anchor" href="#截取数组中的一部分" aria-hidden="true">#</a> 截取数组中的一部分</h2><p>guava 没有提供这种功能，但是 JDK 中的 Arrays 工具类自带了相关方法：</p><p>伪代码如下：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 结果：[2, 3]</span>\n<span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="查找元素并返回其索引" tabindex="-1"><a class="header-anchor" href="#查找元素并返回其索引" aria-hidden="true">#</a> 查找元素并返回其索引</h2><p>guava 在基本类型数组的工具类中提供了查找第一个和最后一个指定元素的索引。</p><p>伪代码如下：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Ints</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>      <span class="token operator">=</span> <span class="token number">1</span>\n<span class="token class-name">Ints</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">5</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="复制数组" tabindex="-1"><a class="header-anchor" href="#复制数组" aria-hidden="true">#</a> 复制数组</h2><p>Guava 没有提供复制数组的工具方法，是因为 JDK 中自带了。</p><p>伪代码如下：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>\n<span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>\n<span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="空安全的查询长度和查询长度" tabindex="-1"><a class="header-anchor" href="#空安全的查询长度和查询长度" aria-hidden="true">#</a> 空安全的查询长度和查询长度</h2><p>guava 没提供这种功能，自己实现</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getLength</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Object</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">getLength</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',34),p={render:function(n,s){return t}}}}]);
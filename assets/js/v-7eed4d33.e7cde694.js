"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[5758],{4149:(e,a,n)=>{n.r(a),n.d(a,{data:()=>s});const s={key:"v-7eed4d33",path:"/mysql/99-%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE.html",title:"MySQL 解决时区相关问题",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"time_zone 参数介绍",slug:"time-zone-参数介绍",children:[]},{level:2,title:"时区常见问题及如何避免",slug:"时区常见问题及如何避免",children:[{level:3,title:"MySQL 内部时间不是北京时间",slug:"mysql-内部时间不是北京时间",children:[]},{level:3,title:"Java 程序存取的时间与数据库中的时间相差 8 小时",slug:"java-程序存取的时间与数据库中的时间相差-8-小时",children:[]},{level:3,title:"程序时间与数据库时间相差 13 小时或 14 小时",slug:"程序时间与数据库时间相差-13-小时或-14-小时",children:[]}]},{level:2,title:"如何避免出现时区问题",slug:"如何避免出现时区问题",children:[]}],filePathRelative:"mysql/99-时区设置.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},8695:(e,a,n)=>{n.r(a),n.d(a,{default:()=>l});const s=(0,n(66252).uE)('<h1 id="mysql-解决时区相关问题" tabindex="-1"><a class="header-anchor" href="#mysql-解决时区相关问题" aria-hidden="true">#</a> MySQL 解决时区相关问题</h1><p>在使用 MySQL 的过程中，你可能会遇到时区相关问题，比如说时间显示错误、时区不是东八区、程序取得的时间和数据库存储的时间不一致等等问题。其实，这些问题都与数据库时区设置有关。</p><h2 id="time-zone-参数介绍" tabindex="-1"><a class="header-anchor" href="#time-zone-参数介绍" aria-hidden="true">#</a> time_zone 参数介绍</h2><p><strong>time_zone</strong> 参数用来设置『每个』连接会话的时区，可以动态修改。默认值为 <strong>SYSTEM</strong>，此时使用的是全局参数 <strong>system_time_zone</strong> 的值，而 <strong>system_time_zone</strong> 默认继承自当前系统的时区，即，<strong>默认情况下 MySQL 时区和系统时区相同</strong>。</p><p>时区设置主要影响时区敏感的时间值的显示和存储。包括一些函数（如 <code>now()</code>、<code>curtime()</code>）显示的值，以及存储在 TIMESTAMP 类型中的值，但不影响 DATE、TIME 和 DATETIME 列中的值，因为这些数据类型在存取时未进行时区转换，而 TIMESTAMP 类型存入数据库的实际是 UTC 的时间，查询显示时会根据具体的时区来显示不同的时间。</p><ul><li><p>查看 linux 系统时间及时区</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">date</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>查看 MySQL 当前时区、时间</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> show global variables like <span class="token string">&#39;%time_zone%&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>验证</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">set</span> <span class="token keyword">global</span> time_zone <span class="token operator">=</span> <span class="token string">&#39;+4:00&#39;</span><span class="token punctuation">;</span> <span class="token comment">-- 或</span>\n<span class="token keyword">set</span> time_zone <span class="token operator">=</span> <span class="token string">&#39;+4:00&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><p>如果需要永久生效，还需写入配置文件中。例如将时区改为东八区，则需要在配置文件 <code>[mysqld] </code>部分增加一行：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>default_time_zone = &#39;+8:00&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="时区常见问题及如何避免" tabindex="-1"><a class="header-anchor" href="#时区常见问题及如何避免" aria-hidden="true">#</a> 时区常见问题及如何避免</h2><h3 id="mysql-内部时间不是北京时间" tabindex="-1"><a class="header-anchor" href="#mysql-内部时间不是北京时间" aria-hidden="true">#</a> MySQL 内部时间不是北京时间</h3><p>遇到这类问题，首先检查下系统时间及时区是否正确，然后看下 MySQL 的 <code>time_zone</code> ，建议将 <code>time_zone</code> 改为 <code>+8:00</code> 。</p><h3 id="java-程序存取的时间与数据库中的时间相差-8-小时" tabindex="-1"><a class="header-anchor" href="#java-程序存取的时间与数据库中的时间相差-8-小时" aria-hidden="true">#</a> Java 程序存取的时间与数据库中的时间相差 8 小时</h3><p>出现此问题的原因大概率是程序时区与数据库时区不一致导致的。我们可以检查下两边的时区，如果想统一采用北京时间，则可以在 jdbc 连接串中增加 <code>serverTimezone=Asia/Shanghai</code> ，<small>（并且确保 MySQL 方面也可以将 <code>time_zone</code> 改为 <code>+8:00</code> ）？</small></p><blockquote><p><strong>serverTimeZone</strong> 的作用就是指定 web 服务器和 mysql 服务器的会话期间的 mysql 服务器时区，就是临时指定 mysql 服务器的时区。</p></blockquote><h3 id="程序时间与数据库时间相差-13-小时或-14-小时" tabindex="-1"><a class="header-anchor" href="#程序时间与数据库时间相差-13-小时或-14-小时" aria-hidden="true">#</a> 程序时间与数据库时间相差 13 小时或 14 小时</h3><p>如果说相差 8 小时不够让人惊讶，那相差 13 小时可能会让很多人摸不着头脑。出现这个问题的原因是 JDBC 与 MySQL 对 “CST” 时区协商不一致。因为 CST 时区是一个很混乱的时区，有四种含义：</p><ul><li>美国中部时间 Central Standard Time (USA) UTC-05:00 或 UTC-06:00</li><li>澳大利亚中部时间 Central Standard Time (Australia) UTC+09:30</li><li>中国标准时 China Standard Time UTC+08:00</li><li>古巴标准时 Cuba Standard Time UTC-04:00</li></ul><p>MySQL 中，如果 time_zone 为默认的 SYSTEM 值，则时区会继承为系统时区 CST，MySQL 内部将其认为是 UTC+08:00。而 jdbc 会将 CST 认为是美国中部时间，这就导致会相差 13 小时，如果处在冬令时还会相差 14 个小时。</p><p>解决此问题的方法也很简单，我们可以明确指定 MySQL 数据库的时区，<strong>不使用引发误解的 CST</strong> ，可以将 time_zone 改为&#39;+8:00&#39;，同时 jdbc 连接串中也可以增加 serverTimezone=Asia/Shanghai。</p><h2 id="如何避免出现时区问题" tabindex="-1"><a class="header-anchor" href="#如何避免出现时区问题" aria-hidden="true">#</a> 如何避免出现时区问题</h2><p>如何避免上述时区问题，可能你心里也有了些方法，简要总结几点如下：</p><ul><li>首先保证系统时区准确。</li><li>jdbc 连接串中指定时区，并与数据库时区一致。</li><li>time_zone 参数建议设置为 &#39;+8:00&#39;，不使用容易误解的 CST。</li><li>各环境数据库实例时区参数保持相同。</li></ul><p>另外，可能有的同学说了，我们数据库中 time_zone 参数选择的是默认的 SYSTEM 值，也没有发生程序时间和数据库时间不一致的问题。此时是否需要将 time_zone 改为&#39;+8:00&#39;？在这种情况下还是建议将 time_zone 改为&#39;+8:00&#39;，特别是经常查询 TIMESTAMP 字段，因为当 time_zone=system 的时候，查询 timestamp 字段会调用系统的时区做时区转换，有全局锁 __libc_lock_lock 的保护，可能导致线程并发环境下系统性能受限。而改为&#39;+8:00&#39;则不会触发系统时区转换，使用 MySQL 自身转换，大大提高了性能。</p>',23),l={render:function(e,a){return s}}}}]);
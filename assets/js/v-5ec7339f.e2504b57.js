"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[7676],{30655:(t,e,a)=>{a.r(e),a.d(e,{data:()=>l});const l={key:"v-5ec7339f",path:"/jdbc/06-date.html",title:"JDBC中的日期时间问题",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"JDBC 中的日期时间类型",slug:"jdbc-中的日期时间类型",children:[]},{level:2,title:"java.util.Date",slug:"java-util-date",children:[]}],filePathRelative:"jdbc/06-date.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},19290:(t,e,a)=>{a.r(e),a.d(e,{default:()=>d});const l=(0,a(66252).uE)('<h1 id="jdbc中的日期时间问题" tabindex="-1"><a class="header-anchor" href="#jdbc中的日期时间问题" aria-hidden="true">#</a> JDBC中的日期时间问题</h1><h2 id="jdbc-中的日期时间类型" tabindex="-1"><a class="header-anchor" href="#jdbc-中的日期时间类型" aria-hidden="true">#</a> JDBC 中的日期时间类型</h2><table><thead><tr><th style="text-align:left;">列类型</th><th style="text-align:left;">Java 类型</th></tr></thead><tbody><tr><td style="text-align:left;">DATE</td><td style="text-align:left;">java.sql.Date</td></tr><tr><td style="text-align:left;">TIME</td><td style="text-align:left;">java.sql.Time</td></tr><tr><td style="text-align:left;">DATETIME</td><td style="text-align:left;">java.sql.Timestamp</td></tr><tr><td style="text-align:left;">TIMESTAMP</td><td style="text-align:left;">java.sql.Timestamp</td></tr></tbody></table><p>逻辑上，数据库中的 <code>DATETIME</code> 和 <code>TIMESTAMP</code> 都会含有 <code>DATE</code> 和 <code>TIME</code> 信息，它们的不同在于：</p><ul><li><p>TIMESTAMP 出现更早，DATETIME 出现更晚；</p></li><li><p>TIMESTAMP 中会包含『纳秒』级别数据，而 DATETIME 中没有；</p></li><li><p><small>（和上条区别有关）</small>，TIMESTAMP 的上限更低，而 DATETIME 的上限更高。</p></li></ul><h2 id="java-util-date" tabindex="-1"><a class="header-anchor" href="#java-util-date" aria-hidden="true">#</a> java.util.Date</h2><p>java.util.Date 很容易和 java.sql.Date 混淆，但是它们是完全不同的两个东西。</p><blockquote><p>java.util.Date 中会包含『日期』和『时间』两个概念；而 java.sql.Date 中只包含『日期』信息。</p></blockquote><p>当然，这两个 Date 也有一些关系：java.util.Date 是 java.sql.Date 的父类。基于多态特性<small>（父类的引用可指向子类的对象）</small>，你可以将 java.sql.Date 对象赋值给 java.util.Date 类型的引用。</p><ul><li></li></ul><p>『』</p>',11),d={render:function(t,e){return l}}}}]);
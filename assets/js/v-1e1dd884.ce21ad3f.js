"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[4365],{7954:(s,t,n)=>{n.r(t),n.d(t,{data:()=>a});const a={key:"v-1e1dd884",path:"/mysql/08-%E7%94%A8%E6%88%B7%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86.html",title:"用户和权限管理",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"用户管理",slug:"用户管理",children:[]},{level:2,title:"访问权限管理",slug:"访问权限管理",children:[]}],filePathRelative:"mysql/08-用户和权限管理.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},61701:(s,t,n)=>{n.r(t),n.d(t,{default:()=>e});const a=(0,n(66252).uE)('<h1 id="用户和权限管理" tabindex="-1"><a class="header-anchor" href="#用户和权限管理" aria-hidden="true">#</a> 用户和权限管理</h1><p>MySQL 是一个多用户数据库管理系统，除了默认存在的 root 用户外可以额外地在创建用户，设置密码，并指定新用户对数据库的操作权限。</p><p>以上所说操作依赖于超级管理员账户 root ，即只有 root 账户才能执行上述所说操作。</p><h2 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理" aria-hidden="true">#</a> 用户管理</h2><p>使用 <strong>CREATE USER</strong> 语句可以创建新账户。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> 用户名 IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>不要使用其它的、间接的方式来创建型账户。</p></div><p>如果需要删除已有用户账户，使用 <strong>DROP USER</strong> 语句：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">USER</span> 用户名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>如果需要修改已有用户账户的密码，使用 <strong>SET PASSWORD</strong> 语句：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SET</span> PASSWORD <span class="token keyword">FOR</span> 用户名<span class="token operator">=</span>PASSWORD<span class="token punctuation">(</span><span class="token string">&#39;新密码&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="访问权限管理" tabindex="-1"><a class="header-anchor" href="#访问权限管理" aria-hidden="true">#</a> 访问权限管理</h2><p>在新建用户后必须分配访问权限，因为『用户账号』和『访问权限』是两个独立的概念：</p><ul><li>用户账号决定是否可以连接、登陆数据库；</li><li>访问权限决定了能对数据库做哪些操作。</li></ul><p>因此，纯粹的新用户逻辑上没有任何使用价值（他们可以登录、连接到 MySQL，但不能进行任何数据库操作）。</p><p>在进行权限判断、控制时，MySQL 可以细化到设置用户从 A 电脑登陆的时候有某种权限，从 B 电脑登陆时又是其他的权限。因为，它使用『用户名』和『主机名』来认定用户身份 <strong>user@host</strong> 。例如 <strong>tom@192.168.1.110</strong> 。</p><p>在设置用户的权限时，如果没有特别指定是他从“哪台”电脑上登录时的权限，那么就使用 <strong>%</strong> 表示其从任何电脑上登录时的权限，即 <strong>用户名</strong> 等同于 <strong>用户名@%</strong>，这里的 % 表示所有电脑。</p><p>为设置权限，使用 <strong>GRANT</strong> 语句，<strong>GRANT</strong> 要求你至少给出以下信息：</p><ul><li>要授予的权限</li><li>要被授予访问权限的数据库或表</li><li>用户名</li></ul><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">GRANT</span> 权限<span class="token number">1</span><span class="token punctuation">,</span> 权限<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">ON</span> 数据库<span class="token punctuation">.</span>表 <span class="token keyword">TO</span> 用户名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>数据库.表名</strong> 部分可以使用通配符 <strong>*</strong> 。<strong>A.*</strong> 表示 A 数据库下的所有表。<strong>*.*</strong> 表示所有数据库中的所有表。</p><table><thead><tr><th style="text-align:left;">常见权限</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">ALL</td><td style="text-align:left;">所有权限</td></tr><tr><td style="text-align:left;">SHOW DATABASES</td><td style="text-align:left;">允许使用 SHOW DATABASES 语句</td></tr><tr><td style="text-align:left;">CREATE</td><td style="text-align:left;">允许使用 CREATE TABLE 语句</td></tr><tr><td style="text-align:left;">DROP</td><td style="text-align:left;">允许使用 DROP TABLE 语句</td></tr><tr><td style="text-align:left;">INSERT</td><td style="text-align:left;">允许使用 INSERT 语句</td></tr><tr><td style="text-align:left;">DELETE</td><td style="text-align:left;">允许使用 DELETE 语句</td></tr><tr><td style="text-align:left;">UPDATE</td><td style="text-align:left;">允许使用 UPDATE 语句</td></tr><tr><td style="text-align:left;">SELECT</td><td style="text-align:left;">允许使用 SELECT 语句</td></tr><tr><td style="text-align:left;">USAGE</td><td style="text-align:left;">无访问权限</td></tr></tbody></table><p>GRANT 操作的反向操作是 REVOKE，用它来剥夺特定的权限：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">REVOKE</span> 权限<span class="token number">1</span><span class="token punctuation">,</span> 权限<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">ON</span> 数据库<span class="token punctuation">.</span>表名 <span class="token keyword">FROM</span> 用户名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',24),e={render:function(s,t){return a}}}}]);
"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[1105],{17576:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-6ae0b7c9",path:"/java8/05-LocalDateTime.html",title:"使用 LocalDateTime 替代 Date",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"LocalDate",slug:"localdate",children:[]},{level:2,title:"LocalTime",slug:"localtime",children:[]},{level:2,title:"LocaDateTime",slug:"locadatetime",children:[]},{level:2,title:"Instant",slug:"instant",children:[]},{level:2,title:"修改 LocalDate、LocalTime、LocalDateTime、Instant",slug:"修改-localdate、localtime、localdatetime、instant",children:[]},{level:2,title:"使用 TemporalAdjuster 和 TemporalAdjusters",slug:"使用-temporaladjuster-和-temporaladjusters",children:[]},{level:2,title:"格式化时间",slug:"格式化时间",children:[]},{level:2,title:"解析时间",slug:"解析时间",children:[{level:3,title:"Date 与 LocalDate 互转 {docsify-ignore}",slug:"date-与-localdate-互转-docsify-ignore",children:[]}]},{level:2,title:"带时区的时间",slug:"带时区的时间",children:[]},{level:2,title:"10. SpringBoot 中应用 LocalDateTime",slug:"_10-springboot-中应用-localdatetime",children:[{level:3,title:"将 LocalDateTime 字段以时间戳的方式返回给前端。 {docsify-ignore}",slug:"将-localdatetime-字段以时间戳的方式返回给前端。-docsify-ignore",children:[]},{level:3,title:"将 LocalDateTime 字段以指定格式化日期的方式返回给前端  {docsify-ignore}",slug:"将-localdatetime-字段以指定格式化日期的方式返回给前端-docsify-ignore",children:[]},{level:3,title:"将 LocalDateTime 字段以指定格式化日期的方式返回给前端  {docsify-ignore}",slug:"将-localdatetime-字段以指定格式化日期的方式返回给前端-docsify-ignore-1",children:[]},{level:3,title:"对前端传入的日期进行格式化  {docsify-ignore}",slug:"对前端传入的日期进行格式化-docsify-ignore",children:[]}]}],filePathRelative:"java8/05-LocalDateTime.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},79382:(a,n,s)=>{s.r(n),s.d(n,{default:()=>k});var t=s(66252);const e=(0,t.uE)('<h1 id="使用-localdatetime-替代-date" tabindex="-1"><a class="header-anchor" href="#使用-localdatetime-替代-date" aria-hidden="true">#</a> 使用 LocalDateTime 替代 Date</h1><p>JDK 中的 Date 的缺点：</p><ul><li><p>Date 如果不格式化，打印出的日期可读性差；</p></li><li><p>使用 SimpleDateFormat 可以对日期时间进行格式化，但是 SimpleDateFormat 并非线性安全；</p></li><li><p>Date 对时间处理比较麻烦；</p></li><li><p>Date 这个类名的命名并不严谨。</p></li></ul><blockquote><p>《阿里巴巴开发手册》中明确禁用 <code>static</code> 关键字修饰 <strong>SimpleDateFormat</strong> 。</p></blockquote><p>Java 官方请著名的第三方日期时间包 <em>joda-time</em> 的作者重新设计了与日期时间有关的 API 部分，并把它们放在了 jdk 8 的 <strong>java.time</strong> 包下。</p><p>新增了：<strong>LocalDate</strong>、<strong>LocalTime</strong>、<strong>LocalDateTime</strong> 三个类及相关新的 API 用以替代 <code>Date</code> 及其旧的使用方式。</p><h2 id="localdate" tabindex="-1"><a class="header-anchor" href="#localdate" aria-hidden="true">#</a> LocalDate</h2><p>只会获取 <code>年月日</code> 信息。</p><p><strong>LocalDate</strong> 中并不包含『<strong>时区</strong>』信息。即，一个单独的 LocalDate 对象所表达的含义是不严谨的。<small>LocalTime 和 LocalDateTime 也一样。</small></p><ul><li><p>创建 <strong>LocalDate</strong> 对象</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LocalDate</span> localDate <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">LocalDate</span> localDate <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>获取年、月、日、星期几</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LocalDate</span> localDate <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> year <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> year <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>YEAR<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">Month</span> month <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> month <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>MONTH_OF_YEAR<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> day <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">getDayOfMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> day <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">DayOfWeek</span> dayOfWeak <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">getDayOfWeek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> dayOfWeak <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>DAY_OF_WEEK<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li></ul><h2 id="localtime" tabindex="-1"><a class="header-anchor" href="#localtime" aria-hidden="true">#</a> LocalTime</h2><p>只会获取 <code>时分秒</code> 信息。</p><ul><li><p>创建 <strong>LocalTime</strong> 对象</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LocalTime</span> localTime <span class="token operator">=</span> <span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">LocalTime</span> localTime <span class="token operator">=</span> <span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>获取时分秒</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> hour <span class="token operator">=</span> localTime<span class="token punctuation">.</span><span class="token function">getHour</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> hour <span class="token operator">=</span> localTime<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>HOUR_OF_DAY<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> minute <span class="token operator">=</span> localTime<span class="token punctuation">.</span><span class="token function">getMinute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> minute <span class="token operator">=</span> localTime<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>MINUTE_OF_HOUR<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> second <span class="token operator">=</span> localTime<span class="token punctuation">.</span><span class="token function">getSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> second <span class="token operator">=</span> localTime<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>SECOND_OF_MINUTE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul><h2 id="locadatetime" tabindex="-1"><a class="header-anchor" href="#locadatetime" aria-hidden="true">#</a> LocaDateTime</h2><p>获取 <code>年月日时分秒</code>，等于 <strong>LocalDate</strong> + <strong>LocalTime</strong> 。</p><ul><li><p>创建 <code>LocalDateTime</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token class-name">Month</span><span class="token punctuation">.</span>SEPTEMBER<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>localDate<span class="token punctuation">,</span> localTime<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">atTime</span><span class="token punctuation">(</span>localTime<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> localTime<span class="token punctuation">.</span><span class="token function">atDate</span><span class="token punctuation">(</span>localDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>获取 <code>LocalDate</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LocalDate</span> localDate <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">toLocalDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>获取 <code>LocalTime</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LocalTime</span> localTime <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">toLocalTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li></ul><h2 id="instant" tabindex="-1"><a class="header-anchor" href="#instant" aria-hidden="true">#</a> Instant</h2><p>在 Java 中，一个 Instant 对象标识时间轴上的一个点，代表着一个概念上的瞬间。</p><p>『<strong>原点</strong>』是众所周知的 1970 年 1 月 1 日的午夜，此时本初子午线正在穿过伦敦格林威治皇家天文台。从『<strong>原点</strong>』开始，时间按照每天 86400 秒进行正向、反向计算，向前、向后分别以纳秒为单位。</p><blockquote><p>注意，Instant 是有时区概念的，在你未指定时，它的默认时区时 0 时区，即，格林威治时间。</p></blockquote><p>虽然 <strong>Instant</strong> 内部是以纳秒为单位进行存储、运算的，但是很显然你可以将它转换成相较于『<strong>原点</strong>』的时、分、秒。</p><p>在编程世界中，我们日常生活中所说的『<strong>秒</strong>』使用的是 <strong>second</strong> ；而『<strong>相较于原点的秒</strong>』使用的是 <strong>epoch second</strong> 。<small><strong>epoch</strong> 是时代、纪元等含义。</small></p><p>另外，在 Java 8 中，使用 <strong>Duration</strong> 对象来代表两个 <strong>Instant</strong> 之间的时间跨度。</p><ul><li><p>创建 <code>Instant</code> 对象</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Instant</span> instant <span class="token operator">=</span> <span class="token class-name">Instant</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>获取秒数</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">long</span> currentSecond <span class="token operator">=</span> instant<span class="token punctuation">.</span><span class="token function">getEpochSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>获取毫秒数</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">long</span> currentMilli <span class="token operator">=</span> instant<span class="token punctuation">.</span><span class="token function">toEpochMilli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li></ul><blockquote><p>个人觉得如果只是为了获取秒数或者毫秒数，使用 <code>System.currentTimeMillis()</code> 来得更为方便。</p></blockquote><h2 id="修改-localdate、localtime、localdatetime、instant" tabindex="-1"><a class="header-anchor" href="#修改-localdate、localtime、localdatetime、instant" aria-hidden="true">#</a> 修改 LocalDate、LocalTime、LocalDateTime、Instant</h2><p>LocalDate、LocalTime、LocalDateTime、Instant 为『<strong>不可变对象</strong>』，修改这些对象对象会返回一个副本。</p><ul><li><p>增加、减少年数、月数、天数等 以 LocalDateTime 为例</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token class-name">Month</span><span class="token punctuation">.</span>SEPTEMBER<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 增加一年</span>\nlocalDateTime <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">plusYears</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlocalDateTime <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">ChronoUnit</span><span class="token punctuation">.</span>YEARS<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 减少一个月</span>\nlocalDateTime <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">minusMonths</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlocalDateTime <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">minus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">ChronoUnit</span><span class="token punctuation">.</span>MONTHS<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>通过 <code>with</code> 修改某些值</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 修改年为 2019</span>\nlocalDateTime <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">withYear</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 修改为 2022</span>\nlocalDateTime <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>YEAR<span class="token punctuation">,</span> <span class="token number">2022</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 还可以修改月、日</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><h2 id="使用-temporaladjuster-和-temporaladjusters" tabindex="-1"><a class="header-anchor" href="#使用-temporaladjuster-和-temporaladjusters" aria-hidden="true">#</a> 使用 TemporalAdjuster 和 TemporalAdjusters</h2><p>有的时候，你需要进行一些更加复杂的日期操作，比如，将日期调整到下个周日、下个工作日，或者是本月的最后一天。这时，你可以使用重载版本的 <code>withXXX</code> 方法，向其传递一个提供了更多定制化选择的 <code>TemporalAdjuster</code> 对象， 更加灵活地处理日期。</p><p>比如有些时候想知道这个月的最后一天是几号、下个周末是几号，通过提供的时间和日期API可以很快得到答案。</p><p>对于最常见的用例，日期和时间 API 已经提供了大量预定义的 <code>TemporalAdjuster</code> 对象。你可以通过 <code>TemporalAdjusters</code><small>（注意，此处有 <code>s</code>）</small>类的静态工厂方法访问它们。</p><ul><li><p>TemporalAdjusters 类中的常用工厂方法：</p><ul><li><p><strong>dayOfWeekInMonth</strong> 创建一个新的日期，它的值为同一个月中每一周的第几天</p></li><li><p><strong>firstDayOfMonth</strong> 创建一个新的日期，它的值为当月的第一天</p></li><li><p><strong>firstDayOfNextMonth</strong> 创建一个新的日期，它的值为下月的第一天</p></li><li><p><strong>firstDayOfNextYear</strong> 创建一个新的日期，它的值为明年的第一天</p></li><li><p><strong>firstDayOfYear</strong> 创建一个新的日期，它的值为当年的第一天</p></li><li><p><strong>firstInMonth</strong> 创建一个新的日期，它的值为同一个月中，第一个符合星期几要求的值</p></li><li><p><strong>lastDayOfMonth</strong> 创建一个新的日期，它的值为当月的最后一天</p></li><li><p><strong>lastDayOfNextMonth</strong> 创建一个新的日期，它的值为下月的最后一天</p></li><li><p><strong>lastDayOfNextYear</strong> 创建一个新的日期，它的值为明年的最后一天</p></li><li><p><strong>lastDayOfYear</strong> 创建一个新的日期，它的值为今年的最后一天</p></li><li><p><strong>lastInMonth</strong> 创建一个新的日期，它的值为同一个月中，最后一个符合星期几要求的值</p></li><li><p><strong>next</strong> / <strong>previous</strong> 创建一个新的日期，并将其值设定为日期调整后或者调整前，第一个符合指定星 期几要求的日期</p></li><li><p><strong>nextOrSame</strong> / <strong>previousOrSame</strong> 创建一个新的日期，并将其值设定为日期调整后或者调整前，第一个符合指定星 期几要求的日期，如果该日期已经符合要求，直接返回该对象</p></li></ul></li></ul><h2 id="格式化时间" tabindex="-1"><a class="header-anchor" href="#格式化时间" aria-hidden="true">#</a> 格式化时间</h2><p><code>DateTimeFormatter</code> 默认提供了多种格式化方式，如果默认提供的不能满足要求，可以通过 <code>DateTimeFormatter</code> 的 <code>ofPattern</code> 方法创建自定义格式化方式。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LocalDate</span> localDate <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">String</span> s1 <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span>BASIC_ISO_DATE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">String</span> s2 <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span>ISO_LOCAL_DATE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 自定义格式化</span>\n<span class="token class-name">DateTimeFormatter</span> dateTimeFormatter <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;dd/MM/yyyy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">String</span> s3 <span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>dateTimeFormatter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="解析时间" tabindex="-1"><a class="header-anchor" href="#解析时间" aria-hidden="true">#</a> 解析时间</h2><p>相较于传统的 SimpleDateFormat，<strong>DateTimeFormatter</strong> 是线程安全的</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LocalDate</span> localDate1 <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;20190910&quot;</span><span class="token punctuation">,</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span>BASIC_ISO_DATE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">LocalDate</span> localDate2 <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2019-09-10&quot;</span><span class="token punctuation">,</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span>ISO_LOCAL_DATE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="date-与-localdate-互转-docsify-ignore" tabindex="-1"><a class="header-anchor" href="#date-与-localdate-互转-docsify-ignore" aria-hidden="true">#</a> Date 与 LocalDate 互转 {docsify-ignore}</h3><ul><li><p>Date 转 LocalDate</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Date 转 LocalDate</span>\n<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">LocalDate</span> <span class="token function">date2LocalDate</span><span class="token punctuation">(</span><span class="token class-name">Date</span> date<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>date <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">atZone</span><span class="token punctuation">(</span><span class="token class-name">ZoneId</span><span class="token punctuation">.</span><span class="token function">systemDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocalDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>LocalDate 转 Date</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//  LocalDate转Date</span>\n<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Date</span> <span class="token function">localDate2Date</span><span class="token punctuation">(</span><span class="token class-name">LocalDate</span> localDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>localDate <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>localDate<span class="token punctuation">.</span><span class="token function">atStartOfDay</span><span class="token punctuation">(</span><span class="token class-name">ZoneId</span><span class="token punctuation">.</span><span class="token function">systemDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h2 id="带时区的时间" tabindex="-1"><a class="header-anchor" href="#带时区的时间" aria-hidden="true">#</a> 带时区的时间</h2><p><strong>LocalDate</strong>、<strong>LocalTime</strong> 和 <strong>LocalDateTime</strong> 是不带时区信息的。在 JDK 8 中，带有时区信息的日期时间类是 <strong>ZonedDateTime</strong> 。</p>',43),p=(0,t.Uk)("因特网编号管理局"),o=(0,t._)("small",null,"（IANA）",-1),c=(0,t.Uk)("维护着一份全球所有已知时区的数据库（"),l={href:"http://www.iana.org/time-zones",target:"_blank",rel:"noopener noreferrer"},i=(0,t.Uk)("http://www.iana.org/time-zones"),u=(0,t.Uk)("），每年会更新几次（这些更新主要处理夏令时规则的改变）。Java 就是使用了 IANA 的数据库。"),r=(0,t.uE)('<p>在 Java 中，每个时区都有一个 ID，例如 <code>Asia/Shanghai</code> 。想要获得所有可用的时区，你可以调用 <code>ZoneId.getAvailableZoneIds()</code> 。<small>大概有 600 个。</small></p><p>如果你想获得 ZonedDateTime 对象，你有 2 种途径：</p><ul><li><p>直接使用 <strong>ZonedDateTime.of()</strong> 方法创建；</p></li><li><p>先创建一个 <strong>LocalDateTime</strong> 对象<small>（它不含时区概念）</small>，再调用它的 <strong>atZone</strong> 方法，赋予它时区的概念，生成 <strong>ZonedDateTime</strong> 对象。</p></li></ul><h2 id="_10-springboot-中应用-localdatetime" tabindex="-1"><a class="header-anchor" href="#_10-springboot-中应用-localdatetime" aria-hidden="true">#</a> 10. SpringBoot 中应用 LocalDateTime</h2><h3 id="将-localdatetime-字段以时间戳的方式返回给前端。-docsify-ignore" tabindex="-1"><a class="header-anchor" href="#将-localdatetime-字段以时间戳的方式返回给前端。-docsify-ignore" aria-hidden="true">#</a> 将 LocalDateTime 字段以时间戳的方式返回给前端。 {docsify-ignore}</h3><p>添加日期转化类：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LocalDateTimeConverter</span> <span class="token keyword">extends</span> <span class="token class-name">JsonSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span> value<span class="token punctuation">,</span> <span class="token class-name">JsonGenerator</span> gen<span class="token punctuation">,</span> <span class="token class-name">SerializerProvider</span> serializers<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        gen<span class="token punctuation">.</span><span class="token function">writeNumber</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token class-name">ZoneOffset</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;+8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEpochMilli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>并在 <code>LocalDateTime</code> 字段上添加 <code>@JsonSerialize(using = LocalDateTimeConverter.class)</code> 注解，如下：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@JsonSerialize</span><span class="token punctuation">(</span>using <span class="token operator">=</span> <span class="token class-name">LocalDateTimeConverter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token keyword">protected</span> <span class="token class-name">LocalDateTime</span> gmtModified<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="将-localdatetime-字段以指定格式化日期的方式返回给前端-docsify-ignore" tabindex="-1"><a class="header-anchor" href="#将-localdatetime-字段以指定格式化日期的方式返回给前端-docsify-ignore" aria-hidden="true">#</a> 将 <code>LocalDateTime</code> 字段以指定格式化日期的方式返回给前端 {docsify-ignore}</h3><p>在 LocalDateTime 字段上添加 <code>@JsonFormat(shape=JsonFormat.Shape.STRING, pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;)</code> 注解即可，如下：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token class-name">JsonFormat<span class="token punctuation">.</span>Shape</span><span class="token punctuation">.</span>STRING<span class="token punctuation">,</span> pattern<span class="token operator">=</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">protected</span> <span class="token class-name">LocalDateTime</span> gmtModified<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="将-localdatetime-字段以指定格式化日期的方式返回给前端-docsify-ignore-1" tabindex="-1"><a class="header-anchor" href="#将-localdatetime-字段以指定格式化日期的方式返回给前端-docsify-ignore-1" aria-hidden="true">#</a> 将 LocalDateTime 字段以指定格式化日期的方式返回给前端 {docsify-ignore}</h3><p>在 LocalDateTime 字段上添加 <code>@JsonFormat(shape=JsonFormat.Shape.STRING, pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;)</code> 注解即可，如下：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token class-name">JsonFormat<span class="token punctuation">.</span>Shape</span><span class="token punctuation">.</span>STRING<span class="token punctuation">,</span> pattern<span class="token operator">=</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">protected</span> <span class="token class-name">LocalDateTime</span> gmtModified<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="对前端传入的日期进行格式化-docsify-ignore" tabindex="-1"><a class="header-anchor" href="#对前端传入的日期进行格式化-docsify-ignore" aria-hidden="true">#</a> 对前端传入的日期进行格式化 {docsify-ignore}</h3><p>在 LocalDateTime 字段上添加 <code>@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</code> 注解即可，如下：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">protected</span> <span class="token class-name">LocalDateTime</span> gmtModified<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',18),k={render:function(a,n){const s=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t._)("p",null,[p,o,c,(0,t._)("a",l,[i,(0,t.Wm)(s)]),u]),r],64)}}}}]);
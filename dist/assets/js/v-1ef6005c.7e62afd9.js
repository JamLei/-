"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[1255],{99:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-1ef6005c",path:"/utility/3rd/99-JavaCSV.html",title:"利用 JavaCSV API 来读写 csv 文件",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"背景",slug:"背景",children:[]},{level:2,title:"JavaCSV API",slug:"javacsv-api",children:[]},{level:2,title:"代码实现",slug:"代码实现",children:[{level:3,title:"读操作",slug:"读操作",children:[]},{level:3,title:"写操作",slug:"写操作",children:[]}]}],filePathRelative:"utility/3rd/99-JavaCSV.md",git:{updatedTime:1629826614e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},35134:(n,s,a)=>{a.r(s),a.d(s,{default:()=>k});var t=a(66252);const p=(0,t.uE)('<h1 id="利用-javacsv-api-来读写-csv-文件" tabindex="-1"><a class="header-anchor" href="#利用-javacsv-api-来读写-csv-文件" aria-hidden="true">#</a> 利用 JavaCSV API 来读写 csv 文件</h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>CSV 文件的读写其实是有很多方法的，在这里介绍一种利用第三方 jar 包来读写 CSV 文件的方法。</p><p>日常工作中，如果有现成的第三方工具包，咱最好还是用现成的，有利于提升效率及降低异常率，成熟的三方工具包比较靠谱。</p><h2 id="javacsv-api" tabindex="-1"><a class="header-anchor" href="#javacsv-api" aria-hidden="true">#</a> JavaCSV API</h2><p>maven依赖</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;!-- https://mvnrepository.com/artifact/net.sourceforge.javacsv/javacsv --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;net.sourceforge.javacsv&lt;/groupId&gt;\n    &lt;artifactId&gt;javacsv&lt;/artifactId&gt;\n    &lt;version&gt;2.1&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',7),e=(0,t.Uk)("API 说明文档："),c={href:"http://javacsv.sourceforge.net/",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("http://javacsv.sourceforge.net/"),l=(0,t.Uk)("Java CSV 官网："),u={href:"https://sourceforge.net/projects/javacsv/",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("https://sourceforge.net/projects/javacsv/"),i=(0,t.uE)('<h2 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h2><h3 id="读操作" tabindex="-1"><a class="header-anchor" href="#读操作" aria-hidden="true">#</a> 读操作</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n \n    <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">&quot;XXX.csv&quot;</span><span class="token punctuation">;</span>\n \n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 创建CSV读对象</span>\n        <span class="token class-name">CsvReader</span> csvReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CsvReader</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 读表头</span>\n        csvReader<span class="token punctuation">.</span><span class="token function">readHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span> <span class="token punctuation">(</span>csvReader<span class="token punctuation">.</span><span class="token function">readRecord</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">// 读一整行</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>csvReader<span class="token punctuation">.</span><span class="token function">getRawRecord</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// 读这行的某一列</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>csvReader<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="写操作" tabindex="-1"><a class="header-anchor" href="#写操作" aria-hidden="true">#</a> 写操作</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n \n    <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">&quot;/Users/dddd/test.csv&quot;</span><span class="token punctuation">;</span>\n \n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 创建CSV写对象</span>\n        <span class="token class-name">CsvWriter</span> csvWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CsvWriter</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;GBK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//CsvWriter csvWriter = new CsvWriter(filePath);</span>\n\n        <span class="token comment">// 写表头</span>\n        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;编号&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;年龄&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> content <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;12365&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;张山&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;34&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n        csvWriter<span class="token punctuation">.</span><span class="token function">writeRecord</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        csvWriter<span class="token punctuation">.</span><span class="token function">writeRecord</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        csvWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n \n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>',5),k={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[e,(0,t._)("a",c,[o,(0,t.Wm)(a)])]),(0,t._)("p",null,[l,(0,t._)("a",u,[r,(0,t.Wm)(a)])]),i],64)}}}}]);
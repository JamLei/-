"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[8711],{29791:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-913a0374",path:"/vue-cli/vue-cli-07-scss.html",title:"SCSS 简明上手指南",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"变量",slug:"变量",children:[]},{level:2,title:"@mixin",slug:"mixin",children:[]},{level:2,title:"嵌套",slug:"嵌套",children:[]},{level:2,title:"引用父级选择器 &",slug:"引用父级选择器",children:[]},{level:2,title:"@import 文件导入",slug:"import-文件导入",children:[]}],filePathRelative:"vue-cli/vue-cli-07-scss.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},21172:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(66252).uE)('<h1 id="scss-简明上手指南" tabindex="-1"><a class="header-anchor" href="#scss-简明上手指南" aria-hidden="true">#</a> SCSS 简明上手指南</h1><p>众所周知，CSS 并不是编程语言，用它开发网页的样式是比较麻烦的，因为它没有变量，也没有语句，只有一条条单纯的描述。为了方便开发，『<strong>CSS 预处理器</strong>』被设计出来，它的思想是使用一种编程语言进行样式的开发，之后再转换成 CSS，以供使用。</p><p>Sass 就是一种 CSS 预处理器，而 Scss 则是它的进阶版。</p><p>使用 Sass/Scss 可以轻松地编写出清晰、无冗余、语义化的 CSS ，这是因为：</p><ol><li>Sass/Scss 提供了变量。通过变量可以让 CSS 的值变得可复用；</li><li>Sass/Scss 支持嵌套。嵌套规则让 CSS 内可以继续嵌套 CSS，减少 CSS 重复的选择器，同样使得样式表的结构更加清晰；</li><li>Sass/Scss 还提供了样式导入。可以将分散在多个 Sass 文件中的内容合并到一个 CSS 文件中，避免了大量使用原生 CSS 中 @import 性能问题，保持了 CSS 的整洁和可维护性。</li></ol><blockquote><p>在 Sass 之后，出了名为 Less 的预处理器，它更加简单且兼容 CSS，在 Ruby 社区之外的支持者远超过 Sass，不过，它的编程功能要弱于 Sass 。就是受 Less 的影响和挑战，Sass 才推出了 Scss，也全面兼容 CSS 。</p></blockquote><p>无论是 Sass 还是 Scss ，在 vue-cli 中都是 node-sass 和 sass-loader 在进行编译处理。</p><hr><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><p>变量用来存储需要在 CSS 中复用的信息，例如颜色和字体。Sass/Scss 通过 <code>$</code> 符号去声明一个变量。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>$<span class="token property">active-color</span><span class="token punctuation">:</span> #F90<span class="token punctuation">;</span>                      // 定义 $active-color 变量\n$<span class="token property">active-border</span><span class="token punctuation">:</span> 1px solid $active-color<span class="token punctuation">;</span>  <span class="token selector">// 定义 $active-border 变量\n.active</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> $active-color<span class="token punctuation">;</span>                   // 使用 $active-color 变量\n  <span class="token property">border</span><span class="token punctuation">:</span> $active-border<span class="token punctuation">;</span>                 // 使用 $active-border 变量\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>编译后，上述例子中变量的变量将会被它们的值替换：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.active</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #F90<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #F90<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在上述代码中，Scss 使用 <code>$</code> 来定义变量，使用 <code>:</code> 连接变量的值，变量的值也可以是一连串的属性，像上面的 <code>$active-border</code> 变量一样，使用时直接在属性后接上变量名即可，经过转译就会变成标准的 CSS 样式。</p><p>注意，变量名使用『串型命名法』和『下划线命名法』都可以，而且两者通用，即，可以使用 <code>$active_color</code> 和 <code>$active_border</code> 来调用变量。不过，根据 CSS 默认规则，推荐使用串型命名法。</p><h2 id="mixin" tabindex="-1"><a class="header-anchor" href="#mixin" aria-hidden="true">#</a> @mixin</h2><p>变量还有一个进阶版规则：混合器（mixin）。简单来说，就是一个包含着很多属性的变量。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@mixin</span> rounded-corners</span> <span class="token punctuation">{</span>      // 构建 rounded-corners 圆角混合器\n  <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n  <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.notice</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 4px solid #00aa00<span class="token punctuation">;</span>\n  <span class="token atrule"><span class="token rule">@include</span> rounded-corners<span class="token punctuation">;</span></span> // 调用 rounded-corners 圆角混合器\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>编译后，上述 scss 代码将会变为：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.notice</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 4px solid #00aa00<span class="token punctuation">;</span>\n  <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n  <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>使用 <strong>@mixin</strong> 来给混合器命名，使用 <strong>@include</strong> 加混合器名来调用混合器。</p><h2 id="嵌套" tabindex="-1"><a class="header-anchor" href="#嵌套" aria-hidden="true">#</a> 嵌套</h2><p>Sass/Scss 允许开发人员以嵌套的方式使用 CSS，这样可以减少重复的 CSS 选择器的书写。</p><p>下面的例子表达了一个典型的网站导航样式：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">nav</span> <span class="token punctuation">{</span>\n  <span class="token selector">ul</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">li</span> <span class="token punctuation">{</span> \n    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span> \n  <span class="token punctuation">}</span>\n\n  <span class="token selector">a</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 6px 12px<span class="token punctuation">;</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>大家注意上面代码中的 <code>ul</code>、<code>li</code>、<code>a</code> 选择器都被嵌套在 <code>nav</code> 选择器当中使用，这是一种书写更高可读性 CSS 的良好方式，编译后产生的 CSS 代码如下：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">nav ul</span> <span class="token punctuation">{</span>\n  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n\n<span class="token selector">nav li</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n\n<span class="token selector">nav a</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 6px 12px<span class="token punctuation">;</span>\n  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Scss 允许 CSS 规则嵌套使用，父子规则将会呈现包含选择器的关系，例如：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/*===== SCSS =====*/</span>\n<span class="token selector">#main p</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #00ff00<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 97%<span class="token punctuation">;</span>\n\n  <span class="token selector">.redbox</span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #000000<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>上述代码会被编译成如下形式：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/*===== CSS =====*/</span>\n<span class="token selector">#main p</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #00ff00<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 97%<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n<span class="token selector">#main p .redbox</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #ff0000<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #000000<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这样可以避免重复的使用父级选择器，从而达到简化 CSS 代码结构的目的，例如：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/*===== SCSS =====*/</span>\n<span class="token selector">#main</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 97%<span class="token punctuation">;</span>\n\n  <span class="token selector">p, div</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>\n    <span class="token selector">a</span> <span class="token punctuation">{</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">pre</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>上述代码会被编译成如下形式：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/*===== CSS =====*/</span>\n<span class="token selector">#main</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 97%<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n<span class="token selector">#main p, #main div</span> <span class="token punctuation">{</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n<span class="token selector">#main p a, #main div a</span> <span class="token punctuation">{</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n<span class="token selector">#main pre</span> <span class="token punctuation">{</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="引用父级选择器" tabindex="-1"><a class="header-anchor" href="#引用父级选择器" aria-hidden="true">#</a> 引用父级选择器 &amp;</h2><p>Scss 使用 <code>&amp;</code> 关键字在 CSS 规则中引用父级选择器，例如在嵌套使用伪类选择器的场景下：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/*===== SCSS =====*/</span>\n<span class="token selector">a</span> <span class="token punctuation">{</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>\n  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token selector">&amp;:hover</span> <span class="token punctuation">{</span> <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n  <span class="token selector">body.firefox &amp;</span> <span class="token punctuation">{</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/*===== CSS =====*/</span>\n<span class="token selector">a</span> <span class="token punctuation">{</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>\n  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n<span class="token selector">a:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n<span class="token selector">body.firefox a</span> <span class="token punctuation">{</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>无论 CSS 规则嵌套的深度怎样，关键字 <code>&amp;</code> 都会使用父级选择器级联替换全部其出现的位置：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">#main</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>\n  <span class="token selector">a</span> <span class="token punctuation">{</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>\n    <span class="token selector">&amp;:hover</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/*===== CSS =====*/</span>\n<span class="token selector">#main</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n<span class="token selector">#main a</span> <span class="token punctuation">{</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n<span class="token selector">#main a:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><code>&amp;</code> 必须出现在复合选择器开头的位置，后面再连接自定义的后缀，例如：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/*===== SCSS =====*/</span>\n<span class="token selector">#main</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>\n  <span class="token selector">&amp;-sidebar</span> <span class="token punctuation">{</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/*===== CSS =====*/</span>\n<span class="token selector">#main</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n<span class="token selector">#main-sidebar</span> <span class="token punctuation">{</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>如果在父级选择器不存在的场景使用 <code>&amp;</code> ，Scss 预处理器会报出错误信息。</p><h2 id="import-文件导入" tabindex="-1"><a class="header-anchor" href="#import-文件导入" aria-hidden="true">#</a> @import 文件导入</h2><p>与 CSS 自带的 @import 不同，Sass/Scss 的 <strong>@import</strong> 会在生成 CSS 时将引入的文件直接打包成一个 CSS 文件，无须发起额外的请求。所以，一般可以将不同作用的 .sass/.scss 文件分开写，最后引入一个文件中，在项目中只需调用最后引入所组建的文件即可：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>// main.scss 文件内容\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&quot;./others/xxx.scss&quot;</span><span class="token punctuation">;</span></span>  // 引入不同功能的 .scss 文件\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&quot;./others/yyy.scss&quot;</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&quot;./others/zzz.scss&quot;</span><span class="token punctuation">;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果不同文件中有同名的变量，Sass/Scss 会取最后一个变量使用。</p>',47),e={render:function(n,s){return p}}}}]);
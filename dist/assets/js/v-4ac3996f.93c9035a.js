"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[4667],{85517:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-4ac3996f",path:"/mybatis/02-mybatis-%E5%8A%A8%E6%80%81SQL.html",title:"MyBatis 进阶",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"动态 SQL",slug:"动态-sql",children:[{level:3,title:"if 元素",slug:"if-元素",children:[]},{level:3,title:"choose-when-otherwise 元素",slug:"choose-when-otherwise-元素",children:[]},{level:3,title:"where 元素",slug:"where-元素",children:[]},{level:3,title:"set 元素",slug:"set-元素",children:[]},{level:3,title:"foreach 元素",slug:"foreach-元素",children:[]}]},{level:2,title:"映射结果集（基本）",slug:"映射结果集-基本",children:[{level:3,title:"<resultMap>",slug:"resultmap",children:[]},{level:3,title:"<id> 和 <result>",slug:"id-和-result",children:[]},{level:3,title:"jdbcType",slug:"jdbctype",children:[]},{level:3,title:"自动映射原理",slug:"自动映射原理",children:[]}]},{level:2,title:"映射结果集（高级）",slug:"映射结果集-高级",children:[{level:3,title:"一对一映射",slug:"一对一映射",children:[]},{level:3,title:"一对多映射",slug:"一对多映射",children:[]},{level:3,title:"多对多映射",slug:"多对多映射",children:[]}]},{level:2,title:"分页",slug:"分页",children:[{level:3,title:"RowBounds 分页",slug:"rowbounds-分页",children:[]},{level:3,title:"PageHelper 分页",slug:"pagehelper-分页",children:[]},{level:3,title:"PageInfo 对象属性描述",slug:"pageinfo-对象属性描述",children:[]}]}],filePathRelative:"mybatis/02-mybatis-动态SQL.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},77562:(n,a,s)=>{s.r(a),s.d(a,{default:()=>p});const t=(0,s(66252).uE)('<h1 id="mybatis-进阶" tabindex="-1"><a class="header-anchor" href="#mybatis-进阶" aria-hidden="true">#</a> MyBatis 进阶</h1><h2 id="动态-sql" tabindex="-1"><a class="header-anchor" href="#动态-sql" aria-hidden="true">#</a> 动态 SQL</h2><p>简而言之，动态 SQL 就是在 Mapper 中使用分支、循环等逻辑。常见的动态 SQL 元素包括：</p><ul><li>if 元素</li><li>choose-when-otherwise 元素</li><li>where 元素</li><li>set 元素</li><li>foreach 元素</li></ul><h3 id="if-元素" tabindex="-1"><a class="header-anchor" href="#if-元素" aria-hidden="true">#</a> if 元素</h3><p>if 元素是我们最常见的元素判断语句，相当于 Java 中的 if 语句。它的 test 属性是它的必要属性。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>select<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>int<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Department<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    SELECT * FROM dept\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        WHERE deptno = #{deptno}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="choose-when-otherwise-元素" tabindex="-1"><a class="header-anchor" href="#choose-when-otherwise-元素" aria-hidden="true">#</a> choose-when-otherwise 元素</h3><p>MyBatis 并未提供类似 if-else 元素来处理分支情况，if 元素可出现多次，但它们是并列的判断，而非互斥的判断。</p><p>choose-when-otherwise 元素类似于 Java 中的 switch-case，用于处理多个条件间的互斥判断。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectBySallary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Employee<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    SELECT * FROM emp\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>choose</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>min != null and max != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            WHERE sal &gt;= #{min} AND sal &lt;= #{max}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>min != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            WHERE sal &gt;= #{min} \n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>max != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            WHERE sal &lt;= #{max}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>otherwise</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>otherwise</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>choose</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="where-元素" tabindex="-1"><a class="header-anchor" href="#where-元素" aria-hidden="true">#</a> where 元素</h3><p>如果我们强行规定，上述 choose-when-otherwise 所实现的功能必须使用 if 实现，那么将会写成如下形式：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectBySallary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Employee<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    SELECT * FROM emp\n    WHERE 1 = 1\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>min != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        AND sal &gt;= #{min}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>max != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        AND sal &lt;= #{max}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>注意体会上面 <code>WHERE 1 = 1</code> 的位置及其作用。</p><p>由于判断条件有可能有，也可能没有，所有在 if 元素中，WHERE 关键字出现的地方就有些“尴尬”。<code>WHERE 1 = 1</code> 就是此问题的 <em><strong>非典型</strong></em> 解决方案。</p><p>MyBatis 提供了 Where 元素以解决上述尴尬问题。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectBySallary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Employee<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    SELECT * FROM emp\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>where</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>min != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            AND sal &gt;= #{min}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>max != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            AND sal &lt;= #{max}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>where</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="set-元素" tabindex="-1"><a class="header-anchor" href="#set-元素" aria-hidden="true">#</a> set 元素</h3><p>类似于 where 的元素，set 元素对应于 SQL 语句中的 SET 子句。它专用于 update 语句，用于包含所需更新的列。</p><p>set 元素常常和 if 元素联合使用。因为在“选择性更新”功能中，有一个<code>最后一个逗号</code>问题。</p><p><code>注意</code>，<small>更新行为务必要保证更新至少一个属性，否则 MyBatis 更新语句提示 update 语句错误</small></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateByPrimaryKeySelective<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Department<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    UPDATE dept\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dname != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> dname = #{dname}, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loc != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> loc = #{loc}, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">&gt;</span></span>\n    WHERE deptno = #{deptno}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="foreach-元素" tabindex="-1"><a class="header-anchor" href="#foreach-元素" aria-hidden="true">#</a> foreach 元素</h3><p>foreach 元素使用不多，但是当需要构建包含 IN 子句的查询时，则必用到。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectInDeptnos<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Employee<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    SELECT * FROM emp \n    WHERE deptno IN \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno<span class="token punctuation">&quot;</span></span> <span class="token attr-name">open</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(<span class="token punctuation">&quot;</span></span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>,<span class="token punctuation">&quot;</span></span> <span class="token attr-name">close</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        #{deptno}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>collection 属性表示集合类型，其属性值可以是 list 或 array，对应参数类型为 List 或 数组。</p><h2 id="映射结果集-基本" tabindex="-1"><a class="header-anchor" href="#映射结果集-基本" aria-hidden="true">#</a> 映射结果集（基本）</h2><p>在前面的内容中，由于我们的 PO 类的属性名与数据库中表的列名是一致的，因此，在 Mapper.xml 配置文件中，Mybatis 省略/简化 掉了一块配置。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.bean.po.Department<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>INTEGER<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>location<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>location<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>\n\n...\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>很容易猜得到这个块配置的作用就是<small>（在查询功能中）</small><strong>指定数据库的表的列与 PO 类的属性之间的对应关系</strong> 。</p><p>实际上，Mybatis 需要有这样的一个配置来 指导/告诉 它如何将结果集（ResultSet）中的数据映射成对象，或对象的集合。这是任何一个 ORM 框架的基本功能（重要功能）之一。</p><h3 id="resultmap" tabindex="-1"><a class="header-anchor" href="#resultmap" aria-hidden="true">#</a> &lt;resultMap&gt;</h3><p>resultMap 元素必要的两个属性有：</p><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">id</td><td style="text-align:left;">resultMap 的唯一标识符。</td></tr><tr><td style="text-align:left;">type</td><td style="text-align:left;">它表示映射所返回的实际类型。</td></tr></tbody></table><h3 id="id-和-result" tabindex="-1"><a class="header-anchor" href="#id-和-result" aria-hidden="true">#</a> &lt;id&gt; 和 &lt;result&gt;</h3><p>resultMap 最常见的两个子元素有：</p><ul><li><p>id 子元素</p><p>表示数据库表的主键列。 其中，</p><p><em><code>column</code></em> 属性表示表的列名；</p><p><em><code>property</code></em> 属性，表示映射对象的属性名</p></li><li><p>result 子元素</p><p>表示数据库的普通列。其中，</p><p><em><code>column</code></em> 属性，表示数据库表的列名；</p><p><em><code>property</code></em> 属性，表示映射对象的属性名</p></li></ul><h3 id="jdbctype" tabindex="-1"><a class="header-anchor" href="#jdbctype" aria-hidden="true">#</a> jdbcType</h3><p>将 ResultSet 数据映射成对象时，会涉及到两种数据类型：数据库类型<small>（varchar) </small>和 Java 类型<small>（String）</small>。MyBatis 使用 <strong>类型转换器</strong>（typeHandler）来处理两种类型数据的转换问题。</p><blockquote><p><code>补充</code>，不同的数据库对于同一个数据类型的概念可能会使用不同的『单词』。例如：</p><p><strong>整型</strong>，在 MySQL 中是 <em><strong>INT</strong></em> ，在 Oracle 中是 <em><strong>INTEGER</strong></em> 。</p></blockquote><p>在 Java 的 JDBC 中，对不同数据库的各种类型的『称呼』进行了统一：<strong>JDBC 类型</strong> 。例如：</p><p>『整型』的 JDBC Type 表示为 <em><strong>INTEGER</strong></em> ，即表示 MySQL 中的 <em><strong>INT</strong></em> ，又表示 Oracle 中的 <em><strong>INTEGER</strong></em> 。</p><p>常见的有：</p><table><thead><tr><th style="text-align:left;">JDBC Type</th><th style="text-align:left;">Mysql Type</th><th style="text-align:left;">Java Type</th></tr></thead><tbody><tr><td style="text-align:left;">SMALLINT</td><td style="text-align:left;">SMALLINT</td><td style="text-align:left;">short <br>java.lang.Short</td></tr><tr><td style="text-align:left;">INTEGER</td><td style="text-align:left;">INTEGER</td><td style="text-align:left;">int <br> java.lang.Integer</td></tr><tr><td style="text-align:left;">BIGINT</td><td style="text-align:left;">BIGINT</td><td style="text-align:left;">long <br> java.lang.Long</td></tr><tr><td style="text-align:left;">FLOAT</td><td style="text-align:left;">FLOAT</td><td style="text-align:left;">float <br> java.lang.Float</td></tr><tr><td style="text-align:left;">DOUBLE</td><td style="text-align:left;">DOUBLE</td><td style="text-align:left;">double <br>java.lang.Double</td></tr><tr><td style="text-align:left;">DECIMAL</td><td style="text-align:left;">DECIMAL</td><td style="text-align:left;">java.math.BigDecimal</td></tr><tr><td style="text-align:left;">CHAR</td><td style="text-align:left;">CHAR</td><td style="text-align:left;">java.lang.String</td></tr><tr><td style="text-align:left;">VARCHAR</td><td style="text-align:left;">VARCHAR</td><td style="text-align:left;">java.lang.String</td></tr><tr><td style="text-align:left;">DATE</td><td style="text-align:left;">DATE</td><td style="text-align:left;">java.util.Date</td></tr><tr><td style="text-align:left;">TIME</td><td style="text-align:left;">TIME</td><td style="text-align:left;">java.util.Date</td></tr><tr><td style="text-align:left;">TIMESTAMP</td><td style="text-align:left;">TIMESTAMP</td><td style="text-align:left;">java.util.Date</td></tr></tbody></table><p><strong>注意</strong>：对于 <em><strong>java.lang.Date</strong></em> 和 <em><strong>java.sql.Date</strong></em> ，是两种不同的类型。在写 JavaBean 一定要确认你所使用的是哪个 Date 类型<small>（ 一般都是使用 <em><strong>java.lang.Date</strong></em> ）</small>。</p><h3 id="自动映射原理" tabindex="-1"><a class="header-anchor" href="#自动映射原理" aria-hidden="true">#</a> 自动映射原理</h3><p>在 MyBatis 的配置文件<small>（<em><code>settings</code></em> 元素部分）</small>中，有一个 <code>autoMappingBehavior</code> 配置，其默认值为 <code>PARTIAL</code> ，表示 MyBatis 会自动映射（简单的，没有嵌套关系的）结果集。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>\n    ...\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>autoMappingBehavior<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>PARTIAL<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    ...\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">&gt;</span></span> \n\n  ...\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>如果你的类的属性名与表的字段名一致，那么 MyBatis 会自动将结果集的一行封装成一个 JavaBean 。</p><p>一般而言，数据库表和字段的命名风格是以下划线为分隔符，而 Java 中命名风格是驼峰命风格。</p><p>如果，PO 类的属性名和 Table 的列名仅仅是命名风格的不同，那么此时你可以使用 <code>mapUnderscoreToCamelCase</code> 进行控制，以便于自动转换或不转换。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>\n    ...\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mapUnderscoreToCamelCase<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    ...\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">&gt;</span></span> \n\n  ...\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="映射结果集-高级" tabindex="-1"><a class="header-anchor" href="#映射结果集-高级" aria-hidden="true">#</a> 映射结果集（高级）</h2><p>Table 的列名与 PO 类的属性名的不同，只是一个小 case。<code>&lt;resultMap&gt;</code> 真正的作用和价值并非在此，而是在于『<strong>关系映射</strong>』。</p><h3 id="一对一映射" tabindex="-1"><a class="header-anchor" href="#一对一映射" aria-hidden="true">#</a> 一对一映射</h3><p>使用自定义映射的第二个，也是更重要的原因是：<em><strong>关联映射</strong></em> 。</p><p>两张表的一对一映射在类与类的关系上体现为 一个类“持有”另一个类。双向的一对一映射则表现为 两个类互相“持有”。</p><p>持有方所对应的表为『从表』，被持有方所对应的表为『主表』。<code>association</code> 元素用于 从表 方。</p><p><code>association</code> 元素的常用属性有：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">property 属性</td><td style="text-align:left;">表示所映射对象的属性名。</td></tr><tr><td style="text-align:left;">column 属性</td><td style="text-align:left;">表示表的列名，此处必为 <em><strong>外键列</strong></em> 。</td></tr><tr><td style="text-align:left;">javaType 属性</td><td style="text-align:left;">表示属性所对应的类型名称。</td></tr><tr><td style="text-align:left;">select 属性</td><td style="text-align:left;">表示为了获取关联对象，所调用的另一条 MyBatis select 语句的 id 。</td></tr></tbody></table><p><strong>第一种写法：传统写法</strong></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.dao.EmployeeMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.bean.po.Employee<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span>\n    ...\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>association</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>department<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.bean.po.Department<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>INTEGER<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dname<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dname<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>association</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>第二种写法：调用法</strong></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.dao.EmployeeMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.bean.po.Employee<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span>\n    ...\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>association</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>department<span class="token punctuation">&quot;</span></span> \n        <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno<span class="token punctuation">&quot;</span></span> \n        <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.bean.po.Department<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.dao.DepartmentMapper.selectByPrimaryKey<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="一对多映射" tabindex="-1"><a class="header-anchor" href="#一对多映射" aria-hidden="true">#</a> 一对多映射</h3><p>一对多的映射在类与类的关系上体现为：一个类持有另一个类的一个对象，另一个类持有这个类的对象集合。</p><p>如果一对多映射是单向的，则只会使用到 collection 元素；如果一对多映射是双向的，那么还会使用到前面所说的 association 元素。</p><p>collection 元素的常用属性有：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">property 属性</td><td style="text-align:left;">表示所映射对象的属性名。</td></tr><tr><td style="text-align:left;">column 属性</td><td style="text-align:left;">表示表的列名，此处必为 <em><strong>外键列</strong></em></td></tr><tr><td style="text-align:left;">javaType 属性</td><td style="text-align:left;">表示属性所对应的类型名称，此处必为某种集合类型</td></tr><tr><td style="text-align:left;">ofType 属性</td><td style="text-align:left;">表示集合当中的单元类型</td></tr><tr><td style="text-align:left;">select 属性</td><td style="text-align:left;">表示为了获取关联对象，所调用的另一条 MyBatis select 语句的 id</td></tr></tbody></table><p><strong>第一种写法：</strong></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Department<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dname<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dname<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loc<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>employeeList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Employee<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>empno<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>empno<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ename<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ename<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>job<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>job<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mgr<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mgr<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hiredate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hiredate<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sal<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sal<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>comm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>comm<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collection</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectByPK<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>int<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    select dept.deptno  deptno,\n      dept.dname   dname,\n      dept.loc     loc,\n      emp.empno    empno,\n      emp.ename    ename,\n      emp.job      job,\n      emp.mgr      mgr,\n      emp.hiredate hiredate,\n      emp.sal      sal,\n      emp.comm     com\n    from dept,\n      emp\n    where dept.deptno = emp.deptno\n      and dept.deptno = #{deptno}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p><strong>第二种写法：</strong></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.dao.DepartmentMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.bean.po.Department<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span>\n    ...\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno<span class="token punctuation">&quot;</span></span> \n        <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java.util.List<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.bean.po.Employee<span class="token punctuation">&quot;</span></span> \n        <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>employeeSet<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.dao.EmployeeMapper.selectByPK<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">...</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="多对多映射" tabindex="-1"><a class="header-anchor" href="#多对多映射" aria-hidden="true">#</a> 多对多映射</h3><p>MyBatis 并没有提供专门的元素用于多对多方案，采取了一种“聪明”的办法，将“三张表”的多对多关系转化为“两张表”的一对多关系。</p><p>所以，在多对多关系中，使用的仍然是 <code>collection</code> 元素。</p><p>例如：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.dao.DepartmentMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.bean.po.Department<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span>\n    ...\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deptno<span class="token punctuation">&quot;</span></span> \n        <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java.util.Set<span class="token punctuation">&quot;</span></span>  \n        <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.bean.po.Employee<span class="token punctuation">&quot;</span></span> \n        <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>employeeSet<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.dao.EmployeeMapper.selectByDeptno<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">...</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>『完』</p><h2 id="分页" tabindex="-1"><a class="header-anchor" href="#分页" aria-hidden="true">#</a> 分页</h2><p>Mybatis 中实现分页功能有三种途径：</p><ul><li><p>RowBounds 分页<small>（不建议使用）</small></p></li><li><p>Example 分页<small>（简单情况可用)</small></p></li><li><p>PageHelper 分页</p></li></ul><h3 id="rowbounds-分页" tabindex="-1"><a class="header-anchor" href="#rowbounds-分页" aria-hidden="true">#</a> RowBounds 分页</h3><p>MyBatis 本身通过 RowBounds 对象提供了分页功能，你仅需为你的 dao 的查询方法多添加 RowBounds 类型的一个参数，并且不需要对配置文件做任何调整。</p><blockquote><p><small>RowBounds 也称原生分页、逻辑分页。</small></p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">RowBounds</span> bounds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RowBounds</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> dao<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>bounds<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>但是这种分页是一种 <strong>逻辑分页</strong>，MyBatis 并未使用 <strong>limit</strong> 子句，查询的仍是 <em>所有数据</em>，只是它仅给你“看”到了所有数据中的一部分，逻辑分页虽然完成了分页功能，但是它并未通过分页功能的对性能问题有所提升。</p><h3 id="pagehelper-分页" tabindex="-1"><a class="header-anchor" href="#pagehelper-分页" aria-hidden="true">#</a> PageHelper 分页</h3><p>PageHelper 是一款被广泛使用的 MyBatis 插件。它通过 Mybatis 的插件机制，巧妙地通过机制，在不需要配置文件（不需要写 limit 子句）的情况下，动态去修改你所执行的 SQL，在其后动态添加 limit 子句。</p><p>为了使用 PageHelper 需要引入相应的包：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>PageHelper 是一款 MyBaits 插件，使用它需要向 Mybatis 注册 PageHelper，并对它作出相关配置（<code>mybatis-config.xml</code>）。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- com.github.pagehelper 为 PageHelper 类所在包名 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">interceptor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.github.pagehelper.PageInterceptor<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 使用下面的方式配置参数，后面会有所有的参数介绍 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>helperDialect<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mysql<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>pagehelper 有 4.x 和 5.x 两个版本，用法有所不同，并不是向下兼容，同样的配置在使用 4.x 或 5.x 版本中可能会报错。例如，上面的 <code>helperDialect</code> 就是 5.x 中的配置，在 4.x 中使用的是 <code>dialect</code> 。</p></div><p>如果 Mybatis 整合进了 Spring，除了上述这样配置外，还可以将相应的注册-配置工作就在 Spring 的配置文件中进行：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sqlSessionFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.spring.SqlSessionFactoryBean<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">...</span><span class="token punctuation">/&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>plugins<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>array</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.github.pagehelper.PageInterceptor<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>properties<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n          <span class="token comment">&lt;!--使用下面的方式配置参数，一行配置一个 --&gt;</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>\n            param1=value1\n            param2=value2\n            ...\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>array</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><strong>插件的属性配置</strong>：</p><ul><li><p>helperDialect</p><p>用于指明底层数据库类型：oracle, mysql, mariadb, sqlite, hsqldb, postgresql, db2, sqlserver, informix, h2, sqlserver2012, derby</p></li><li><p>reasonable</p><p>是否启用『合理化』功能<br></p><p>启用（true）时，如果 <code>pageNum &lt; 1</code>，会返回第一页内容；如果 <code>pageNum &gt; pages</code>，会返回查询最后一页。<br></p><p>禁用（false）时，超出合理的范围会直接返回空数据。</p></li></ul><p>在使用 PageHelper 时，PageHelper 提供了两种风格来描述分页：</p><ul><li><p>offset / limit 组合</p><p><code>PageHelper.offsetPage(0, 3);</code><br></p><p>很显然，这种风格就是 SQL 语句的分页写法</p></li><li><p>pageNum / pageSize 组合</p><p><code>PageHelper.startPage(1, 10);</code><br></p><p>这种风格实际上是在模拟“人的语气”<br></p><p>插件作者建议推荐方式</p></li></ul><p>在你调用查询方法之前，调用 PageHelper 的上述两个方法中的任意一个，都可激活 PageHelper 插件的分页功能，使其动态地『帮』你修改SQL语句<small>（添加 <em>limit</em> 子句）</small>。而 Mybatis 的 select 返回的结果就返回的是一页数据。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">PageHelper</span><span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> empDao<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> info <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p><small><code>注意</code>，由于 PageHelper 插件的实现涉及到 ThreadLocal 原理，这导致一旦 PageHelper 生产了一个分页参数，但是没有被消费，这个参数就会一直保留在这个线程上。当这个线程再次被使用时，就可能导致不该分页的方法去消费这个分页参数，这就产生了莫名其妙的分页。所以，分页参数的创建代码，和查询方法的调用代码，必须“紧密的在一起”。</small></p></blockquote><p>PageHelper 插件流行的原因在于，它不仅仅能实现分页功能，而且还进一步封装了页面上的『<strong>分页导航条</strong>』所需要的所有相关信息。</p><p>使用这一个功能时，你需要创建 <em><strong>PageInfo</strong></em> 对象，并为其设置 4 个关键数据：</p><ul><li><p>页面上所需显示的数据<small>（分页查询的结果）</small></p></li><li><p>导航栏上导航数字的个数</p></li><li><p>当前页号</p></li><li><p>页面大小</p></li><li><p>总数据量</p></li></ul><p>例如：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// &lt;&lt; &lt; 2 3 [4] 5 6 &gt; &gt;&gt;</span>\n<span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> pageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>empList<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\npageInfo<span class="token punctuation">.</span><span class="token function">setPageNum</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 当前页的页号</span>\npageInfo<span class="token punctuation">.</span><span class="token function">setPageSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 页面大小，即，每页显示的数据量</span>\n<span class="token comment">// pageInfo.setTotal(32);  // 数据库中的总数据量。现在可省略，PageHelper 会自己去查。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>创建 PageInfo 对象，并为其 4 个核心属性赋值后，便可以使用它：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;是否有下一页：{}&quot;</span><span class="token punctuation">,</span> pageInfo<span class="token punctuation">.</span><span class="token function">isHasNextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;是否有上一页：{}&quot;</span><span class="token punctuation">,</span> pageInfo<span class="token punctuation">.</span><span class="token function">isHasPreviousPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;导航栏上第一个页号：{}&quot;</span><span class="token punctuation">,</span> pageInfo<span class="token punctuation">.</span><span class="token function">getNavigateFirstPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;导航栏上最后一个页号：{}&quot;</span><span class="token punctuation">,</span> pageInfo<span class="token punctuation">.</span><span class="token function">getNavigateLastPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;导航栏上的五个导航数字：{}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>pageInfo<span class="token punctuation">.</span><span class="token function">getNavigatepageNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;共有 {} 页&quot;</span><span class="token punctuation">,</span> pageInfo<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{} / {} &quot;</span><span class="token punctuation">,</span> pageInfo<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pageInfo<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pageinfo-对象属性描述" tabindex="-1"><a class="header-anchor" href="#pageinfo-对象属性描述" aria-hidden="true">#</a> PageInfo 对象属性描述</h3><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th><th style="text-align:left;">举例</th></tr></thead><tbody><tr><td style="text-align:left;">int pageNum</td><td style="text-align:left;">当前页</td><td style="text-align:left;">比如，当前为第 <code>5</code> 页</td></tr><tr><td style="text-align:left;">int pageSize</td><td style="text-align:left;">每页的数量</td><td style="text-align:left;">比如，每页（计划/预期）显示 <code>10</code> 条数据</td></tr><tr><td style="text-align:left;">int size</td><td style="text-align:left;">当前页的数量</td><td style="text-align:left;">比如，以 98 条总数据为例，每页最多显示 <code>10</code> 条（最后一页显示 <code>8</code> 条数据）</td></tr><tr><td style="text-align:left;">int startRow</td><td style="text-align:left;">当前页面第一个元素在数据库中的行号</td><td style="text-align:left;">比如，以 98 条总数据的最后一页为例，第一条数据是第 <code>91</code> 条</td></tr><tr><td style="text-align:left;">int endRow</td><td style="text-align:left;">当前页面最后一个元素在数据库中的行号</td><td style="text-align:left;">比如，以 98 条总数据的最后一页为例，最后一条数据是第 <code>98</code> 条</td></tr><tr><td style="text-align:left;">int pages</td><td style="text-align:left;">总页数</td><td style="text-align:left;">比如，以 98 条总数据为例，每页显示 10 条（其中最后一页 8 条），因此共 <code>10</code> 页</td></tr><tr><td style="text-align:left;">int prePage</td><td style="text-align:left;">前一页</td><td style="text-align:left;">比如，当前是第 5 页，所以前一页为 <code>4</code></td></tr><tr><td style="text-align:left;">int nextPage</td><td style="text-align:left;">下一页</td><td style="text-align:left;">比如，当前是第 5 页，所以下一页为 <code>6</code></td></tr><tr><td style="text-align:left;">boolean isFirstPage</td><td style="text-align:left;">是否为第一页</td><td style="text-align:left;">比如，当前是第 5 页，不是第 1 页，所以为 <code>false</code></td></tr><tr><td style="text-align:left;">boolean isLastPage</td><td style="text-align:left;">是否为最后一页</td><td style="text-align:left;">比如，当前是第 5 页，不是最后 1 页，所以为 <code>false</code></td></tr><tr><td style="text-align:left;">boolean hasPreviousPage</td><td style="text-align:left;">是否有前一页</td><td style="text-align:left;">比如，当前是第 5 页，有前一页，所以为 <code>true</code></td></tr><tr><td style="text-align:left;">boolean hasNextPage</td><td style="text-align:left;">是否有下一页</td><td style="text-align:left;">比如，当前是第 5 页，有后一页，所以为 <code>true</code></td></tr><tr><td style="text-align:left;">int navigatePages</td><td style="text-align:left;">导航页码数</td><td style="text-align:left;">比如，页面导航栏显示 [3 4 5 6 7] 共 <code>5</code> 个数字</td></tr><tr><td style="text-align:left;">int[] navigatepageNums</td><td style="text-align:left;">所有导航页号</td><td style="text-align:left;">比如，页面导航栏显示 <code>[3 4 5 6 7]</code> 这 5 个数字</td></tr><tr><td style="text-align:left;">int navigateFirstPage</td><td style="text-align:left;">导航条上的第一页</td><td style="text-align:left;">比如，页面导航栏显示 [3 4 5 6 7] 时，第一页是第 <code>3</code> 页</td></tr><tr><td style="text-align:left;">int navigateLastPage</td><td style="text-align:left;">导航条上的最后一页</td><td style="text-align:left;">比如，页面导航栏显示 [3 4 5 6 7] 时，第一页是第 <code>7</code> 页</td></tr></tbody></table>',113),p={render:function(n,a){return t}}}}]);
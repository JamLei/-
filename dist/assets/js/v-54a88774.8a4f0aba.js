"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[9764],{16419:(t,e,s)=>{s.r(e),s.d(e,{data:()=>n});const n={key:"v-54a88774",path:"/maven/007-%E6%9E%84%E5%BB%BA%E9%A1%B9%E7%9B%AE.html",title:"构建项目",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"maven/007-构建项目.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},63801:(t,e,s)=>{s.r(e),s.d(e,{default:()=>r});const n=(0,s(66252).uE)('<h1 id="构建项目" tabindex="-1"><a class="header-anchor" href="#构建项目" aria-hidden="true">#</a> 构建项目</h1><ul><li><p>mvn compile</p><p>执行 <strong>mvn compile</strong> 命令，完成编译操作</p><p>执行完毕后，会生成 <strong>target</strong> 目录，该目录中存放了编译后的字节码文件<small>（ <em>.class</em> 文件 ）</small>。</p></li><li><p>mvn clean</p><p>执行 <strong>mvn clean</strong> 命令，完成清理操作。</p><p>执行完毕后，会将 <strong>target</strong> 目录删除。</p></li><li><p>mvn test</p><p>执行 <strong>mvn test</strong> 命令，完成单元测试操作。</p><p>执行完毕后，会在 <strong>target</strong> 目录中生成三个文件夹：<em>surefire</em> 、<em>surefire-reports<small>（测试报告）</small></em> 、<em>test-classes<small>（测试的字节码文件）</small></em> 。</p></li><li><p>mvn package</p><p>执行 <strong>mvn package</strong> 命令，完成打包操作。</p><p><strong>package</strong> 命令会涵盖 <strong>compile</strong> 命令和 <strong>test</strong> 命令，<small>即，执行 <strong>package</strong> 命令会触发 <strong>compile</strong> 命令和 <strong>test</strong> 命令的执行。</small></p><p>执行完毕后，会在 <strong>target</strong> 目录中生成一个文件，该文件可能是 <em>jar</em> 、<em>war</em> ，这取决于 <em>pom.xml</em> 配置文件中的 <strong>&lt;packaging&gt;</strong> 。</p></li><li><p>mvn install</p><p>将包安装至本地仓库，以便让其它项目依赖。</p><p><strong>install</strong> 命令会涵盖 <strong>package</strong> 命令，<small>即，执行 <strong>install</strong> 命令会触发 <strong>package</strong> 命令的执行。</small></p></li></ul>',2),r={render:function(t,e){return n}}}}]);
"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[5853],{61781:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-77eed7e0",path:"/spring-boot/04-spring-boot-jsp.html",title:"Spring Boot 项目中使用 JSP",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"项目结构",slug:"项目结构",children:[]},{level:2,title:"引入依赖包",slug:"引入依赖包",children:[]},{level:2,title:"编写页面和后台",slug:"编写页面和后台",children:[]},{level:2,title:"运行",slug:"运行",children:[{level:3,title:"方式一：Maven 命令运行",slug:"方式一-maven-命令运行",children:[]},{level:3,title:"方式二：在 IDEA 中运行",slug:"方式二-在-idea-中运行",children:[]},{level:3,title:"方式三：打 war 包部署运行",slug:"方式三-打-war-包部署运行",children:[]}]}],filePathRelative:"spring-boot/04-spring-boot-jsp.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},65765:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(66252).uE)('<h1 id="spring-boot-项目中使用-jsp" tabindex="-1"><a class="header-anchor" href="#spring-boot-项目中使用-jsp" aria-hidden="true">#</a> Spring Boot 项目中使用 JSP</h1><p>在 Spring Boot 项目中不是不可以使用 JSP 。想在 Spring Boot 中使用 JSP，需要满足一些特殊要求。</p><h2 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构" aria-hidden="true">#</a> 项目结构</h2><p>Spring Boot 项目想要支持 JSP，其项目结构必须如下：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>spring-boot-jsp\n│── pom.xml\n└── src\n    ├── main\n    │   ├── java\n    │   ├── resouces\n    │   └── webapp\n    │       └── WEB-INF\n    │           └── jsp\n    │               └── welcome.jsp\n    └── test\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>在配置文件 <strong>application.properties</strong> 中进行配置：</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">spring.mvc.view.prefix</span><span class="token punctuation">=</span><span class="token attr-value">/WEB-INF/jsp/</span>\n<span class="token attr-name">spring.mvc.view.suffix</span><span class="token punctuation">=</span><span class="token attr-value">.jsp</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><p><strong>spring.mvc.view.prefix</strong> 指明 jsp 文件在 webapp 下的哪个目录</p></li><li><p><strong>spring.mvc.view.suffix</strong> 指明 jsp 以什么样的后缀结尾</p></li></ul><h2 id="引入依赖包" tabindex="-1"><a class="header-anchor" href="#引入依赖包" aria-hidden="true">#</a> 引入依赖包</h2><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jstl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat.embed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat-embed-jasper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li><p><strong>spring-boot-starter-web</strong> 包依赖了 <strong>spring-boot-starter-tomcat</strong>，因此，后者不再需要单独配置；</p></li><li><p><strong>jstl</strong> 是一个 JSP 的 jstl 标签库；</p></li><li><p><strong>tomcat-embed-jasper</strong> 主要用来支持 JSP 的解析和运行。</p></li></ul><h2 id="编写页面和后台" tabindex="-1"><a class="header-anchor" href="#编写页面和后台" aria-hidden="true">#</a> 编写页面和后台</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;%@ page contentType=&quot;text/html; charset=UTF-8&quot; pageEncoding=&quot;UTF-8&quot;%&gt;\n<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\nTime: ${time}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>\nMessage: ${message}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WelcomeController</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">welcome</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;welcome&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="运行" tabindex="-1"><a class="header-anchor" href="#运行" aria-hidden="true">#</a> 运行</h2><h3 id="方式一-maven-命令运行" tabindex="-1"><a class="header-anchor" href="#方式一-maven-命令运行" aria-hidden="true">#</a> 方式一：Maven 命令运行</h3><p>cmd 进入项目根路径下，执行：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mvn clean spring-boot:run\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>补充：IDEA 的 Maven 工具窗口中，有个 <code>M</code> 图标，通过点击它在弹出的窗口中可直接手动执行 maven 命令。</p><h3 id="方式二-在-idea-中运行" tabindex="-1"><a class="header-anchor" href="#方式二-在-idea-中运行" aria-hidden="true">#</a> 方式二：在 IDEA 中运行</h3><p>如果像其他项目一样，直接在 IDEA 中通过 main 方法来启动项目，在访问测试的时候会出现 <code>404 not found</code> 。</p><p>这是因为 Spring Boot JSP 项目需要额外进行一个设置：选择 <code>Edit Configurations</code> 选项，打开 <code>Configuration</code>，为 <code>Working directory</code> 赋值为项目的根目录。</p><p><img src="https://hemiao3000.gitee.io/java-note-img/images/spring-boot/img/springboot-jsp-1.png" alt="springboot-jsp-1"></p><h3 id="方式三-打-war-包部署运行" tabindex="-1"><a class="header-anchor" href="#方式三-打-war-包部署运行" aria-hidden="true">#</a> 方式三：打 war 包部署运行</h3><ul><li><p>step 1：在 pom.xml 里设置打包格式为 <code>war</code> 。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>war<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>step 2：排除内嵌的 Tomcat 依赖，避免 jar 包冲突。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 排除内置容器。导出成 war 包可以让外部容器运行 spring-boot 项目 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li><li><p>step 3：添加 Servlet 的支持</p><p>Spring Boot 项目必须实现 <strong>SpringBootServletInitializer</strong> 接口的 <em>.configure()</em> 方法才能让外部容器运行 Spring Boot 项目。</p><p>在启动类同目录下创建 <strong>ServletInitializer</strong> 类：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServletInitializer</span> <span class="token keyword">extends</span> <span class="token class-name">SpringBootServletInitializer</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token class-name">SpringApplicationBuilder</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">SpringApplicationBuilder</span> application<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> application<span class="token punctuation">.</span><span class="token function">sources</span><span class="token punctuation">(</span><span class="token class-name">JspApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>step 4：maven 命令打包</p><p>在项目根目录下执行：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mvn clean package\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>step 5：发布运行</p><p>将项目 target 目录下的 <code>.war</code> 包拷贝到 tomcat 的 <code>webapps</code> 目录下，运行 tomcat 的 <code>bin</code> 目录下的 <code>startup.bat</code> 启动 tomcat 。</p><p>在浏览器中访问即可。</p></li></ul>',25),t={render:function(n,s){return p}}}}]);
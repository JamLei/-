"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[8220],{90650:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-83ec2790",path:"/spring-mvc/201-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.html",title:"Spring MVC 中文件上传",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"利用 commons-fileupload 文件上传",slug:"利用-commons-fileupload-文件上传",children:[]},{level:2,title:"使用 Servlet 3.1 内置的文件上传功能",slug:"使用-servlet-3-1-内置的文件上传功能",children:[]}],filePathRelative:"spring-mvc/201-文件上传.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},95143:(n,a,s)=>{s.r(a),s.d(a,{default:()=>r});var t=s(66252);const p=(0,t.uE)('<h1 id="spring-mvc-中文件上传" tabindex="-1"><a class="header-anchor" href="#spring-mvc-中文件上传" aria-hidden="true">#</a> Spring MVC 中文件上传</h1><blockquote><p>为了能上传文件，必须将 from 表单的 <strong>method</strong> 设置为 <strong>POST</strong>，并将 <strong>enctype</strong> 设置为 <strong>multipart/form-data</strong> 。</p></blockquote><p>实现文件上传的『底层』方案有 2 种：</p><ul><li><p>使用 Apache Commons FileUpload 包</p></li><li><p>使用 Servlet 3.1 内置的文件上传功能</p></li></ul><p>无论你的底层是使用上述的哪种方案，Spring MVC 都对它们作出了『包装』，让 Spring MVC 中的上传文件的代码简化而统一：提供一个 <strong>MultipartResolver</strong>，并将 <strong>&lt;input type=&quot;file&quot; ...&gt;</strong> 类型的请求参数绑定到请求处理方法的 <strong>MultipartFile</strong> 类型的参数上。<small>（两者具体的类型有所不同）</small></p>',5),e=(0,t._)("p",null,[(0,t.Uk)("这需要提前说明以下，Spring MVC 利用 Servlet 3.1 内置的文件上传功能上传文件时，有个小问题。有人发现无法将它所用到的 "),(0,t._)("strong",null,"StandardMultipartResolver"),(0,t.Uk)(" 的编码从默认的 "),(0,t._)("strong",null,"iso-8859-1"),(0,t.Uk)(" 改为 "),(0,t._)("strong",null,"UTF-8"),(0,t.Uk)(" 。也有人分析，在使用 tomcat 7 时会出现这个问题，并认为这是 tomcat 7 的 bug 。所有，简单起见，建议优先考虑 "),(0,t._)("strong",null,"commons-fileupload"),(0,t.Uk)(" 方案。")],-1),o=(0,t.Uk)("具体讨论可参见："),l={href:"https://stackoverflow.com/questions/9055025/how-to-change-the-character-encoding-for-servlet-3-0-spring-mvc-multipart-upload",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("stakoverflow"),u=(0,t.Uk)(" 。"),i=(0,t.uE)('<h2 id="利用-commons-fileupload-文件上传" tabindex="-1"><a class="header-anchor" href="#利用-commons-fileupload-文件上传" aria-hidden="true">#</a> 利用 commons-fileupload 文件上传</h2><p>利用 commons-fileupload 文件上传需要利用引入 <strong>commons-fileupload</strong> 包<small>（它依赖于 <strong>commons-io</strong> 包）</small></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-fileupload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-fileupload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 好久没更新了。作者觉得该实现的功能都实现了，该优化的都优化了，到头了。 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Spring MVC 是通过 <strong>MultipartResolver</strong> 的 JavaBean 提供、支持文件上传功能。<em>commons-fileupload</em> 中该接口的实现类是 <strong>CommonsMultipartResolver</strong> 。</p><p>简单来说，CommonsMultipartResolver 是 Spring MVC 去利用 commons-fileupload 实现上传功能的【桥梁】。</p><p>在 <strong>spring-web.xml</strong> 中添加如下配置，让 Spring 负责创建并初始化该 Bean 。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>multipartResolver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.web.multipart.commons.CommonsMultipartResolver<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>maxUploadSize<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>104857600<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>maxInMemorySize<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4096<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaultEncoding<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n  <span class="token comment">&lt;!-- 更多配置根据具体需求进一步再学习/使用 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>至此，配置结束。在 Spring MVC 的 Controller 中，Spring MVC 就可以将用户上传的数据绑定到 <strong>CommonsMultipartFile</strong> 类型的参数上。</p><blockquote><p>注意，此处的 <strong>@RequestParam()</strong> 不能省略，即便是 name 与 name 一致。</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/upload.do&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> \n                     <span class="token class-name">String</span> password<span class="token punctuation">,</span>\n                     <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;uploadfile&quot;</span><span class="token punctuation">)</span> <span class="token class-name">CommonsMultipartFile</span> uploadfile<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> uploadfile<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> uploadfile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token string">&quot;D:/&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> uploadfile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    uploadfile<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>CommonsMultipartFile 支持如下功能：</p><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>byte[] getBytes()</code></td><td style="text-align:left;">以字节数组的形式返回文件的内容</td></tr><tr><td style="text-align:left;"><code>String getContentType()</code></td><td style="text-align:left;">返回文件的内容类型</td></tr><tr><td style="text-align:left;"><code>InputStream getInputStream()</code></td><td style="text-align:left;">返回一个 InputStream，可以从中去读文件内容</td></tr><tr><td style="text-align:left;"><code>String getName()</code></td><td style="text-align:left;">返回请求参数的 name</td></tr><tr><td style="text-align:left;"><code>String getOriginalFilename()</code></td><td style="text-align:left;">返回文件原本的文件名</td></tr><tr><td style="text-align:left;"><code>long getSize()</code></td><td style="text-align:left;">返回文件大小（单位字节）</td></tr><tr><td style="text-align:left;"><code>boolean isEmpty()</code></td><td style="text-align:left;">判断上传的文件是否为空</td></tr><tr><td style="text-align:left;"><code>void transferTo(File destination)</code></td><td style="text-align:left;">将上传的文件保存到指定位置</td></tr></tbody></table><p>如果从页面上同时上传多个文件，那么页面上的 file 可以使用同一个 name，而代码中则使用 CommonsMultipartFile 的数组类型的参数接受。数组中的每一个 MultipartFile 就代表着一个上传的文件。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>files<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>files<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>files<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;files&quot;</span><span class="token punctuation">)</span> <span class="token class-name">CommonsMultipartFile</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="使用-servlet-3-1-内置的文件上传功能" tabindex="-1"><a class="header-anchor" href="#使用-servlet-3-1-内置的文件上传功能" aria-hidden="true">#</a> 使用 Servlet 3.1 内置的文件上传功能</h2><blockquote><p>补充，其实 Servlet 3.0 就已经开始提供内置的上传功能，只不过该功能在 Servlet 3.1 中进一步增强/改进/完成。因此一般的说法是 Servlet 3.1 支持内置的文件上传功能。</p></blockquote><p>利用 Servlet 3.1 实现文件上传的概念和使用过程和利用 commons-fileupload 本质上并无太大区别。只不过有几处小区别：</p><ol><li>提供文件上传功能的是 <strong>StandardServletMultipartResolver</strong> ，不再是 <em>CommonsMultipartResolver</em> 。</li></ol><p>spring-web.xml：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>multipartResolver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.web.multipart.support.StandardServletMultipartResolver<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>对上传过程中的相关配置，是配置在 <em><code>web.xml</code></em> 中的 DispacherServlet 下，而非 <em><code>spring-web.xml</code></em> 中的 MultipartResolver 下。</li></ol><p>web.xml：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>multipart-config</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">&gt;</span></span>d:/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 临时文件的目录。该目录必须存在 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>max-file-size</span><span class="token punctuation">&gt;</span></span>2097152<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>max-file-size</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 一次请求上传的单个文件最大2M --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>max-request-size</span><span class="token punctuation">&gt;</span></span>4194304<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>max-request-size</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 一次请求上传的多个文件整体大小不超过4M --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>multipart-config</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="3"><li>Controller 代码中使用的注解是 <strong>@RequestPart(&quot;file&quot;)</strong>，而非 <em>@RequestParam</em>；绑定的参数类型是 <strong>MultipartFile</strong>，而不是 <em>CommonsMultipartFile</em> 。</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/upload.do&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> \n                     <span class="token class-name">String</span> password<span class="token punctuation">,</span>\n                     <span class="token annotation punctuation">@RequestPart</span><span class="token punctuation">(</span><span class="token string">&quot;files&quot;</span><span class="token punctuation">)</span> <span class="token class-name">MultipartFile</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files<span class="token punctuation">)</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>MultipartFile 对象的功能与 CommonsMultipartFile 基本类似。</p>',27),r={render:function(n,a){const s=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("blockquote",null,[e,(0,t._)("p",null,[o,(0,t._)("a",l,[c,(0,t.Wm)(s)]),u])]),i],64)}}}}]);
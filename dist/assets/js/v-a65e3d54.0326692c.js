"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[3601],{87192:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-a65e3d54",path:"/other/99-minIO.html",title:"MinIO",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"other/99-minIO.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},98738:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(66252).uE)('<h1 id="minio" tabindex="-1"><a class="header-anchor" href="#minio" aria-hidden="true">#</a> MinIO</h1><p>https://dl.min.io/server/minio/release/windows-amd64/minio.exe</p><p>minio.exe server D:\\</p><p>using default root credentials minioadmin:minioadmin</p><p>https://dl.min.io/client/mc/release/windows-amd64/mc.exe</p><p>mc.exe --help</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// 使用 MinIO 服务的 URL 和端口，Access key 和 Secret key 创建一个 MinioClient 对象。</span>\n    <span class="token class-name">MinioClient</span> minioClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MinioClient</span><span class="token punctuation">(</span><span class="token string">&quot;http://127.0.0.1:9000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;minioadmin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;minioadmin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 检查存储桶是否已经存在</span>\n    <span class="token keyword">boolean</span> isExist <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">bucketExists</span><span class="token punctuation">(</span><span class="token string">&quot;asiatrip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isExist<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Bucket already exists.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 创建一个名为 asiatrip 的存储桶，用于存储照片的 zip 文件。</span>\n        minioClient<span class="token punctuation">.</span><span class="token function">makeBucket</span><span class="token punctuation">(</span><span class="token string">&quot;asiatrip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 使用 putObject 上传一个文件到存储桶中。</span>\n    minioClient<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span><span class="token string">&quot;asiatrip&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;new_schema.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;D:\\\\new_schema.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\new_schema.png is successfully uploaded as new_schema.png to `asiatrip` bucket.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>',7),p={render:function(n,s){return t}}}}]);
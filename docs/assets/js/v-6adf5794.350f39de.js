"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[1340],{37796:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-6adf5794",path:"/vue-cli/vue-cli-99-%E6%9D%82%E9%A1%B9.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"引入 CSS",slug:"引入-css",children:[]},{level:2,title:"插件机制：Plugin",slug:"插件机制-plugin",children:[{level:3,title:"老办法",slug:"老办法",children:[]}]},{level:2,title:"使用 Vue.use 注册",slug:"使用-vue-use-注册",children:[{level:3,title:"先将组件封装成插件",slug:"先将组件封装成插件",children:[]}]}],filePathRelative:"vue-cli/vue-cli-99-杂项.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},90072:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(66252).uE)('<h2 id="引入-css" tabindex="-1"><a class="header-anchor" href="#引入-css" aria-hidden="true">#</a> 引入 CSS</h2><ul><li><p>全局引入</p><p>在 main.js 中引入。引入的 .css 文件中的样式将作用于全项目。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;./css/common.css&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>局部引入</p><p>在 .vue 中引入。引入的 .css 文件将作用于当前组件</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span>\n@<span class="token keyword">import</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">&#39;./css/common.css&#39;</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h2 id="插件机制-plugin" tabindex="-1"><a class="header-anchor" href="#插件机制-plugin" aria-hidden="true">#</a> 插件机制：Plugin</h2><p>我们之前所用的 <code>Vue.use</code> 其实是注册插件的一种方式。它也可以用来注册组件，这需要先把组件封装成插件。</p><h3 id="老办法" tabindex="-1"><a class="header-anchor" href="#老办法" aria-hidden="true">#</a> 老办法</h3><p>在 components 文件夹中写好组件名 <code>.vue</code> 文件，然后在将组件名暴露出去</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;组件名&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>然后在 main.js 中（由于是全局组件）调用这个组件名来注册它</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> 组件 <span class="token keyword">from</span> <span class="token string">&#39;路径&#39;</span>\nVue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>组件<span class="token punctuation">.</span>组件名<span class="token punctuation">,</span> 组件注册名<span class="token punctuation">)</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="使用-vue-use-注册" tabindex="-1"><a class="header-anchor" href="#使用-vue-use-注册" aria-hidden="true">#</a> 使用 Vue.use 注册</h2><blockquote><p>你可以观察一下通过 <code>vue add axios</code> 安装 Axios 插件之后，自动生成的代码。它就是使用的这种方式。</p></blockquote><h3 id="先将组件封装成插件" tabindex="-1"><a class="header-anchor" href="#先将组件封装成插件" aria-hidden="true">#</a> 先将组件封装成插件</h3><p>我们可以在 src/plugins 下创建 index.js 文件。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">&quot;@/views/about/About&quot;</span><span class="token punctuation">;</span>\n\nPlugin<span class="token punctuation">.</span><span class="token function-variable function">install</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">Vue<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;About&#39;</span><span class="token punctuation">,</span> About<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Plugin<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Plugin<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>在上面的代码中，切入点时 <code>Vue.use()</code> 方法。该方法用于向 Vue 注册插件，当你调用 use() 方法后，Vue 会检查该插件是否已经注册，如果还没有注册过，那么它会去调用 Plugin 的 install 方法。</p>',15),p={render:function(s,n){return e}}}}]);
"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[7933],{92152:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-6ccf282b",path:"/mybatis/83-MyBatis-%E9%AB%98%E7%BA%A7.html",title:"MyBatis 高级",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"MyBatis Generator 和 Example 对象",slug:"mybatis-generator-和-example-对象",children:[{level:3,title:"Mybatis Generator",slug:"mybatis-generator",children:[]},{level:3,title:"Mybatis Example 对象",slug:"mybatis-example-对象",children:[]}]},{level:2,title:"延迟加载",slug:"延迟加载",children:[{level:3,title:"立即加载",slug:"立即加载",children:[]},{level:3,title:"激进式延迟加载",slug:"激进式延迟加载",children:[]},{level:3,title:"真-延迟加载",slug:"真-延迟加载",children:[]}]},{level:2,title:"Mybatis 缓存",slug:"mybatis-缓存",children:[{level:3,title:"Mybatis 一级缓存",slug:"mybatis-一级缓存",children:[]},{level:3,title:"Mybatis 二级缓存",slug:"mybatis-二级缓存",children:[]}]}],filePathRelative:"mybatis/83-MyBatis-高级.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},41273:(n,a,s)=>{s.r(a),s.d(a,{default:()=>r});var t=s(66252);const p=(0,t.uE)('<h1 id="mybatis-高级" tabindex="-1"><a class="header-anchor" href="#mybatis-高级" aria-hidden="true">#</a> MyBatis 高级</h1><h2 id="mybatis-generator-和-example-对象" tabindex="-1"><a class="header-anchor" href="#mybatis-generator-和-example-对象" aria-hidden="true">#</a> MyBatis Generator 和 Example 对象</h2><h3 id="mybatis-generator" tabindex="-1"><a class="header-anchor" href="#mybatis-generator" aria-hidden="true">#</a> Mybatis Generator</h3><p>mybatis 属于『<strong>半自动 ORM 框架</strong>』，在使用这个框架中，工作量最大的就是书写 mapper 的映射文件，由于手动书写很容易出错，为此 mybatis 官方提供了 <em><strong>mybatis-generator</strong></em> 来帮我们自动生成文件。</p><p>早期的 mybatis-generator 的使用十分原始，使用起来非常麻烦。在开源社区的努力下，现在有多种方案能简化我们对 myBatis-generator 的使用：</p>',5),e=(0,t.Uk)("使用图形化工具，例如："),o={href:"https://github.com/zouzg/mybatis-generator-gui",target:"_blank",rel:"noopener noreferrer"},l=(0,t.Uk)("mybatis-generator-gui"),c=(0,t._)("li",null,[(0,t._)("p",null,[(0,t.Uk)("如果使用的是 Jetbrains IDEA 开发工具，那么可以使用 "),(0,t._)("em",null,[(0,t._)("strong",null,"Free Mybatis plugin")]),(0,t.Uk)(" 插件来进行图形化操作。")])],-1),u=(0,t._)("li",null,[(0,t._)("p",null,"使用 maven 的 mybatis-generator 插件，通过命令直接生成映射文件等内容。")],-1),i=(0,t.uE)('<p>这里推荐第三种方案：使用 maven 的 myabtis-generator 插件。</p><hr><p>在 Maven 中，有一个名为 <em><strong>mybatis-generator-maven-plugin</strong></em> 的第三方插件，它能够将 mybatis-genetrator 的功能纳入到 Maven 体系中，允许你通过一条 maven 命令去生成相关的 JaveBean、DAO 接口和 Mapper 映射文件，以简化对 mytabis-generator 的使用。</p><h4 id="pom-xml-配置" tabindex="-1"><a class="header-anchor" href="#pom-xml-配置" aria-hidden="true">#</a> pom.xml 配置</h4><p>在项目的 <em><strong>pom.xml</strong></em> 文件中的 <em><strong>build</strong></em> &gt; <em><strong>plugins</strong></em> 中加入如下内容：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-generator-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.4.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 不要低于 1.3.7 版本 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${mysql.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-generator-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.4.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 不要低于 1.3.7 版本 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- 具体的、更多的参数说明见官网 http://mybatis.org/generator/running/runningWithMaven.html --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>verbose</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>verbose</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 允许移动生成的文件 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>overwrite</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>overwrite</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 是否覆盖 --&gt;</span>\n        <span class="token comment">&lt;!-- 自动生成的配置 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configurationFile</span><span class="token punctuation">&gt;</span></span>src/main/resources/mybatis/mybatis-generator-config.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configurationFile</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>mybatis-generator-maven-plugin 依赖于两个包：</p><ul><li><p>mybatis-generator-core</p><p>mybatis-generator-core 是『自动生成』功能的实现者和提供者，mybatis-generator-maven-plugin 是在『利用』它的这个功能。</p></li><li><p>mysql-connector-java</p><p>本质上是因为 mybatis-generator-core 在『自动生成』JavaBean 时，需要去数据库中查询表的相关信息，去『求』表的列名并以此为依据命名你的 JavaBean 的属性。很显然因为需要连接数据库，所以这里需要有数据库驱动包。</p></li></ul><p>mybatis-generator 要能正常工作，需要你提供一个配置文件。在这个配置文件中，你去『告诉』mybatis-generator 去『自动生成』时的相关细节。</p><blockquote><p>另外，你还可以将 mybatis-generator:generate 命令绑定到 maven 的 package 命令中。这样，当你去执行 <em><code>mvn package</code></em> 命令时也会触发 mybatis-generator:generate 命令：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-generator-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.4.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>Generate MyBatis Artifacts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">&gt;</span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>generate<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></blockquote><h4 id="mybatis-generator-config-xml-配置" tabindex="-1"><a class="header-anchor" href="#mybatis-generator-config-xml-配置" aria-hidden="true">#</a> mybatis-generator-config.xml 配置</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">generatorConfiguration</span>\n        <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span>\n        <span class="token string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatorConfiguration</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token comment">&lt;!-- 数据库驱动包位置 --&gt;</span>\n    <span class="token comment">&lt;!-- 由于在 pom.xml 中加入插件时已经配置数据库驱动包，所以此处不必配置了 --&gt;</span>\n    <span class="token comment">&lt;!--     \n        &lt;classPathEntry location=&quot;C:\\Users\\59960549\\.m2\\repository\\mysql\\mysql-connector-java\\5.1.47\\mysql-connector-java-5.1.47.jar&quot; /&gt;\n    --&gt;</span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scott<span class="token punctuation">&quot;</span></span> <span class="token attr-name">targetRuntime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MyBatis3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token comment">&lt;!-- 覆盖生成 XML 文件的 Bug 解决 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>commentGenerator</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!-- 去掉注解中的生成日期 --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suppressDate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n            <span class="token comment">&lt;!--关闭注释 --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suppressAllComments<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>commentGenerator</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token comment">&lt;!--数据库链接地址账号密码--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdbcConnection</span> <span class="token attr-name">driverClass</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mysql.cj.jdbc.Driver<span class="token punctuation">&quot;</span></span>\n                        <span class="token attr-name">connectionURL</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jdbc:mysql://localhost:3306/scott?useSSL=false<span class="token entity named-entity" title="&amp;">&amp;amp;</span>serverTimezone=UTC<span class="token punctuation">&quot;</span></span>\n                        <span class="token attr-name">userId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span>\n                        <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdbcConnection</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaTypeResolver</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--\n            true： 无论什么情况，都是使用BigDecimal对应DECIMAL和 NUMERIC数据类型\n            false： 默认值,\n                scale&gt;0;length&gt;18：使用BigDecimal;\n                scale=0;length[10,18]：使用Long；\n                scale=0;length[5,9]：使用Integer；\n                scale=0;length&lt;5：使用Short；\n            --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>forceBigDecimals<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaTypeResolver</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token comment">&lt;!-- PO 类的相关设置 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaModelGenerator</span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>src/main/java<span class="token punctuation">&quot;</span></span>\n                            <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.demo.pojo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!-- 在 targetPackage 的基础上，根据数据库的 schema 再生成一层 package，最终生成的类放在这个 package下，默认为false  --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>enableSubPackages<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>trimStrings<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaModelGenerator</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token comment">&lt;!-- Mapper.xml 配置文件的相关设置 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sqlMapGenerator</span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>src/main/resources<span class="token punctuation">&quot;</span></span>\n                         <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>enableSubPackages<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sqlMapGenerator</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token comment">&lt;!-- DAO 接口的相关设置--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaClientGenerator</span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>src/main/java<span class="token punctuation">&quot;</span></span>\n                             <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.demo.dao<span class="token punctuation">&quot;</span></span>\n                             <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>XMLMAPPER<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>enableSubPackages<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaClientGenerator</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token comment">&lt;!--生成对应表及类名--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>department<span class="token punctuation">&quot;</span></span> <span class="token attr-name">catalog</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scott<span class="token punctuation">&quot;</span></span>\n               <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Department<span class="token punctuation">&quot;</span></span>\n               <span class="token attr-name">mapperName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DepartmentDao<span class="token punctuation">&quot;</span></span>\n               <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Department<span class="token punctuation">&quot;</span></span>\n               <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>\n               <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>\n               <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>\n               <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ignoreQualifiersAtRuntime<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>generatorConfiguration</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br></div></div><h3 id="mybatis-example-对象" tabindex="-1"><a class="header-anchor" href="#mybatis-example-对象" aria-hidden="true">#</a> Mybatis Example 对象</h3><p>Example 对象是一种简化条件查询的方案。通过它，你避免去编写大量的 DAO 中的 <em><strong>selectByXxx()</strong></em> 方法。</p><h4 id="简单的情况" tabindex="-1"><a class="header-anchor" href="#简单的情况" aria-hidden="true">#</a> 简单的情况</h4><p>这里的简单情况指的是：没有，或只有 <em><strong>and</strong></em> 关系：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">EmployeeExample</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EmployeeExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nexample<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">andEmpnoEqualTo</span><span class="token punctuation">(</span><span class="token number">7369</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">andSalGreaterThanOrEqualTo</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">andSalLessThan</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> dao<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><em><strong>or()</strong></em> 方法是一个更通用的形式，可以用于实现任意的查询条件。其原理在于，任何一个复杂的查询语句，总能写成如下形式：</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">where</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token operator">and</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token operator">and</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token operator">and</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token operator">and</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="复杂的情况" tabindex="-1"><a class="header-anchor" href="#复杂的情况" aria-hidden="true">#</a> 复杂的情况</h4><p>这里的复杂情况指的是：有 <em><strong>or</strong></em> 关系，甚至是 <em><strong>and</strong></em> 和 <em><strong>or</strong></em> 混用。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">TestTableExample</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestTableExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 第 1 个括号中的两个并列条件</span>\nexample<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">andAaaEqualTo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">andBbbIsNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 第 2 个括号中的两个并列条件</span>\nexample<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">andCccNotEqualTo</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">andDddIsNotNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 第 3 个括号中的唯一的条件</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nlist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nexample<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">andEeeIn</span><span class="token punctuation">(</span>field5Values<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 第 4 个括号中的唯一的条件</span>\nexample<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">andFffBetween</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>相当于</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">where</span> <span class="token punctuation">(</span>aaa <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">and</span> bbb <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">)</span>\n     <span class="token operator">or</span> <span class="token punctuation">(</span>ccc <span class="token operator">!=</span> <span class="token number">9</span> <span class="token operator">and</span> ddd <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">)</span>\n     <span class="token operator">or</span> <span class="token punctuation">(</span>eee <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n     <span class="token operator">or</span> <span class="token punctuation">(</span>fff <span class="token operator">between</span> <span class="token number">3</span> <span class="token operator">and</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="延迟加载" tabindex="-1"><a class="header-anchor" href="#延迟加载" aria-hidden="true">#</a> 延迟加载</h2><p>如果一个对象关联另一个对象，那么在查询 A 对象的时候，会去关联查询 B 对象。</p><p>何时查询（加载）B 对象分为三种时机：</p><ul><li>立即加载</li><li>激进式延迟加载</li><li>延迟加载</li></ul><h3 id="立即加载" tabindex="-1"><a class="header-anchor" href="#立即加载" aria-hidden="true">#</a> 立即加载</h3><p>MyBaits 默认是立即加载，即在查询 A 对象的时候，会立即查询其关联的 B 对象。如果，B 对象也有关联对象，例如 C 对象，那么还会立即查询 C 对象，... 因此类推，直到把所有有关联关系的数据全部查询出来。</p><h3 id="激进式延迟加载" tabindex="-1"><a class="header-anchor" href="#激进式延迟加载" aria-hidden="true">#</a> 激进式延迟加载</h3><p>通过设置，可以启用延迟加载：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lazyLoadingEnabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>启用延迟加载之后，Mybatis 又是默认的激进地延迟加载。</p><p>Mybatis 内部会进行某种规则判断，从而使得激进式的延迟加载，有时候等同于立即加载，有时候等同于普通的延迟加载。</p><h3 id="真-延迟加载" tabindex="-1"><a class="header-anchor" href="#真-延迟加载" aria-hidden="true">#</a> 真-延迟加载</h3><p>可以再通过配置关闭掉激进地延迟加载，从而进入普通的延迟加载：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lazyLoadingEnabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>aggressiveLazyLoading<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>普通的延迟加载只会在你真正用到 A 对象的 B 属性时，再去查询/加载 B 对象。</p><h2 id="mybatis-缓存" tabindex="-1"><a class="header-anchor" href="#mybatis-缓存" aria-hidden="true">#</a> Mybatis 缓存</h2><h3 id="mybatis-一级缓存" tabindex="-1"><a class="header-anchor" href="#mybatis-一级缓存" aria-hidden="true">#</a> Mybatis 一级缓存</h3><h4 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h4><p>MyBatis 提供了查询缓存来缓存数据，从而达到提高查询新能的要求。MyBatis 的缓存分为一级缓存和二级缓存。</p><p>MyBatis 的一级缓存是 SqlSession 级别的缓存（<small>在操作数据库时需要构造 SqlSession 对象</small>），每个 SqlSession 对象中都有一个 HashMap 对象用于缓存数据，不同的 SqlSession 之间缓存的数据互不影响。</p><blockquote><p>提前说明一下，当 mybatis 与 spring 整合后，<strong>如果没有事务，一级缓存是失效的！</strong></p><p>原因就是两者结合后，sqlsession 如果发现当前没有事务，那么每执行一个 mapper 方法之后，sqlsession 就被关闭了<small>（ <em><code>session.close()</code></em> ）</small>。</p><p>所以记得给 Service 的方法的脑袋上面加 <em><strong>@Transactional</strong></em> 。</p></blockquote><p>在参数和 SQL 完全相同的情况下，使用同一个 SqlSession 对象调用同一个 Mapper 方法，往往只执行一次 SQL 语句。因为如果没有声明需要刷新缓存并且缓存没有超时，SqlSession 都只会取出当前缓存的数据<small>，而不是执行 SQL 语句</small>。</p><p>如果 SqlSession 执行了 DML 操作，并提交数据库，Mybatis 会清空 SqlSession 中的一级缓存，这样做的目的是保证缓存中存储的数据是最新的，避免出现脏读现象。</p><h4 id="刷新缓存的时机" tabindex="-1"><a class="header-anchor" href="#刷新缓存的时机" aria-hidden="true">#</a> 刷新缓存的时机</h4><ul><li><p>如果 SqlSession 调用了 <em><strong>close</strong></em> 方法，则一级缓存不可用/销毁。</p></li><li><p>如果 SqlSession 调用了 <em><strong>clearCache</strong></em> 方法，则一级缓存中缓存的数据被清空。</p></li><li><p>如果 SqlSession 执行了一个 DML 操作，则一级缓存中缓存的数据被清空。</p></li></ul><h3 id="mybatis-二级缓存" tabindex="-1"><a class="header-anchor" href="#mybatis-二级缓存" aria-hidden="true">#</a> Mybatis 二级缓存</h3><p>二级缓存是 Mapper 级别<small>（也叫 namespace 级别）</small>的缓存，同样使用 HashMap 进行数据存储。</p><ul><li><p>二级缓存是以 namespace 为单位的，不同的 namespace 下的操作相互隔离。</p></li><li><p>增删改操作会清空 namespace 下的全部缓存。</p></li></ul><p>如果开启了二级缓存，那么在关闭 sqlsession 后，会把该 sqlsession 一级缓存中的数据添加到 namespace 的二级缓存中。</p><p>二级缓存比一级缓存作用域更大，多个 sqlsession 可以共用二级缓存，即，二级缓存是跨 sqlsession 的。</p><blockquote><p><small>例如，关闭一个 sqlsession 之后，打开一个新的 sqlsession，执行同一条 sql 语句，会利用上一次的缓存数据。</small></p></blockquote><p>mybatis <strong>默认没有开启二级缓存</strong> ，需要在配置中进行配置才能使用。打开二级缓存分为三步：</p><ol><li><p>打开二级缓存总开关</p></li><li><p>打开需要使用二级缓存的 mapper 的开关。</p></li><li><p>POJO 序列化</p></li></ol><h4 id="打开二级缓存总开关" tabindex="-1"><a class="header-anchor" href="#打开二级缓存总开关" aria-hidden="true">#</a> 打开二级缓存总开关</h4><p>打开总开关，只需要在 mybatis 总配置文件中加入一行设置</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!--开启二级缓存--&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cacheEnabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="打开需要使用二级缓存的-mapper-的开关。" tabindex="-1"><a class="header-anchor" href="#打开需要使用二级缓存的-mapper-的开关。" aria-hidden="true">#</a> 打开需要使用二级缓存的 mapper 的开关。</h4><p>在需要开启二级缓存的 <em><strong>mapper.xml</strong></em> 中加入 caceh 标签</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span> <span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="pojo-序列化" tabindex="-1"><a class="header-anchor" href="#pojo-序列化" aria-hidden="true">#</a> POJO 序列化</h4><p>让需要使用二级缓存的 POJO 类实现 Serializable 接口，如</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Department</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>通过之前三步操作就可以使用二级缓存了。</p>',67),r={render:function(n,a){const s=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("ol",null,[(0,t._)("li",null,[(0,t._)("p",null,[e,(0,t._)("a",o,[l,(0,t.Wm)(s)])])]),c,u]),i],64)}}}}]);
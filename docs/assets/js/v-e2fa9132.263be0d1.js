"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[457],{54040:(a,n,s)=>{s.r(n),s.d(n,{data:()=>e});const e={key:"v-e2fa9132",path:"/other/08-sharding-proxy.html",title:"Sharding Proxy",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"1. 下载安装",slug:"_1-下载安装",children:[]},{level:2,title:"2. 配置",slug:"_2-配置",children:[]},{level:2,title:"3. 使用",slug:"_3-使用",children:[]}],filePathRelative:"other/08-sharding-proxy.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},56087:(a,n,s)=>{s.r(n),s.d(n,{default:()=>x});var e=s(66252);const r=(0,e._)("h1",{id:"sharding-proxy",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#sharding-proxy","aria-hidden":"true"},"#"),(0,e.Uk)(" Sharding Proxy")],-1),p=(0,e._)("p",null,"sharding-proxy 是 Sharding Sphere 家族中的第二个产品。",-1),t=(0,e._)("p",null,"它是透明化的数据库代理端，提供封装了数据库二进制协议的服务端版本，用于完成对异构语言的支持。 目前先提供 MySQL / PostgreSQL 版本。",-1),l=(0,e._)("blockquote",null,[(0,e._)("p",null,"MyCat 也是这种形式的数据库代理。")],-1),o=(0,e._)("h2",{id:"_1-下载安装",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#_1-下载安装","aria-hidden":"true"},"#"),(0,e.Uk)(" 1. 下载安装")],-1),i=(0,e._)("p",null,"从 Apache 官网下载 sharding-proxy：",-1),c={href:"https://www.apache.org/dyn/closer.cgi?path=incubator/shardingsphere/4.0.1/apache-shardingsphere-incubating-4.0.1-sharding-proxy-bin.tar.gz",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("4.0.1"),h={href:"https://www.apache.org/dyn/closer.cgi?path=shardingsphere/4.1.0/apache-shardingsphere-4.1.0-sharding-proxy-bin.tar.gz",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)("4.1.0"),g=(0,e.uE)('<p>将其解压到本机的某个目录下。</p><blockquote><p>在 Windows 上解压时可能会出现这样的一个问题，由于文件的路径名过长，导致文件的名称在解压过程中被截断。例如，<code>xxx.jar</code> 会截断成 <code>xxx.j</code>，甚至更短。从而导致运行 sharding-prxoy 时，它认为有些文件不存在，而启动报错。</p></blockquote><h2 id="_2-配置" tabindex="-1"><a class="header-anchor" href="#_2-配置" aria-hidden="true">#</a> 2. 配置</h2><p>sharding-proxy 是数据库代理，即它会伪装成是一个数据库，在使用 shrind-proxy 之后，我们以后是直接面对 sharding-proxy，间接使用 MySQL 。</p><p>sharding-proxy 的配置都在 <em><strong>conf</strong></em> 目录下，其下的配置主要『回答』两方面的问题：</p><ul><li><p>作为伪装的数据库，我们需要以什么用户名和密码连上 sharding-proxy。这个『问题的答案』体现在 <em><strong>server.yaml</strong></em> 配置文件中。</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">authentication</span><span class="token punctuation">:</span>\n<span class="token key atrule">users</span><span class="token punctuation">:</span>\n  <span class="token key atrule">root</span><span class="token punctuation">:</span>\n    <span class="token key atrule">password</span><span class="token punctuation">:</span> root\n  <span class="token key atrule">sharding</span><span class="token punctuation">:</span>\n    <span class="token key atrule">password</span><span class="token punctuation">:</span> sharding \n    <span class="token key atrule">authorizedSchemas</span><span class="token punctuation">:</span> scott\n  <span class="token key atrule">tom</span><span class="token punctuation">:</span>\n    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123</span>\n    <span class="token key atrule">authorizedSchemas</span><span class="token punctuation">:</span> xxx<span class="token punctuation">,</span>yyy<span class="token punctuation">,</span>zzz\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li><li><p>作为伪装的数据库，sharding-proxy 中有哪些 database，这个/这些 databse 的真实为止又是在哪个 MySQL 的哪个 database 中。这个『问题的答案』体现在 <em><strong>config-xxx.yaml</strong></em> 配置文件中。</p><p>sharding-proxy 中的每一个 database 都要有一个独立的 config-xxx.yaml 配置文件。反而言之，每一个 config-xxx.xml 配置文件中配置的都是专门针对于某个 database 的相关配置。</p><p>sharding-proxy 和 sharding-jdbc 的概念一脉相承，config-xxx.yaml 配置文件中的相关配置内容和 sharding-jdbc 中的配置几乎一样。</p></li></ul><h2 id="_3-使用" tabindex="-1"><a class="header-anchor" href="#_3-使用" aria-hidden="true">#</a> 3. 使用</h2><p>配置完成后通过 start.bat / start.sh 启动 sharding-prxoy ，sharing-proxy 启动后占用 <em><strong>3307</strong></em> 端口。</p><p>使用任意一款 MySQL 客户端都可连接到 sharding-proxy，注意连接端口现在是 <em><strong>3307</strong></em> 。</p><p>连上 sharding-proxy 之后，你在 sharding-proxy 中看到的、操作到的都是逻辑库、逻辑表。</p>',10),x={render:function(a,n){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[r,p,t,l,o,i,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",c,[u,(0,e.Wm)(s)])]),(0,e._)("li",null,[(0,e._)("a",h,[d,(0,e.Wm)(s)])])]),g],64)}}}}]);
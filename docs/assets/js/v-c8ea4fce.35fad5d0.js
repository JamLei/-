"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[4035],{25345:(t,e,o)=>{o.r(e),o.d(e,{data:()=>n});const n={key:"v-c8ea4fce",path:"/css/05-%E6%96%87%E6%9C%AC%E7%9B%B8%E5%85%B3%E5%B1%9E%E6%80%A7.html",title:"文本相关属性",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"css/05-文本相关属性.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},98283:(t,e,o)=>{o.r(e),o.d(e,{default:()=>r});const n=(0,o(66252).uE)('<h1 id="文本相关属性" tabindex="-1"><a class="header-anchor" href="#文本相关属性" aria-hidden="true">#</a> 文本相关属性</h1><p><strong>font-size</strong> 属性用于指定字体的大小。可以使用多种方式指定字体的大小，常见三种：</p><ul><li><p>像素值。它的表示方式是数值后加上单位标志 px 。</p></li><li><p>百分比。百分比数值总是相对于其父元素字体的大小。</p></li><li><p>EM 值。em 值总是相对于其父元素字体的大小。</p></li></ul><p>浏览器显示字体大小的基准点是 <em><strong><code>&lt;body&gt;</code></strong></em> 元素。body 元素的字体大小是 16px、100% 和 1em 。</p><p>元素文本的粗体显示靠 <strong>font-weight</strong> 属性。其属性值为 <strong><code>normal | bold</code></strong> 。</p><p>元素文本的斜体显示靠 <strong>font-style</strong> 属性。其属性值为 <strong><code>normal | italic | oblique</code></strong> 。</p><p><em>行间距</em> 是指本行文字的上缘离上一行文字下缘之间的距离。一行文字的行高，取决于字体大小加上行间距的大小。</p><p>设置 <strong>font-size</strong> 会影响行高，因为它改变字体的大小，但它没有影响到行间距。</p><p><strong>line-height</strong> 属性直接设置行高，但是这个过程中字体的大小是不会变化的，所以它是通过改变行间距来实现控制行高。</p><p><em><strong>注意</strong></em>，可以直接设置 <em><strong>行高</strong></em>，可以直接设置 <em><strong>字号</strong></em>，但是没有属性可以直接设置 <em><strong>行间距</strong></em>。逻辑上，<code>行高 - 字号 = 行间距</code>。</p><p><strong>text-align</strong> 属性用于控制元素的文本的对齐方式。该属性可选值为：<strong><code>left | right | center | justify</code></strong></p><p><strong>text-align</strong> 属性对内联元素无效，原因很简单，因为内联元素的矩形区域与其内容密切相关，无法直接指定。其盒子大小一定是“刚刚”好等于其内容大小，所以根本不存在对齐问题。</p><p><strong>vertical-align</strong> 属性名有非常大的误导性，它的目的并不是让你在块级元素中垂直对齐文本！</p><p>元素的垂直对齐问题，对于CSS而言是一个“世界级”的问题，有专门的解决方案。并不是 <strong>vertical-align</strong> 属性能解决的。</p>',14),r={render:function(t,e){return n}}}}]);
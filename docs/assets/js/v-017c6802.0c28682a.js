"use strict";(self.webpackChunkjava_note_vuepress2=self.webpackChunkjava_note_vuepress2||[]).push([[4789],{21385:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-017c6802",path:"/utility/spring-utils/PatternMatchUtils.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"utility/spring-utils/PatternMatchUtils.md",git:{updatedTime:1629711344e3,contributors:[{name:"hemiao",email:"hemiao3000@126.com",commits:1}]}}},65604:(s,n,a)=>{a.r(n),a.d(n,{default:()=>t});const e=(0,a(66252).uE)('<p><span class="title">PatternMatchUtils</span></p><p>PatternMatchUtils 类来自 <code>org.springframework.util</code> 包 。</p><p>它用于进行简单地正则匹配。</p><p>判断规则有：<code>xxx*</code>, <code>*xxx</code>, <code>*xxx*</code> 和 <code>xxx*yyy</code> 。 <code>*</code> 通配任意个字符。</p><p><code>注意</code>，正则规则字符串在前。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 判断字符串是否符合规则。</span>\n<span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">simpleMatch</span><span class="token punctuation">(</span><span class="token class-name">String</span> pattern<span class="token punctuation">,</span> <span class="token class-name">String</span> str<span class="token punctuation">)</span> \n\n<span class="token comment">// 判断字符串是否同时满足多个规则。</span>\n<span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">simpleMatch</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> patterns<span class="token punctuation">,</span> <span class="token class-name">String</span> str<span class="token punctuation">)</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',6),t={render:function(s,n){return e}}}}]);